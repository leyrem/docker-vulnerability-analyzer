{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2018-1000517_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2018-1000517] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "BusyBox project BusyBox wget version prior to commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e contains a Buffer Overflow vulnerability in Busybox wget that can result in heap buffer overflow. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in after commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-1000517_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2018-1000517] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "BusyBox project BusyBox wget version prior to commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e contains a Buffer Overflow vulnerability in Busybox wget that can result in heap buffer overflow. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in after commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-37434_3.8:zlib_1.2.11-r1",
              "shortDescription": {
                "text": "[CVE-2022-37434] 3.8:zlib 1.2.11-r1"
              },
              "help": {
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.2.12-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-7719_locutus_2.0.10",
              "shortDescription": {
                "text": "[CVE-2020-7719] locutus 2.0.10"
              },
              "help": {
                "text": "Versions of package locutus before 2.0.12 are vulnerable to prototype Pollution via the php.strings.parse_str function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [2.0.12]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-22945_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22945] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When sending data to an MQTT server, libcurl \u003c= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-14697_3.8:musl_1.1.19-r10",
              "shortDescription": {
                "text": "[CVE-2019-14697] 3.8:musl 1.1.19-r10"
              },
              "help": {
                "text": "musl libc through 1.1.23 has an x87 floating-point stack adjustment imbalance, related to the math/i386/ directory. In some cases, use of this library could introduce out-of-bounds writes that are not present in an application's source code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.1.19-r11]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-36159_3.8:apk-tools_2.10.1-r0",
              "shortDescription": {
                "text": "[CVE-2021-36159] 3.8:apk-tools 2.10.1-r0"
              },
              "help": {
                "text": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [2.12.6-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-3862_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-3862] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "An out of bounds read flaw was discovered in libssh2 before 1.8.1 in the way SSH_MSG_CHANNEL_REQUEST packets with an exit status message and no payload are parsed. A remote attacker who compromises a SSH server may be able to cause a Denial of Service or read data in the client memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-23521_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2022-23521] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is distributed revision control system. gitattributes are a mechanism to allow defining attributes for paths. These attributes can be defined by adding a `.gitattributes` file to the repository, which contains a set of file patterns and the attributes that should be set for paths matching this pattern. When parsing gitattributes, multiple integer overflows can occur when there is a huge number of path patterns, a huge number of attributes for a single pattern, or when the declared attribute names are huge. These overflows can be triggered via a crafted `.gitattributes` file that may be part of the commit history. Git silently splits lines longer than 2KB when parsing gitattributes from a file, but not when parsing them from the index. Consequentially, the failure mode depends on whether the file exists in the working tree, the index or both. This integer overflow can result in arbitrary heap reads and writes, which may result in remote code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. There are no known workarounds for this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.39.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-41903_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2022-41903] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is distributed revision control system. `git log` can display commits in an arbitrary format using its `--format` specifiers. This functionality is also exposed to `git archive` via the `export-subst` gitattribute. When processing the padding operators, there is a integer overflow in `pretty.c::format_and_pad_commit()` where a `size_t` is stored improperly as an `int`, and then added as an offset to a `memcpy()`. This overflow can be triggered directly by a user running a command which invokes the commit formatting machinery (e.g., `git log --format=...`). It may also be triggered indirectly through git archive via the export-subst mechanism, which expands format specifiers inside of files within the repository during a git archive. This integer overflow can result in arbitrary heap writes, which may result in arbitrary code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. Users who are unable to upgrade should disable `git archive` in untrusted repositories. If you expose git archive via `git daemon`, disable it by running `git config --global daemon.uploadArch false`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.39.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-5482_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2019-5482] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "Heap buffer overflow in the TFTP protocol handler in cURL 7.19.4 to 7.65.3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.61.1-r3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-3861_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-3861] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "An out of bounds read flaw was discovered in libssh2 before 1.8.1 in the way SSH packets with a padding length value greater than the packet length are parsed. A remote attacker who compromises a SSH server may be able to cause a Denial of Service or read data in the client memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-3859_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-3859] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "An out of bounds read flaw was discovered in libssh2 before 1.8.1 in the _libssh2_packet_require and _libssh2_packet_requirev functions. A remote attacker who compromises a SSH server may be able to cause a Denial of Service or read data in the client memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-5482_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2019-5482] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "Heap buffer overflow in the TFTP protocol handler in cURL 7.19.4 to 7.65.3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.61.1-r3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-3858_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-3858] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "An out of bounds read flaw was discovered in libssh2 before 1.8.1 when a specially crafted SFTP packet is received from the server. A remote attacker who compromises a SSH server may be able to cause a Denial of Service or read data in the client memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-5481_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2019-5481] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "Double-free vulnerability in the FTP-kerberos code in cURL 7.52.0 to 7.65.3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.61.1-r3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-27224_@theia/preview_0.4.0",
              "shortDescription": {
                "text": "[CVE-2020-27224] @theia/preview 0.4.0"
              },
              "help": {
                "text": "In Eclipse Theia versions up to and including 1.2.0, the Markdown Preview (@theia/preview), can be exploited to execute arbitrary code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.6      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.3.0]   |"
              },
              "properties": {
                "security-severity": "9.6"
              }
            },
            {
              "id": "CVE-2018-19486_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2018-19486] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git before 2.19.2 on Linux and UNIX executes commands from the current working directory (as if '.' were at the end of $PATH) in certain cases involving the run_command() API and run-command.c, because there was a dangerous change from execvp to execv during 2017.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.1-r1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-22945_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22945] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When sending data to an MQTT server, libcurl \u003c= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-32207_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-32207] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When curl \u003c 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-1353_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2019-1353] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. When running Git in the Windows Subsystem for Linux (also known as \"WSL\") while accessing a working directory on a regular Windows drive, none of the NTFS protections were active.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.2-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-32207_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-32207] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When curl \u003c 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-5481_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2019-5481] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "Double-free vulnerability in the FTP-kerberos code in cURL 7.52.0 to 7.65.3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.61.1-r3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14697_3.8:musl-utils_1.1.19-r10",
              "shortDescription": {
                "text": "[CVE-2019-14697] 3.8:musl-utils 1.1.19-r10"
              },
              "help": {
                "text": "musl libc through 1.1.23 has an x87 floating-point stack adjustment imbalance, related to the math/i386/ directory. In some cases, use of this library could introduce out-of-bounds writes that are not present in an application's source code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.1.19-r11]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-35784_3.8:libressl2.7-libtls_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2023-35784] 3.8:libressl2.7-libtls 2.7.4-r0"
              },
              "help": {
                "text": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-46880_3.8:libressl2.7-libtls_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2021-46880] 3.8:libressl2.7-libtls 2.7.4-r0"
              },
              "help": {
                "text": "x509/x509_verify.c in LibreSSL before 3.4.2, and OpenBSD before 7.0 errata 006, allows authentication bypass because an error for an unverified certificate chain is sometimes discarded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-46880_3.8:libressl2.7-libcrypto_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2021-46880] 3.8:libressl2.7-libcrypto 2.7.4-r0"
              },
              "help": {
                "text": "x509/x509_verify.c in LibreSSL before 3.4.2, and OpenBSD before 7.0 errata 006, allows authentication bypass because an error for an unverified certificate chain is sometimes discarded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-35784_3.8:libressl2.7-libssl_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2023-35784] 3.8:libressl2.7-libssl 2.7.4-r0"
              },
              "help": {
                "text": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-46880_3.8:libressl2.7-libssl_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2021-46880] 3.8:libressl2.7-libssl 2.7.4-r0"
              },
              "help": {
                "text": "x509/x509_verify.c in LibreSSL before 3.4.2, and OpenBSD before 7.0 errata 006, allows authentication bypass because an error for an unverified certificate chain is sometimes discarded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-13619_locutus_2.0.10",
              "shortDescription": {
                "text": "[CVE-2020-13619] locutus 2.0.10"
              },
              "help": {
                "text": "php/exec/escapeshellarg in Locutus PHP through 2.0.11 allows an attacker to achieve code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-35784_3.8:libressl2.7-libcrypto_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2023-35784] 3.8:libressl2.7-libcrypto 2.7.4-r0"
              },
              "help": {
                "text": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-3156_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2021-3156] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "Sudo before 1.9.5p2 contains an off-by-one error that can result in a heap-based buffer overflow, which allows privilege escalation to root via \"sudoedit -s\" and a command-line argument that ends with a single backslash character.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.9.5_p2-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-27782_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27782] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27782_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27782] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-25032_3.8:zlib_1.2.11-r1",
              "shortDescription": {
                "text": "[CVE-2018-25032] 3.8:zlib 1.2.11-r1"
              },
              "help": {
                "text": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.2.11-r4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27534_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27534] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A path traversal vulnerability exists in curl \u003c8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-27534_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27534] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A path traversal vulnerability exists in curl \u003c8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-42465_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2023-42465] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "Sudo before 1.9.15 might allow row hammer attacks (for authentication bypass or privilege escalation) because application logic sometimes is based on not equaling an error value (instead of equaling a success value), and because the values do not resist flips of a single bit.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2023-29007_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2023-29007] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, a specially crafted `.gitmodules` file with submodule URLs that are longer than 1024 characters can used to exploit a bug in `config.c::git_config_copy_or_rename_section_in_file()`. This bug can be used to inject arbitrary configuration into a user's `$GIT_DIR/config` when attempting to remove the configuration section associated with that submodule. When the attacker injects configuration values which specify executables to run (such as `core.pager`, `core.editor`, `core.sshCommand`, etc.) this can lead to a remote code execution. A fix A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid running `git submodule deinit` on untrusted repositories or without prior inspection of any submodule sections in `$GIT_DIR/config`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Undetermined       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.40.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2024-37890_ws_5.2.2",
              "shortDescription": {
                "text": "[CVE-2024-37890] ws 5.2.2"
              },
              "help": {
                "text": "ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [5.2.4], [6.2.3], [7.5.10], [8.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-20679_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2018-20679] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "An issue was discovered in BusyBox before 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP server, client, and relay) allows a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to verification in udhcp_get_option() in networking/udhcp/common.c that 4-byte options are indeed 4 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.29.3-r10]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-45960_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-45960] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-20834_tar_2.2.1",
              "shortDescription": {
                "text": "[CVE-2018-20834] tar 2.2.1"
              },
              "help": {
                "text": "A vulnerability was found in node-tar before version 4.4.2 (excluding version 2.2.2). An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content. A patch has been applied to node-tar v2.2.2).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [2.2.2], [4.4.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-23392_locutus_2.0.10",
              "shortDescription": {
                "text": "[CVE-2021-23392] locutus 2.0.10"
              },
              "help": {
                "text": "The package locutus before 2.0.15 are vulnerable to Regular Expression Denial of Service (ReDoS) via the gopher_parsedir function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [2.0.15]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-5436_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2019-5436] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A heap buffer overflow in the TFTP receiving code allows for DoS or arbitrary code execution in libcurl versions 7.19.4 through 7.64.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.65.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-26237_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[CVE-2020-26237] highlight.js 9.12.0"
              },
              "help": {
                "text": "Highlight.js is a syntax highlighter written in JavaScript. Highlight.js versions before 9.18.2 and 10.1.2 are vulnerable to Prototype Pollution. A malicious HTML code block can be crafted that will result in prototype pollution of the base object's prototype during highlighting. If you allow users to insert custom HTML code blocks into your page/app via parsing Markdown code blocks (or similar) and do not filter the language names the user can provide you may be vulnerable. The pollution should just be harmless data but this can cause problems for applications not expecting these properties to exist and can result in strange behavior or application crashes, i.e. a potential DOS vector. If your website or application does not render user provided data it should be unaffected. Versions 9.18.2 and 10.1.2 and newer include fixes for this vulnerability. If you are using version 7 or 8 you are encouraged to upgrade to a newer release.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.7      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.1.2], [9.18.2]   |"
              },
              "properties": {
                "security-severity": "8.7"
              }
            },
            {
              "id": "CVE-2022-0144_shelljs_0.8.3",
              "shortDescription": {
                "text": "[CVE-2022-0144] shelljs 0.8.3"
              },
              "help": {
                "text": "shelljs is vulnerable to Improper Privilege Management",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [0.8.5]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2022-28391_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-28391] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.35.0-r7]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2019-9513_3.8:nghttp2-libs_1.32.0-r0",
              "shortDescription": {
                "text": "[CVE-2019-9513] 3.8:nghttp2-libs 1.32.0-r0"
              },
              "help": {
                "text": "Some HTTP/2 implementations are vulnerable to resource loops, potentially leading to a denial of service. The attacker creates multiple request streams and continually shuffles the priority of the streams in a way that causes substantial churn to the priority tree. This can consume excess CPU.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.39.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-1349_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2019-1349] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1350, CVE-2019-1352, CVE-2019-1354, CVE-2019-1387.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.2-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2020-8177_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8177] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.71.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-10773_yarn_1.12.3",
              "shortDescription": {
                "text": "[CVE-2019-10773] yarn 1.12.3"
              },
              "help": {
                "text": "In Yarn before 1.21.1, the package install functionality can be abused to generate arbitrary symlinks on the host filesystem by using specially crafted \"bin\" keys. Existing files could be overwritten depending on the current user permission set.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__7b8a51711c7ee68fef2ae68936aacd344ad8e7b93a675e1c814531219809ee88.tar `       | [1.22.0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-40330_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2021-40330] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "git_connect_git in connect.c in Git before 2.30.1 allows a repository path to contain a newline character, which may result in unexpected cross-protocol requests, as demonstrated by the git://localhost:1234/%0d%0a%0d%0aGET%20/%20HTTP/1.1 substring.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.26.3-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27775_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27775] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42384_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42384] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2019-3863_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-3863] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "A flaw was found in libssh2 before 1.8.1. A server could send a multiple keyboard interactive response messages whose total length are greater than unsigned char max characters. This value is used as an index to copy memory causing in an out of bounds memory write error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.1-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-46143_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-46143] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-42915_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-42915] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-3856_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-3856] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "An integer overflow flaw, which could lead to an out of bounds write, was discovered in libssh2 before 1.8.1 in the way keyboard prompt requests are parsed. A remote attacker who compromises a SSH server may be able to execute code on the client system when a user connects to the server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.1-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2020-5260_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2020-5260] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that contain an encoded newline can inject unintended values into the credential helper protocol stream, causing the credential helper to retrieve the password for one server (e.g., good.example.com) for an HTTP request being made to another server (e.g., evil.example.com), resulting in credentials for the former being sent to the latter. There are no restrictions on the relationship between the two, meaning that an attacker can craft a URL that will present stored credentials for any host to a host of their choosing. The vulnerability can be triggered by feeding a malicious URL to git clone. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The problem has been patched in the versions published on April 14th, 2020, going back to v2.17.x. Anyone wishing to backport the change further can do so by applying commit 9a6bbee (the full release includes extra checks for git fsck, but that commit is sufficient to protect clients against the vulnerability). The patched versions are: 2.17.4, 2.18.3, 2.19.4, 2.20.3, 2.21.2, 2.22.3, 2.23.2, 2.24.2, 2.25.3, 2.26.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27290_ssri_6.0.1",
              "shortDescription": {
                "text": "[CVE-2021-27290] ssri 6.0.1"
              },
              "help": {
                "text": "ssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [6.0.2], [7.1.1], [8.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-22926_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22926] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.67.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42386_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42386] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2023-28319_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-28319] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A use after free vulnerability exists in curl \u003cv8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27780_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27780] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "The curl URL parser wrongly accepts percent-encoded URL separators like '/'when decoding the host name part of a URL, making it a *different* URL usingthe wrong host name when it is later retrieved.For example, a URL like `http://example.com%2F127.0.0.1/`, would be allowed bythe parser and get transposed into `http://example.com/127.0.0.1/`. This flawcan be used to circumvent filters, checks and more.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-37701_tar_4.4.8",
              "shortDescription": {
                "text": "[CVE-2021-37701] tar 4.4.8"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.6      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [4.4.16], [5.0.8], [6.1.7]   |"
              },
              "properties": {
                "security-severity": "8.6"
              }
            },
            {
              "id": "CVE-2022-28391_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-28391] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.35.0-r7]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-42385_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42385] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-0778_3.8:libressl2.7-libssl_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.8:libressl2.7-libssl 2.7.4-r0"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [3.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-20679_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2018-20679] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "An issue was discovered in BusyBox before 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP server, client, and relay) allows a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to verification in udhcp_get_option() in networking/udhcp/common.c that 4-byte options are indeed 4 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.29.3-r10]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29458_3.8:ncurses-libs_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2022-29458] 3.8:ncurses-libs 6.1_p20180818-r1"
              },
              "help": {
                "text": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [6.3_p20220416-r0]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2023-38039_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-38039] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.3.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-0778_3.8:libressl2.7-libtls_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.8:libressl2.7-libtls 2.7.4-r0"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [3.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-23946_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2023-23946] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git, a revision control system, is vulnerable to path traversal prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8. By feeding a crafted input to `git apply`, a path outside the working tree can be overwritten as the user who is running `git apply`. A fix has been prepared and will appear in v2.39.2, v2.38.4, v2.37.6, v2.36.5, v2.35.7, v2.34.7, v2.33.7, v2.32.6, v2.31.7, and v2.30.8. As a workaround, use `git apply --stat` to inspect a patch before applying; avoid applying one that creates a symbolic link and then creates a file beyond the symbolic link.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.39.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28469_glob-parent_2.0.0",
              "shortDescription": {
                "text": "[CVE-2020-28469] glob-parent 2.0.0"
              },
              "help": {
                "text": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [5.1.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-22901_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22901] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.77.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-8177_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8177] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.71.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-42383_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42383] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-24765_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2022-24765] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git for Windows is a fork of Git containing Windows-specific patches. This vulnerability affects users working on multi-user machines, where untrusted parties have write access to the same hard disk. Those untrusted parties could create the folder `C:\\.git`, which would be picked up by Git operations run supposedly outside a repository while searching for a Git directory. Git would then respect any config in said Git directory. Git Bash users who set `GIT_PS1_SHOWDIRTYSTATE` are vulnerable as well. Users who installed posh-gitare vulnerable simply by starting a PowerShell. Users of IDEs such as Visual Studio are vulnerable: simply creating a new project would already read and respect the config specified in `C:\\.git\\config`. Users of the Microsoft fork of Git are vulnerable simply by starting a Git Bash. The problem has been patched in Git for Windows v2.35.2. Users unable to upgrade may create the folder `.git` on all drives where Git commands are run, and remove read/write access from those folders as a workaround. Alternatively, define or extend `GIT_CEILING_DIRECTORIES` to cover the _parent_ directory of the user profile, e.g. `C:\\Users` if the user profile is located in `C:\\Users\\my-user-name`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.35.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-30065_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-30065] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.35.0-r17]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-1350_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2019-1350] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1352, CVE-2019-1354, CVE-2019-1387.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.2-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-42379_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42379] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42381_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42381] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-0654_requestretry_3.1.0",
              "shortDescription": {
                "text": "[CVE-2022-0654] requestretry 3.1.0"
              },
              "help": {
                "text": "Exposure of Sensitive Information to an Unauthorized Actor in GitHub repository fgribreau/node-request-retry prior to 7.0.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [7.0.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29458_3.8:ncurses-terminfo-base_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2022-29458] 3.8:ncurses-terminfo-base 6.1_p20180818-r1"
              },
              "help": {
                "text": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [6.3_p20220416-r0]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2021-30139_3.8:apk-tools_2.10.1-r0",
              "shortDescription": {
                "text": "[CVE-2021-30139] 3.8:apk-tools 2.10.1-r0"
              },
              "help": {
                "text": "In Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [2.12.5-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-21300_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2021-21300] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is an open-source distributed revision control system. In affected versions of Git a specially crafted repository that contains symbolic links as well as files using a clean/smudge filter such as Git LFS, may cause just-checked out script to be executed while cloning onto a case-insensitive file system such as NTFS, HFS+ or APFS (i.e. the default file systems on Windows and macOS). Note that clean/smudge filters have to be configured for that. Git for Windows configures Git LFS by default, and is therefore vulnerable. The problem has been patched in the versions published on Tuesday, March 9th, 2021. As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. Likewise, if no clean/smudge filters such as Git LFS are configured globally (i.e. _before_ cloning), the attack is foiled. As always, it is best to avoid cloning repositories from untrusted sources. The earliest impacted version is 2.14.2. The fix versions are: 2.30.1, 2.29.3, 2.28.1, 2.27.1, 2.26.3, 2.25.5, 2.24.4, 2.23.4, 2.22.5, 2.21.4, 2.20.5, 2.19.6, 2.18.5, 2.17.62.17.6.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.30.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27290_ssri_5.3.0",
              "shortDescription": {
                "text": "[CVE-2021-27290] ssri 5.3.0"
              },
              "help": {
                "text": "ssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [6.0.2], [7.1.1], [8.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17636_@theia/mini-browser_0.4.0",
              "shortDescription": {
                "text": "[CVE-2019-17636] @theia/mini-browser 0.4.0"
              },
              "help": {
                "text": "In Eclipse Theia versions 0.3.9 through 0.15.0, one of the default pre-packaged Theia extensions is \"Mini-Browser\", published as \"@theia/mini-browser\" on npmjs.com. This extension, for its own needs, exposes a HTTP endpoint that allows to read the content of files on the host's filesystem, given their path, without restrictions on the requester's origin. This design is vulnerable to being exploited remotely through a DNS rebinding attack or a drive-by download of a carefully crafted exploit.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [0.16.0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-8169_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8169] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.71.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27780_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27780] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "The curl URL parser wrongly accepts percent-encoded URL separators like '/'when decoding the host name part of a URL, making it a *different* URL usingthe wrong host name when it is later retrieved.For example, a URL like `http://example.com%2F127.0.0.1/`, would be allowed bythe parser and get transposed into `http://example.com/127.0.0.1/`. This flawcan be used to circumvent filters, checks and more.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-5448_yarn_1.12.3",
              "shortDescription": {
                "text": "[CVE-2019-5448] yarn 1.12.3"
              },
              "help": {
                "text": "Yarn before 1.17.3 is vulnerable to Missing Encryption of Sensitive Data due to HTTP URLs in lockfile causing unencrypted authentication data to be sent over the network.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__7b8a51711c7ee68fef2ae68936aacd344ad8e7b93a675e1c814531219809ee88.tar `       | [1.17.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-22926_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22926] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.67.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-34435_@theia/mini-browser_0.4.0",
              "shortDescription": {
                "text": "[CVE-2021-34435] @theia/mini-browser 0.4.0"
              },
              "help": {
                "text": "In Eclipse Theia 0.3.9 to 1.8.1, the \"mini-browser\" extension allows a user to preview HTML files in an iframe inside the IDE. But with the way it is made it is possible for a previewed HTML file to trigger an RCE. This exploit only happens if a user previews a malicious file..",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.9.0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2019-19604_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2019-19604] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Arbitrary command execution is possible in Git before 2.20.2, 2.21.x before 2.21.1, 2.22.x before 2.22.2, 2.23.x before 2.23.1, and 2.24.x before 2.24.1 because a \"git submodule update\" operation can run commands found in the .gitmodules file of a malicious repository.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.24.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-23240_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2021-23240] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "selinux_edit_copy_tfiles in sudoedit in Sudo before 1.9.5 allows a local unprivileged user to gain file ownership and escalate privileges by replacing a temporary file with a symlink to an arbitrary file target. This affects SELinux RBAC support in permissive mode. Machines without SELinux are not vulnerable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.9.5-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-8286_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8286] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.74.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27775_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27775] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-1352_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2019-1352] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1350, CVE-2019-1354, CVE-2019-1387.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.2-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-28831_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-28831] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.33.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-37713_tar_2.2.1",
              "shortDescription": {
                "text": "[CVE-2021-37713] tar 2.2.1"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.6      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [4.4.18], [5.0.10], [6.1.9]   |"
              },
              "properties": {
                "security-severity": "8.6"
              }
            },
            {
              "id": "CVE-2021-33623_trim-newlines_1.0.0",
              "shortDescription": {
                "text": "[CVE-2021-33623] trim-newlines 1.0.0"
              },
              "help": {
                "text": "The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the .end() method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [3.0.1], [4.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-43307_semver-regex_1.0.0",
              "shortDescription": {
                "text": "[CVE-2021-43307] semver-regex 1.0.0"
              },
              "help": {
                "text": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the semver-regex npm package, when an attacker is able to supply arbitrary input to the test() method",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [3.1.4], [4.0.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39537_3.8:ncurses-libs_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2021-39537] 3.8:ncurses-libs 6.1_p20180818-r1"
              },
              "help": {
                "text": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [6.2_p20200530-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2019-1387_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2019-1387] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. Recursive clones are currently affected by a vulnerability that is caused by too-lax validation of submodule names, allowing very targeted attacks via remote code execution in recursive clones.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.2-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-0778_3.8:libressl2.7-libcrypto_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.8:libressl2.7-libcrypto 2.7.4-r0"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [3.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39537_3.8:ncurses-terminfo-base_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2021-39537] 3.8:ncurses-terminfo-base 6.1_p20180818-r1"
              },
              "help": {
                "text": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [6.2_p20200530-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2019-16776_npm_6.4.1",
              "shortDescription": {
                "text": "[CVE-2019-16776] npm 6.4.1"
              },
              "help": {
                "text": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to modify and/or gain access to arbitrary files on a user's system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [6.13.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-8285_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8285] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.74.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8231_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8231] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.72.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8286_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8286] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.74.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39537_3.8:ncurses-terminfo_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2021-39537] 3.8:ncurses-terminfo 6.1_p20180818-r1"
              },
              "help": {
                "text": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [6.2_p20200530-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2019-17498_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-17498] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "In libssh2 v1.9.0 and earlier versions, the SSH_MSG_DISCONNECT logic in packet.c has an integer overflow in a bounds check, enabling an attacker to specify an arbitrary (out-of-bounds) offset for a subsequent memory read. A crafted SSH server may be able to disclose sensitive information or cause a denial of service condition on the client system when a user connects to the server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.9.0-r1]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-29458_3.8:ncurses-terminfo_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2022-29458] 3.8:ncurses-terminfo 6.1_p20180818-r1"
              },
              "help": {
                "text": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [6.3_p20220416-r0]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2019-10742_axios_0.18.0",
              "shortDescription": {
                "text": "[CVE-2019-10742] axios 0.18.0"
              },
              "help": {
                "text": "Axios up to and including 0.18.0 allows attackers to cause a denial of service (application crash) by continuing to accepting content after maxContentLength is exceeded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [0.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-32803_tar_4.4.8",
              "shortDescription": {
                "text": "[CVE-2021-32803] tar 4.4.8"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [3.2.3], [4.4.15], [5.0.7], [6.1.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-25314_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-25314] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in copyString.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28469_glob-parent_3.1.0",
              "shortDescription": {
                "text": "[CVE-2020-28469] glob-parent 3.1.0"
              },
              "help": {
                "text": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [5.1.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42378_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42378] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2019-9511_3.8:nghttp2-libs_1.32.0-r0",
              "shortDescription": {
                "text": "[CVE-2019-9511] 3.8:nghttp2-libs 1.32.0-r0"
              },
              "help": {
                "text": "Some HTTP/2 implementations are vulnerable to window size manipulation and stream prioritization manipulation, potentially leading to a denial of service. The attacker requests a large amount of data from a specified resource over multiple streams. They manipulate window size and stream priority to force the server to queue the data in 1-byte chunks. Depending on how efficiently this data is queued, this can consume excess CPU, memory, or both.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.39.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-5747_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2019-5747] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "An issue was discovered in BusyBox through 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP client, server, and/or relay) might allow a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to assurance of a 4-byte length when decoding DHCP_SUBNET. NOTE: this issue exists because of an incomplete fix for CVE-2018-20679.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.30.1-r2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-32803_tar_4.4.6",
              "shortDescription": {
                "text": "[CVE-2021-32803] tar 4.4.6"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [3.2.3], [4.4.15], [5.0.7], [6.1.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2024-4068_braces_2.3.2",
              "shortDescription": {
                "text": "[CVE-2024-4068] braces 2.3.2"
              },
              "help": {
                "text": "The NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [3.0.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42382_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42382] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2019-14287_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2019-14287] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "In Sudo before 1.8.28, an attacker with access to a Runas ALL sudoer account can bypass certain policy blacklists and session PAM modules, and can cause incorrect logging, by invoking sudo with a crafted user ID. For example, this allows bypass of !root configuration, and USER= logging, for a \"sudo -u \\#$((0xffffffff))\" command.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.23-r3]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "XRAY-95279_acorn_6.1.1",
              "shortDescription": {
                "text": "[XRAY-95279] acorn 6.1.1"
              },
              "help": {
                "text": "Regular Expression Denial of Service in Acorn",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [5.7.4], [6.4.1], [7.1.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-8169_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8169] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.71.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-28831_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-28831] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.33.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-37890_ws_6.1.0",
              "shortDescription": {
                "text": "[CVE-2024-37890] ws 6.1.0"
              },
              "help": {
                "text": "ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [5.2.4], [6.2.3], [7.5.10], [8.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-37701_tar_4.4.6",
              "shortDescription": {
                "text": "[CVE-2021-37701] tar 4.4.6"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.6      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [4.4.16], [5.0.8], [6.1.7]   |"
              },
              "properties": {
                "security-severity": "8.6"
              }
            },
            {
              "id": "CVE-2018-20843_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2018-20843] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "In libexpat in Expat before 2.2.7, XML input including XML names that contain a large number of colons could make the XML parser consume a high amount of RAM and CPU resources while processing (enough to be usable for denial-of-service attacks).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.2.7-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-5436_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2019-5436] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A heap buffer overflow in the TFTP receiving code allows for DoS or arbitrary code execution in libcurl versions 7.19.4 through 7.64.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.65.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-43995_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2022-43995] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "Sudo 1.8.0 through 1.9.12, with the crypt() password backend, contains a plugins/sudoers/auth/passwd.c array-out-of-bounds error that can result in a heap-based buffer over-read. This can be triggered by arbitrary local users with access to Sudo by entering a password of seven characters or fewer. The impact could vary depending on the system libraries, compiler, and processor architecture.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.9.12-r1]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2021-42381_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42381] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2020-11008_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2020-11008] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. This bug is similar to CVE-2020-5260(GHSA-qm7j-c969-7j4q). The fix for that bug still left the door open for an exploit where _some_ credential is leaked (but the attacker cannot control which one). Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that are considered illegal as of the recently published Git versions can cause Git to send a \"blank\" pattern to helpers, missing hostname and protocol fields. Many helpers will interpret this as matching _any_ URL, and will return some unspecified stored password, leaking the password to an attacker's server. The vulnerability can be triggered by feeding a malicious URL to `git clone`. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The root of the problem is in Git itself, which should not be feeding blank input to helpers. However, the ability to exploit the vulnerability in practice depends on which helpers are in use. Credential helpers which are known to trigger the vulnerability: - Git's \"store\" helper - Git's \"cache\" helper - the \"osxkeychain\" helper that ships in Git's \"contrib\" directory Credential helpers which are known to be safe even with vulnerable versions of Git: - Git Credential Manager for Windows Any helper not in this list should be assumed to trigger the vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.4-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-0542_xterm_3.9.1",
              "shortDescription": {
                "text": "[CVE-2019-0542] xterm 3.9.1"
              },
              "help": {
                "text": "A remote code execution vulnerability exists in Xterm.js when the component mishandles special characters, aka \"Xterm Remote Code Execution Vulnerability.\" This affects xterm.js.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [3.10.1], [3.8.1], [3.9.2]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-28319_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-28319] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A use after free vulnerability exists in curl \u003cv8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42379_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42379] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-42915_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-42915] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-42384_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42384] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-3795_semver-regex_1.0.0",
              "shortDescription": {
                "text": "[CVE-2021-3795] semver-regex 1.0.0"
              },
              "help": {
                "text": "semver-regex is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [3.1.3], [4.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42380_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42380] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2019-1354_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2019-1354] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1350, CVE-2019-1352, CVE-2019-1387.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.2-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-42383_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42383] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2019-5747_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2019-5747] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "An issue was discovered in BusyBox through 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP client, server, and/or relay) might allow a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to assurance of a 4-byte length when decoding DHCP_SUBNET. NOTE: this issue exists because of an incomplete fix for CVE-2018-20679.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.30.1-r2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-3855_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-3855] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "An integer overflow flaw which could lead to an out of bounds write was discovered in libssh2 before 1.8.1 in the way packets are read from the server. A remote attacker who compromises a SSH server may be able to execute code on the client system when a user connects to the server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.1-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-22901_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22901] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.77.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-30065_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-30065] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.35.0-r17]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-42378_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42378] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-27290_ssri_6.0.0",
              "shortDescription": {
                "text": "[CVE-2021-27290] ssri 6.0.0"
              },
              "help": {
                "text": "ssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [6.0.2], [7.1.1], [8.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8231_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8231] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.72.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29187_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2022-29187] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is a distributed revision control system. Git prior to versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5, is vulnerable to privilege escalation in all platforms. An unsuspecting user could still be affected by the issue reported in CVE-2022-24765, for example when navigating as root into a shared tmp directory that is owned by them, but where an attacker could create a git repository. Versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5 contain a patch for this issue. The simplest way to avoid being affected by the exploit described in the example is to avoid running git as root (or an Administrator in Windows), and if needed to reduce its use to a minimum. While a generic workaround is not possible, a system could be hardened from the exploit described in the example by removing any such repository if it exists already and creating one as root to block any future attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.37.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-13173_fstream_1.0.11",
              "shortDescription": {
                "text": "[CVE-2019-13173] fstream 1.0.11"
              },
              "help": {
                "text": "fstream before 1.0.12 is vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink, will overwrite the system's file with the contents of the extracted file. The fstream.DirWriter() function is vulnerable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [1.0.12]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-39260_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2022-39260] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is an open source, scalable, distributed revision control system. `git shell` is a restricted login shell that can be used to implement Git's push/pull functionality via SSH. In versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4, the function that splits the command arguments into an array improperly uses an `int` to represent the number of entries in the array, allowing a malicious actor to intentionally overflow the return value, leading to arbitrary heap writes. Because the resulting array is then passed to `execv()`, it is possible to leverage this attack to gain remote code execution on a victim machine. Note that a victim must first allow access to `git shell` as a login shell in order to be vulnerable to this attack. This problem is patched in versions 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 and users are advised to upgrade to the latest version. Disabling `git shell` access via remote logins is a viable short-term workaround.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.38.1-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2020-8131_yarn_1.12.3",
              "shortDescription": {
                "text": "[CVE-2020-8131] yarn 1.12.3"
              },
              "help": {
                "text": "Arbitrary filesystem write vulnerability in Yarn before 1.22.0 allows attackers to write to any path on the filesystem and potentially lead to arbitrary code execution by forcing the user to install a malicious package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__7b8a51711c7ee68fef2ae68936aacd344ad8e7b93a675e1c814531219809ee88.tar `       | [1.22.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42385_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42385] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-37713_tar_4.4.8",
              "shortDescription": {
                "text": "[CVE-2021-37713] tar 4.4.8"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.6      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [4.4.18], [5.0.10], [6.1.9]   |"
              },
              "properties": {
                "security-severity": "8.6"
              }
            },
            {
              "id": "CVE-2021-37713_tar_4.4.6",
              "shortDescription": {
                "text": "[CVE-2021-37713] tar 4.4.6"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.6      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [4.4.18], [5.0.10], [6.1.9]   |"
              },
              "properties": {
                "security-severity": "8.6"
              }
            },
            {
              "id": "CVE-2023-38039_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-38039] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.3.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-13115_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-13115] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "In libssh2 before 1.9.0, kex_method_diffie_hellman_group_exchange_sha256_key_exchange in kex.c has an integer overflow that could lead to an out-of-bounds read in the way packets are read from the server. A remote attacker who compromises a SSH server may be able to disclose sensitive information or cause a denial of service condition on the client system when a user connects to the server. This is related to an _libssh2_check_length mistake, and is different from the various issues fixed in 1.8.1, such as CVE-2019-3855.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.9.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-42382_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42382] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2019-3857_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-3857] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "An integer overflow flaw which could lead to an out of bounds write was discovered in libssh2 before 1.8.1 in the way SSH_MSG_CHANNEL_REQUEST packets with an exit signal are parsed. A remote attacker who compromises a SSH server may be able to execute code on the client system when a user connects to the server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.1-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2020-11080_3.8:nghttp2-libs_1.32.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-11080] 3.8:nghttp2-libs 1.32.0-r0"
              },
              "help": {
                "text": "In nghttp2 before version 1.41.0, the overly large HTTP/2 SETTINGS frame payload causes denial of service. The proof of concept attack involves a malicious client constructing a SETTINGS frame with a length of 14,400 bytes (2400 individual settings entries) over and over again. The attack causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability. There is a workaround to this vulnerability. Implement nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS frame and the number of settings entries are large (e.g., \u003e 32), then drop the connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.41.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-15903_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2019-15903] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "In libexpat before 2.2.8, crafted XML input could fool the parser into changing from DTD parsing to document parsing too early; a consecutive call to XML_GetCurrentLineNumber (or XML_GetCurrentColumnNumber) then resulted in a heap-based buffer over-read.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.2.7-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42380_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42380] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-0355_simple-get_2.8.1",
              "shortDescription": {
                "text": "[CVE-2022-0355] simple-get 2.8.1"
              },
              "help": {
                "text": "Improper Removal of Sensitive Information Before Storage or Transfer in NPM simple-get prior to 4.0.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [2.8.2], [3.1.1], [4.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8285_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8285] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.74.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42386_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42386] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2020-7754_npm-user-validate_1.0.0",
              "shortDescription": {
                "text": "[CVE-2020-7754] npm-user-validate 1.0.0"
              },
              "help": {
                "text": "This affects the package npm-user-validate before 1.0.1. The regex that validates user emails took exponentially longer to process long input strings beginning with @ characters.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [1.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-18634_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2019-18634] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "In Sudo before 1.8.26, if pwfeedback is enabled in /etc/sudoers, users can trigger a stack-based buffer overflow in the privileged sudo process. (pwfeedback is a default setting in Linux Mint and elementary OS; however, it is NOT the default for upstream and many other packages, and would exist only if enabled by an administrator.) The attacker needs to deliver a long string to the stdin of getln() in tgetpass.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.23-r4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-1351_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2019-1351] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "A tampering vulnerability exists when Git for Visual Studio improperly handles virtual drive paths, aka 'Git for Visual Studio Tampering Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8116_dot-prop_4.2.0",
              "shortDescription": {
                "text": "[CVE-2020-8116] dot-prop 4.2.0"
              },
              "help": {
                "text": "Prototype pollution vulnerability in dot-prop npm package versions before 4.2.1 and versions 5.x before 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [4.2.1], [5.1.1]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2019-18684_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2019-18684] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "Sudo through 1.8.29 allows local users to escalate to root if they have write access to file descriptor 3 of the sudo process. This occurs because of a race condition between determining a uid, and the setresuid and openat system calls. The attacker can write \"ALL ALL=(ALL) NOPASSWD:ALL\" to /proc/#####/fd/3 at a time when Sudo is prompting for a password. NOTE: This has been disputed due to the way Linux /proc works. It has been argued that writing to /proc/#####/fd/3 would only be viable if you had permission to write to /etc/sudoers. Even with write permission to /proc/#####/fd/3, it would not help you write to /etc/sudoers",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2019-20454_3.8:pcre2_10.31-r0",
              "shortDescription": {
                "text": "[CVE-2019-20454] 3.8:pcre2 10.31-r0"
              },
              "help": {
                "text": "An out-of-bounds read was discovered in PCRE before 10.34 when the pattern \\X is JIT compiled and used to match specially crafted subjects in non-UTF mode. Applications that use PCRE to parse untrusted input may be vulnerable to this flaw, which would allow an attacker to crash the application. The flaw occurs in do_extuni_no_utf in pcre2_jit_compile.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-29415_ip_1.1.5",
              "shortDescription": {
                "text": "[CVE-2024-29415] ip 1.1.5"
              },
              "help": {
                "text": "The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-31012_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2022-31012] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git for Windows is a fork of Git that contains Windows-specific patches. This vulnerability in versions prior to 2.37.1 lets Git for Windows' installer execute a binary into `C:\\mingw64\\bin\\git.exe` by mistake. This only happens upon a fresh install, not when upgrading Git for Windows. A patch is included in version 2.37.1. Two workarounds are available. Create the `C:\\mingw64` folder and remove read/write access from this folder, or disallow arbitrary authenticated users to create folders in `C:\\`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2016-7076_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2016-7076] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "sudo before version 1.8.18p1 is vulnerable to a bypass in the sudo noexec restriction if application run via sudo executed wordexp() C library function with a user supplied argument. A local user permitted to run such application via sudo with noexec restriction could possibly use this flaw to execute arbitrary commands with elevated privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-42915_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-42915] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "Multiple issues were addressed by updating to curl version 8.4.0. This issue is fixed in macOS Ventura 13.6.4, macOS Sonoma 14.2, macOS Monterey 12.7.3, iOS 16.7.5 and iPadOS 16.7.5. Multiple issues in curl.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-42915_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-42915] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "Multiple issues were addressed by updating to curl version 8.4.0. This issue is fixed in macOS Ventura 13.6.4, macOS Sonoma 14.2, macOS Monterey 12.7.3, iOS 16.7.5 and iPadOS 16.7.5. Multiple issues in curl.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-37322_3.8:libgcc_6.4.0-r9",
              "shortDescription": {
                "text": "[CVE-2021-37322] 3.8:libgcc 6.4.0-r9"
              },
              "help": {
                "text": "GCC c++filt v2.26 was discovered to contain a use-after-free vulnerability via the component cplus-dem.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-37322_3.8:libstdc++_6.4.0-r9",
              "shortDescription": {
                "text": "[CVE-2021-37322] 3.8:libstdc++ 6.4.0-r9"
              },
              "help": {
                "text": "GCC c++filt v2.26 was discovered to contain a use-after-free vulnerability via the component cplus-dem.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-7090_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2023-7090] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "A flaw was found in sudo in the handling of ipa_hostname, where ipa_hostname from /etc/sssd/sssd.conf was not propagated in sudo. Therefore, it leads to privilege mismanagement vulnerability in applications, where client hosts retain privileges even after retracting them.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-24975_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2022-24975] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "The --mirror documentation for Git through 2.35.1 does not mention the availability of deleted content, aka the \"GitBleed\" issue. This could present a security risk if information-disclosure auditing processes rely on a clone operation without the --mirror option. Note: This has been disputed by multiple 3rd parties who believe this is an intended feature of the git binary and does not pose a security risk.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-46101_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2021-46101] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "In Git for windows through 2.34.1 when using git pull to update the local warehouse, git.cmd can be run directly.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-5443_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2019-5443] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A non-privileged user or program can put code and a config file in a known non-privileged path (under C:/usr/local/) that will make curl \u003c= 7.65.1 automatically run the code (as an openssl \"engine\") on invocation. If that curl is invoked by a privileged user it can do anything it wants.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-5443_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2019-5443] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A non-privileged user or program can put code and a config file in a known non-privileged path (under C:/usr/local/) that will make curl \u003c= 7.65.1 automatically run the code (as an openssl \"engine\") on invocation. If that curl is invoked by a privileged user it can do anything it wants.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-28321_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-28321] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "An improper certificate validation vulnerability exists in curl \u003cv8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-28321_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-28321] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "An improper certificate validation vulnerability exists in curl \u003cv8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-48795_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2023-48795] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Undetermined       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.11.0-r1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2018-16980_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2018-16980] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "dotCMS V5.0.1 has XSS in the /html/portlet/ext/contentlet/image_tools/index.jsp fieldName and inode parameters.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.64.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2024-29041_express_4.16.3",
              "shortDescription": {
                "text": "[CVE-2024-29041] express 4.16.3"
              },
              "help": {
                "text": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [4.19.2], [5.0.0-beta.3]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-4039_3.8:libgcc_6.4.0-r9",
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.8:libgcc 6.4.0-r9"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [13.2.1_git20231014-r0]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2017-16137_debug_0.8.1",
              "shortDescription": {
                "text": "[CVE-2017-16137] debug 0.8.1"
              },
              "help": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [2.6.9], [3.1.0], [3.2.7], [4.3.1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "XRAY-129954_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129954] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-33987_got_6.7.1",
              "shortDescription": {
                "text": "[CVE-2022-33987] got 6.7.1"
              },
              "help": {
                "text": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [11.8.5], [12.1.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-15608_yarn_1.12.3",
              "shortDescription": {
                "text": "[CVE-2019-15608] yarn 1.12.3"
              },
              "help": {
                "text": "The package integrity validation in yarn \u003c 1.19.0 contains a TOCTOU vulnerability where the hash is computed before writing a package to cache. It's not computed again when reading from the cache. This may lead to a cache pollution attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__7b8a51711c7ee68fef2ae68936aacd344ad8e7b93a675e1c814531219809ee88.tar `       | [1.19.0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "XRAY-129944_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129944] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129964_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129964] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-21670_markdown-it_8.4.2",
              "shortDescription": {
                "text": "[CVE-2022-21670] markdown-it 8.4.2"
              },
              "help": {
                "text": "markdown-it is a Markdown parser. Prior to version 1.3.2, special patterns with length greater than 50 thousand characterss could slow down the parser significantly. Users should upgrade to version 12.3.2 to receive a patch. There are no known workarounds aside from upgrading.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [12.3.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-27779_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27779] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl wrongly allows cookies to be set for Top Level Domains (TLDs) if thehost name is provided with a trailing dot.curl can be told to receive and send cookies. curl's \"cookie engine\" can bebuilt with or without [Public Suffix List](https://publicsuffix.org/)awareness. If PSL support not provided, a more rudimentary check exists to atleast prevent cookies from being set on TLDs. This check was broken if thehost name in the URL uses a trailing dot.This can allow arbitrary sites to set cookies that then would get sent to adifferent and unrelated site or domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-15366_ajv_6.5.4",
              "shortDescription": {
                "text": "[CVE-2020-15366] ajv 6.5.4"
              },
              "help": {
                "text": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [6.12.3]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-23916_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-23916] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "An allocation of resources without limits or throttling vulnerability exists in curl \u003cv7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "XRAY-129942_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129942] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-15366_ajv_6.10.0",
              "shortDescription": {
                "text": "[CVE-2020-15366] ajv 6.10.0"
              },
              "help": {
                "text": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [6.12.3]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "XRAY-129943_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129943] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-27537_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27537] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A double free vulnerability exists in libcurl \u003c8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "XRAY-129941_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129941] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-8244_bl_1.2.2",
              "shortDescription": {
                "text": "[CVE-2020-8244] bl 1.2.2"
              },
              "help": {
                "text": "A buffer over-read vulnerability exists in bl \u003c4.0.3, \u003c3.0.1, \u003c2.2.1, and \u003c1.2.3 which could allow an attacker to supply user input (even typed) that if it ends up in consume() argument and can become negative, the BufferList state can be corrupted, tricking it into exposing uninitialized memory via regular .slice() calls.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.2.3], [2.2.1], [3.0.1], [4.0.3]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "XRAY-129952_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129952] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-29060_color-string_1.5.3",
              "shortDescription": {
                "text": "[CVE-2021-29060] color-string 1.5.3"
              },
              "help": {
                "text": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in Color-String version 1.5.5 and below which occurs when the application is provided and checks a crafted invalid HWB string.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.5.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-46219_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-46219] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-22947_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22947] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When curl \u003e= 7.20.0 and \u003c= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-42375_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42375] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-28928_3.8:musl_1.1.19-r10",
              "shortDescription": {
                "text": "[CVE-2020-28928] 3.8:musl 1.1.19-r10"
              },
              "help": {
                "text": "In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and source character limit, as demonstrated by an invalid write access (buffer overflow).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.2.2_pre2-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-15095_npm_6.4.1",
              "shortDescription": {
                "text": "[CVE-2020-15095] npm 6.4.1"
              },
              "help": {
                "text": "Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like \"\u003cprotocol\u003e://[\u003cuser\u003e[:\u003cpassword\u003e]@]\u003chostname\u003e[:\u003cport\u003e][:][/]\u003cpath\u003e\". The password value is not redacted and is printed to stdout and also to any generated log files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.4      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [6.14.6]   |"
              },
              "properties": {
                "security-severity": "4.4"
              }
            },
            {
              "id": "CVE-2022-32205_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-32205] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl \u003c 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2022-27776_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27776] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "XRAY-129959_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129959] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129934_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129934] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129965_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129965] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-28928_3.8:musl-utils_1.1.19-r10",
              "shortDescription": {
                "text": "[CVE-2020-28928] 3.8:musl-utils 1.1.19-r10"
              },
              "help": {
                "text": "In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and source character limit, as demonstrated by an invalid write access (buffer overflow).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.2.2_pre2-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-28849_follow-redirects_1.7.0",
              "shortDescription": {
                "text": "[CVE-2024-28849] follow-redirects 1.7.0"
              },
              "help": {
                "text": "follow-redirects is an open source, drop-in replacement for Node's `http` and `https` modules that automatically follows redirects. In affected versions follow-redirects only clears authorization header during cross-domain redirect, but keep the proxy-authentication header which contains credentials too. This vulnerability may lead to credentials leak, but has been addressed in version 1.15.6. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-28320_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-28320] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A denial of service vulnerability exists in curl \u003cv8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-22947_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22947] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When curl \u003e= 7.20.0 and \u003c= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-23413_jszip_2.6.1",
              "shortDescription": {
                "text": "[CVE-2021-23413] jszip 2.6.1"
              },
              "help": {
                "text": "This affects the package jszip before 3.7.0. Crafting a new zip file with filenames set to Object prototype values (e.g __proto__, toString, etc) results in a returned object with a modified prototype instance.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [2.7.0], [3.7.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-22876_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22876] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.76.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-52426_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-52426] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "libexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.36.1-r27]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.36.1-r25]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-27535_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27535] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl \u003c8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "XRAY-129945_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129945] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-42365_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-30115_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-30115] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "Using its HSTS support, curl can be instructed to use HTTPS directly insteadof using an insecure clear-text HTTP step even when HTTP is provided in theURL. This mechanism could be bypassed if the host name in the given URL used atrailing dot while not using one when it built the HSTS cache. Or the otherway around - by having the trailing dot in the HSTS cache and *not* using thetrailing dot in the URL.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2023-26159_follow-redirects_1.7.0",
              "shortDescription": {
                "text": "[CVE-2023-26159] follow-redirects 1.7.0"
              },
              "help": {
                "text": "Versions of the package follow-redirects before 1.15.4 are vulnerable to Improper Input Validation due to the improper handling of URLs by the url.parse() function. When new URL() throws an error, it can be manipulated to misinterpret the hostname. An attacker could exploit this weakness to redirect traffic to a malicious site, potentially leading to information disclosure, phishing attacks, or other security breaches.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.15.4]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2019-16777_npm_6.4.1",
              "shortDescription": {
                "text": "[CVE-2019-16777] npm 6.4.1"
              },
              "help": {
                "text": "Versions of the npm CLI prior to 6.13.4 are vulnerable to an Arbitrary File Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. For example, if a package was installed globally and created a serve binary, any subsequent installs of packages that also create a serve binary would overwrite the previous serve binary. This behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [6.13.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2018-16980_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2018-16980] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "dotCMS V5.0.1 has XSS in the /html/portlet/ext/contentlet/image_tools/index.jsp fieldName and inode parameters.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.64.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-42366_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.36.1-r25]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-23915_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-23915] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32208_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-32208] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When curl \u003c 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-43552_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-43552] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A use after free vulnerability exists in curl \u003c7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.87.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "XRAY-129960_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129960] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-0853_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2024-0853] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-28162_@theia/messages_0.4.0",
              "shortDescription": {
                "text": "[CVE-2021-28162] @theia/messages 0.4.0"
              },
              "help": {
                "text": "In Eclipse Theia versions up to and including 0.16.0, in the notification messages there is no HTML escaping, so Javascript code can run.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.0.0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2022-39253_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2022-39253] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source's `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim's machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.38.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-0155_follow-redirects_1.7.0",
              "shortDescription": {
                "text": "[CVE-2022-0155] follow-redirects 1.7.0"
              },
              "help": {
                "text": "follow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.14.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-28168_axios_0.18.0",
              "shortDescription": {
                "text": "[CVE-2020-28168] axios 0.18.0"
              },
              "help": {
                "text": "Axios NPM package 0.21.0 contains a Server-Side Request Forgery (SSRF) vulnerability where an attacker is able to bypass a proxy by providing a URL that responds with a redirect to a restricted host or IP address.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [0.21.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "XRAY-129949_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129949] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-0853_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2024-0853] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "XRAY-129937_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129937] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129966_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129966] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-23915_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-23915] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "XRAY-129948_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129948] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-7608_yargs-parser_8.1.0",
              "shortDescription": {
                "text": "[CVE-2020-7608] yargs-parser 8.1.0"
              },
              "help": {
                "text": "yargs-parser could be tricked into adding or modifying properties of Object.prototype using a \"__proto__\" payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [13.1.2], [15.0.1], [18.1.1], [5.0.1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-4039_3.8:libstdc++_6.4.0-r9",
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.8:libstdc++ 6.4.0-r9"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [13.2.1_git20231014-r0]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-27538_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27538] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-35260_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-35260] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl can be told to parse a `.netrc` file for credentials. If that file endsin a line with 4095 consecutive non-white space letters and no newline, curlwould first read past the end of the stack-based buffer, and if the readworks, write a zero byte beyond its boundary.This will in most cases cause a segfault or similar, but circumstances might also cause different outcomes.If a malicious user can provide a custom netrc file to an application or otherwise affect its contents, this flaw could be used as denial-of-service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22876_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22876] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.76.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-22925_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22925] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-30115_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-30115] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "Using its HSTS support, curl can be instructed to use HTTPS directly insteadof using an insecure clear-text HTTP step even when HTTP is provided in theURL. This mechanism could be bypassed if the host name in the given URL used atrailing dot while not using one when it built the HSTS cache. Or the otherway around - by having the trailing dot in the HSTS cache and *not* using thetrailing dot in the URL.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2020-15366_ajv_5.5.2",
              "shortDescription": {
                "text": "[CVE-2020-15366] ajv 5.5.2"
              },
              "help": {
                "text": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [6.12.3]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2020-1971_3.8:libressl2.7-libcrypto_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.8:libressl2.7-libcrypto 2.7.4-r0"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "XRAY-129967_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129967] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129935_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129935] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129968_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129968] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-35260_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-35260] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl can be told to parse a `.netrc` file for credentials. If that file endsin a line with 4095 consecutive non-white space letters and no newline, curlwould first read past the end of the stack-based buffer, and if the readworks, write a zero byte beyond its boundary.This will in most cases cause a segfault or similar, but circumstances might also cause different outcomes.If a malicious user can provide a custom netrc file to an application or otherwise affect its contents, this flaw could be used as denial-of-service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "XRAY-129947_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129947] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-23916_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-23916] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "An allocation of resources without limits or throttling vulnerability exists in curl \u003cv7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-27774_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27774] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.7"
              }
            },
            {
              "id": "XRAY-129963_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129963] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-28161_@theia/console_0.4.0",
              "shortDescription": {
                "text": "[CVE-2021-28161] @theia/console 0.4.0"
              },
              "help": {
                "text": "In Eclipse Theia versions up to and including 1.8.0, in the debug console there is no HTML escaping, so arbitrary Javascript code can be injected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.8.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-1971_3.8:libressl2.7-libssl_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.8:libressl2.7-libssl 2.7.4-r0"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-32205_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-32205] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl \u003c 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2022-33987_got_7.1.0",
              "shortDescription": {
                "text": "[CVE-2022-33987] got 7.1.0"
              },
              "help": {
                "text": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [11.8.5], [12.1.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-23362_hosted-git-info_2.7.1",
              "shortDescription": {
                "text": "[CVE-2021-23362] hosted-git-info 2.7.1"
              },
              "help": {
                "text": "The package hosted-git-info before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [2.8.9], [3.0.8]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-32206_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-32206] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl \u003c 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32206_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-32206] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl \u003c 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "XRAY-129961_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129961] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-7608_yargs-parser_11.1.1",
              "shortDescription": {
                "text": "[CVE-2020-7608] yargs-parser 11.1.1"
              },
              "help": {
                "text": "yargs-parser could be tricked into adding or modifying properties of Object.prototype using a \"__proto__\" payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [13.1.2], [15.0.1], [18.1.1], [5.0.1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-0536_follow-redirects_1.7.0",
              "shortDescription": {
                "text": "[CVE-2022-0536] follow-redirects 1.7.0"
              },
              "help": {
                "text": "Improper Removal of Sensitive Information Before Storage or Transfer in NPM follow-redirects prior to 1.14.8.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.14.8]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-42375_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42375] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-27538_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27538] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-27535_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27535] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl \u003c8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "XRAY-129946_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129946] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-22925_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22925] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42365_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "XRAY-129870_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129870] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-27537_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27537] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A double free vulnerability exists in libcurl \u003c8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "XRAY-129969_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129969] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129951_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129951] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129970_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129970] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129962_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129962] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-42363_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.36.1-r27]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42374_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42374] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-32640_ws_5.2.2",
              "shortDescription": {
                "text": "[CVE-2021-32640] ws 5.2.2"
              },
              "help": {
                "text": "ws is an open source WebSocket client and server library for Node.js. A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server. The vulnerability has been fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff). In vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [5.2.3], [6.2.2], [7.4.6]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42364_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-27779_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27779] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl wrongly allows cookies to be set for Top Level Domains (TLDs) if thehost name is provided with a trailing dot.curl can be told to receive and send cookies. curl's \"cookie engine\" can bebuilt with or without [Public Suffix List](https://publicsuffix.org/)awareness. If PSL support not provided, a more rudimentary check exists to atleast prevent cookies from being set on TLDs. This check was broken if thehost name in the URL uses a trailing dot.This can allow arbitrary sites to set cookies that then would get sent to adifferent and unrelated site or domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-27776_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27776] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "XRAY-129938_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129938] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-27774_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27774] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.7"
              }
            },
            {
              "id": "XRAY-129950_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129950] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-41038_@theia/plugin-ext_0.4.0",
              "shortDescription": {
                "text": "[CVE-2021-41038] @theia/plugin-ext 0.4.0"
              },
              "help": {
                "text": "In versions of the @theia/plugin-ext component of Eclipse Theia prior to 1.18.0, Webview contents can be hijacked via postMessage().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.18.0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-45857_axios_0.18.0",
              "shortDescription": {
                "text": "[CVE-2023-45857] axios 0.18.0"
              },
              "help": {
                "text": "An issue discovered in Axios 1.5.1 inadvertently reveals the confidential XSRF-TOKEN stored in cookies by including it in the HTTP header X-XSRF-TOKEN for every request made to any host allowing attackers to view sensitive information.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [0.28.0], [1.6.0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "XRAY-129940_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129940] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-43552_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-43552] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A use after free vulnerability exists in curl \u003c7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.87.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-15366_ajv_6.5.3",
              "shortDescription": {
                "text": "[CVE-2020-15366] ajv 6.5.3"
              },
              "help": {
                "text": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [6.12.3]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2022-32208_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-32208] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When curl \u003c 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2017-16137_debug_3.2.6",
              "shortDescription": {
                "text": "[CVE-2017-16137] debug 3.2.6"
              },
              "help": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [2.6.9], [3.1.0], [3.2.7], [4.3.1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-16775_npm_6.4.1",
              "shortDescription": {
                "text": "[CVE-2019-16775] npm 6.4.1"
              },
              "help": {
                "text": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of thenode_modules folder through the bin field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user's system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [6.13.3]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "XRAY-129939_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129939] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129955_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129955] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129953_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129953] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-46218_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-46218] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-28320_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-28320] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A denial of service vulnerability exists in curl \u003cv8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-1971_3.8:libressl2.7-libtls_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.8:libressl2.7-libtls 2.7.4-r0"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-42374_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42374] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-33987_got_8.3.2",
              "shortDescription": {
                "text": "[CVE-2022-33987] got 8.3.2"
              },
              "help": {
                "text": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [11.8.5], [12.1.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "XRAY-129957_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129957] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-129958_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129958] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-42364_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-7608_yargs-parser_9.0.2",
              "shortDescription": {
                "text": "[CVE-2020-7608] yargs-parser 9.0.2"
              },
              "help": {
                "text": "yargs-parser could be tricked into adding or modifying properties of Object.prototype using a \"__proto__\" payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [13.1.2], [15.0.1], [18.1.1], [5.0.1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-46218_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-46218] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "XRAY-129956_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129956] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-46219_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-46219] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "XRAY-129936_highlight.js_9.12.0",
              "shortDescription": {
                "text": "[XRAY-129936] highlight.js 9.12.0"
              },
              "help": {
                "text": "ReDOS vulnerabities: multiple grammars",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [10.4.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-22490_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2023-22490] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is a revision control system. Using a specially-crafted repository, Git prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8 can be tricked into using its local clone optimization even when using a non-local transport. Though Git will abort local clones whose source `$GIT_DIR/objects` directory contains symbolic links, the `objects` directory itself may still be a symbolic link. These two may be combined to include arbitrary files based on known paths on the victim's filesystem within the malicious repository's working copy, allowing for data exfiltration in a similar manner as CVE-2022-39253.\n\nA fix has been prepared and will appear in v2.39.2 v2.38.4 v2.37.6 v2.36.5 v2.35.7 v2.34.7 v2.33.7 v2.32.6, v2.31.7 and v2.30.8. If upgrading is impractical, two short-term workarounds are available. Avoid cloning repositories from untrusted sources with `--recurse-submodules`. Instead, consider cloning repositories without recursively cloning their submodules, and instead run `git submodule update` at each layer. Before doing so, inspect each new `.gitmodules` file to ensure that it does not contain suspicious module URLs.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.39.2-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-32640_ws_6.1.0",
              "shortDescription": {
                "text": "[CVE-2021-32640] ws 6.1.0"
              },
              "help": {
                "text": "ws is an open source WebSocket client and server library for Node.js. A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server. The vulnerability has been fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff). In vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [5.2.3], [6.2.2], [7.4.6]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-22897_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22897] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-42376_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42376] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42376_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42376] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-28155_request_2.88.0",
              "shortDescription": {
                "text": "[CVE-2023-28155] request 2.88.0"
              },
              "help": {
                "text": "The Request package through 2.88.1 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-22897_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22897] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-17594_3.8:ncurses-terminfo-base_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2019-17594] 3.8:ncurses-terminfo-base 6.1_p20180818-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-17594_3.8:ncurses-terminfo_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2019-17594] 3.8:ncurses-terminfo 6.1_p20180818-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2013-0340_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2013-0340] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "expat 2.1.0 and earlier does not properly handle entities expansion unless an application developer uses the XML_SetEntityDeclHandler function, which allows remote attackers to cause a denial of service (resource consumption), send HTTP requests to intranet servers, or read arbitrary files via a crafted XML document, aka an XML External Entity (XXE) issue.  NOTE: it could be argued that because expat already provides the ability to disable external entity expansion, the responsibility for resolving this issue lies with application developers; according to this argument, this entry should be REJECTed, and each affected application would need its own CVE.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-28486_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2023-28486] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "Sudo before 1.9.13 does not escape control characters in log messages.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-17595_3.8:ncurses-terminfo_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2019-17595] 3.8:ncurses-terminfo 6.1_p20180818-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.4      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.4"
              }
            },
            {
              "id": "CVE-2022-48437_3.8:libressl2.7-libcrypto_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2022-48437] 3.8:libressl2.7-libcrypto 2.7.4-r0"
              },
              "help": {
                "text": "An issue was discovered in x509/x509_verify.c in LibreSSL before 3.6.1, and in OpenBSD before 7.2 errata 001. x509_verify_ctx_add_chain does not store errors that occur during leaf certificate verification, and therefore an incorrect error is returned. This behavior occurs when there is an installed verification callback that instructs the verifier to continue upon detecting an invalid certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-41581_3.8:libressl2.7-libcrypto_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2021-41581] 3.8:libressl2.7-libcrypto 2.7.4-r0"
              },
              "help": {
                "text": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2019-17594_3.8:ncurses-libs_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2019-17594] 3.8:ncurses-libs 6.1_p20180818-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-48437_3.8:libressl2.7-libtls_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2022-48437] 3.8:libressl2.7-libtls 2.7.4-r0"
              },
              "help": {
                "text": "An issue was discovered in x509/x509_verify.c in LibreSSL before 3.6.1, and in OpenBSD before 7.2 errata 001. x509_verify_ctx_add_chain does not store errors that occur during leaf certificate verification, and therefore an incorrect error is returned. This behavior occurs when there is an installed verification callback that instructs the verifier to continue upon detecting an invalid certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-41581_3.8:libressl2.7-libtls_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2021-41581] 3.8:libressl2.7-libtls 2.7.4-r0"
              },
              "help": {
                "text": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2019-17595_3.8:ncurses-terminfo-base_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2019-17595] 3.8:ncurses-terminfo-base 6.1_p20180818-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.4      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.4"
              }
            },
            {
              "id": "CVE-2023-28487_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2023-28487] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "Sudo before 1.9.13 does not escape control characters in sudoreplay output.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-41581_3.8:libressl2.7-libssl_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2021-41581] 3.8:libressl2.7-libssl 2.7.4-r0"
              },
              "help": {
                "text": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2019-17595_3.8:ncurses-libs_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2019-17595] 3.8:ncurses-libs 6.1_p20180818-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.4      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.4"
              }
            },
            {
              "id": "CVE-2021-3826_3.8:libstdc++_6.4.0-r9",
              "shortDescription": {
                "text": "[CVE-2021-3826] 3.8:libstdc++ 6.4.0-r9"
              },
              "help": {
                "text": "Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-48437_3.8:libressl2.7-libssl_2.7.4-r0",
              "shortDescription": {
                "text": "[CVE-2022-48437] 3.8:libressl2.7-libssl 2.7.4-r0"
              },
              "help": {
                "text": "An issue was discovered in x509/x509_verify.c in LibreSSL before 3.6.1, and in OpenBSD before 7.2 errata 001. x509_verify_ctx_add_chain does not store errors that occur during leaf certificate verification, and therefore an incorrect error is returned. This behavior occurs when there is an installed verification callback that instructs the verifier to continue upon detecting an invalid certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-3826_3.8:libgcc_6.4.0-r9",
              "shortDescription": {
                "text": "[CVE-2021-3826] 3.8:libgcc 6.4.0-r9"
              },
              "help": {
                "text": "Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22898_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22898] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.77.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2019-5435_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2019-5435] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "An integer overflow in curl's URL API results in a buffer overflow in libcurl 7.62.0 to and including 7.64.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.65.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2021-23239_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2021-23239] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "The sudoedit personality of Sudo before 1.9.5 may allow a local unprivileged user to perform arbitrary directory-existence tests by winning a sudo_edit.c race condition in replacing a user-controlled directory by a symlink to an arbitrary path.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 2.5      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.9.5-r0]   |"
              },
              "properties": {
                "security-severity": "2.5"
              }
            },
            {
              "id": "CVE-2021-22890_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22890] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.63.0 to and including 7.75.0 includes vulnerability that allows a malicious HTTPS proxy to MITM a connection due to bad handling of TLS 1.3 session tickets. When using a HTTPS proxy and TLS 1.3, libcurl can confuse session tickets arriving from the HTTPS proxy but work as if they arrived from the remote server and then wrongly \"short-cut\" the host handshake. When confusing the tickets, a HTTPS proxy can trick libcurl to use the wrong session ticket resume for the host and thereby circumvent the server TLS certificate check and make a MITM attack to be possible to perform unnoticed. Note that such a malicious HTTPS proxy needs to provide a certificate that curl will accept for the MITMed server for an attack to work - unless curl has been told to ignore the server certificate check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.76.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2019-1348_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2019-1348] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. The --export-marks option of git fast-import is exposed also via the in-stream command feature export-marks=... and it allows overwriting arbitrary paths.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.18.2-r0]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "XRAY-105536_npm-registry-fetch_1.1.0",
              "shortDescription": {
                "text": "[XRAY-105536] npm-registry-fetch 1.1.0"
              },
              "help": {
                "text": "Sensitive information exposure through logs",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [4.0.5], [8.1.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-22890_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22890] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.63.0 to and including 7.75.0 includes vulnerability that allows a malicious HTTPS proxy to MITM a connection due to bad handling of TLS 1.3 session tickets. When using a HTTPS proxy and TLS 1.3, libcurl can confuse session tickets arriving from the HTTPS proxy but work as if they arrived from the remote server and then wrongly \"short-cut\" the host handshake. When confusing the tickets, a HTTPS proxy can trick libcurl to use the wrong session ticket resume for the host and thereby circumvent the server TLS certificate check and make a MITM attack to be possible to perform unnoticed. Note that such a malicious HTTPS proxy needs to provide a certificate that curl will accept for the MITMed server for an attack to work - unless curl has been told to ignore the server certificate check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.76.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2017-18869_chownr_1.0.1",
              "shortDescription": {
                "text": "[CVE-2017-18869] chownr 1.0.1"
              },
              "help": {
                "text": "A TOCTOU issue in the chownr package before 1.1.0 for Node.js 10.10 could allow a local attacker to trick it into descending into unintended directories via symlink attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 2.5      | Not Covered       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [1.1.0]   |"
              },
              "properties": {
                "security-severity": "2.5"
              }
            },
            {
              "id": "CVE-2021-22924_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22924] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2019-5435_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2019-5435] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "An integer overflow in curl's URL API results in a buffer overflow in libcurl 7.62.0 to and including 7.64.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.65.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2020-8284_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8284] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.74.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2023-38546_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-38546] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "This flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.4.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2020-8284_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2020-8284] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.74.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2022-35252_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-35252] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.85.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2023-25815_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2023-25815] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "In Git for Windows, the Windows port of Git, no localized messages are shipped with the installer. As a consequence, Git is expected not to localize messages at all, and skips the gettext initialization. However, due to a change in MINGW-packages, the `gettext()` function's implicit initialization no longer uses the runtime prefix but uses the hard-coded path `C:\\mingw64\\share\\locale` to look for localized messages. And since any authenticated user has the permission to create folders in `C:\\` (and since `C:\\mingw64` does not typically exist), it is possible for low-privilege users to place fake messages in that location where `git.exe` will pick them up in version 2.40.1.\n\nThis vulnerability is relatively hard to exploit and requires social engineering. For example, a legitimate message at the end of a clone could be maliciously modified to ask the user to direct their web browser to a malicious website, and the user might think that the message comes from Git and is legitimate. It does require local write access by the attacker, though, which makes this attack vector less likely. Version 2.40.1 contains a patch for this issue. Some workarounds are available. Do not work on a Windows machine with shared accounts, or alternatively create a `C:\\mingw64` folder and leave it empty. Users who have administrative rights may remove the permission to create folders in `C:\\`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 2.2      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.40.1-r0]   |"
              },
              "properties": {
                "security-severity": "2.2"
              }
            },
            {
              "id": "CVE-2023-38546_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-38546] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "This flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.4.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2021-22898_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22898] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.77.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2021-22924_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22924] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "XRAY-105536_npm-registry-fetch_3.1.1",
              "shortDescription": {
                "text": "[XRAY-105536] npm-registry-fetch 3.1.1"
              },
              "help": {
                "text": "Sensitive information exposure through logs",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [4.0.5], [8.1.1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-35252_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-35252] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.85.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2024-28757_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2024-28757] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.6.2-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2466_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2024-2466] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32465_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2024-32465] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is a revision control system. The Git project recommends to avoid working in untrusted repositories, and instead to clone it first with `git clone --no-local` to obtain a clean copy. Git has specific protections to make that a safe operation even with an untrusted source repository, but vulnerabilities allow those protections to be bypassed. In the context of cloning local repositories owned by other users, this vulnerability has been covered in CVE-2024-32004. But there are circumstances where the fixes for CVE-2024-32004 are not enough: For example, when obtaining a `.zip` file containing a full copy of a Git repository, it should not be trusted by default to be safe, as e.g. hooks could be configured to run within the context of that repository. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid using Git in repositories that have been obtained via archives from untrusted sources.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.45.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2398_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2024-2398] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2466_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2024-2466] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32020_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2024-32020] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, local clones may end up hardlinking files into the target repository's object database when source and target repository reside on the same disk. If the source repository is owned by a different user, then those hardlinked files may be rewritten at any point in time by the untrusted user. Cloning local repositories will cause Git to either copy or hardlink files of the source repository into the target repository. This significantly speeds up such local clones compared to doing a \"proper\" clone and saves both disk space and compute time. When cloning a repository located on the same disk that is owned by a different user than the current user we also end up creating such hardlinks. These files will continue to be owned and controlled by the potentially-untrusted user and can be rewritten by them at will in the future. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.45.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2398_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2024-2398] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2379_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2024-2379] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2004_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2024-2004] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2379_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2024-2379] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2004_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2024-2004] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32021_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2024-32021] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, when cloning a local source repository that contains symlinks via the filesystem, Git may create hardlinks to arbitrary user-readable files on the same filesystem as the target repository in the `objects/` directory. Cloning a local repository over the filesystem may creating hardlinks to arbitrary user-owned files on the same filesystem in the target Git repository's `objects/` directory. When cloning a repository over the filesystem (without explicitly specifying the `file://` protocol or `--no-local`), the optimizations for local cloning\nwill be used, which include attempting to hard link the object files instead of copying them. While the code includes checks against symbolic links in the source repository, which were added during the fix for CVE-2022-39253, these checks can still be raced because the hard link operation ultimately follows symlinks. If the object on the filesystem appears as a file during the check, and then a symlink during the operation, this will allow the adversary to bypass the check and create hardlinks in the destination objects directory to arbitrary, user-readable files. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.45.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32002_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2024-32002] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.0      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.45.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.0"
              }
            },
            {
              "id": "CVE-2019-10747_set-value_0.4.3",
              "shortDescription": {
                "text": "[CVE-2019-10747] set-value 0.4.3"
              },
              "help": {
                "text": "set-value is vulnerable to Prototype Pollution in versions lower than 3.0.1. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using any of the constructor, prototype and _proto_ payloads.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [2.0.1], [3.0.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-7774_y18n_4.0.0",
              "shortDescription": {
                "text": "[CVE-2020-7774] y18n 4.0.0"
              },
              "help": {
                "text": "The package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [3.2.2], [4.0.1], [5.0.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23852_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-23852] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "Expat (aka libexpat) before 2.4.4 has a signed integer overflow in XML_GetBuffer, for configurations with a nonzero XML_CONTEXT_BYTES.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.4-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-7774_y18n_3.2.1",
              "shortDescription": {
                "text": "[CVE-2020-7774] y18n 3.2.1"
              },
              "help": {
                "text": "The package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [3.2.2], [4.0.1], [5.0.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-1586_3.8:pcre2_10.31-r0",
              "shortDescription": {
                "text": "[CVE-2022-1586] 3.8:pcre2 10.31-r0"
              },
              "help": {
                "text": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [10.40-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-22822_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-22822] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "addBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-22824_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-22824] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "defineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-25236_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-25236] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-23440_set-value_2.0.0",
              "shortDescription": {
                "text": "[CVE-2021-23440] set-value 2.0.0"
              },
              "help": {
                "text": "This affects the package set-value before \u003c2.0.1, \u003e=3.0.0 \u003c4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [2.0.1], [3.0.3], [4.0.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-10747_set-value_2.0.0",
              "shortDescription": {
                "text": "[CVE-2019-10747] set-value 2.0.0"
              },
              "help": {
                "text": "set-value is vulnerable to Prototype Pollution in versions lower than 3.0.1. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using any of the constructor, prototype and _proto_ payloads.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [2.0.1], [3.0.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-23440_set-value_0.4.3",
              "shortDescription": {
                "text": "[CVE-2021-23440] set-value 0.4.3"
              },
              "help": {
                "text": "This affects the package set-value before \u003c2.0.1, \u003e=3.0.0 \u003c4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [2.0.1], [3.0.3], [4.0.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-38545_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-38545] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.4.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-42282_ip_1.1.5",
              "shortDescription": {
                "text": "[CVE-2023-42282] ip 1.1.5"
              },
              "help": {
                "text": "The ip package before 1.1.9 for Node.js might allow SSRF because some IP addresses (such as 0x7f.1) are improperly categorized as globally routable via isPublic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [1.1.9], [2.0.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-26136_tough-cookie_2.4.3",
              "shortDescription": {
                "text": "[CVE-2023-26136] tough-cookie 2.4.3"
              },
              "help": {
                "text": "Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. This issue arises from the manner in which the objects are initialized.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [4.1.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-22823_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-22823] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "build_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-1587_3.8:pcre2_10.31-r0",
              "shortDescription": {
                "text": "[CVE-2022-1587] 3.8:pcre2 10.31-r0"
              },
              "help": {
                "text": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the get_recurse_data_length() function of the pcre2_jit_compile.c file. This issue affects recursions in JIT-compiled regular expressions caused by duplicate data transfers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [10.40-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-25315_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-25315] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-10746_mixin-deep_1.3.1",
              "shortDescription": {
                "text": "[CVE-2019-10746] mixin-deep 1.3.1"
              },
              "help": {
                "text": "mixin-deep is vulnerable to Prototype Pollution in versions before 1.3.2 and version 2.0.0. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [1.3.2], [2.0.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-44906_minimist_0.0.8",
              "shortDescription": {
                "text": "[CVE-2021-44906] minimist 0.0.8"
              },
              "help": {
                "text": "Minimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [0.2.4], [1.2.6]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-3860_3.8:libssh2_1.8.0-r3",
              "shortDescription": {
                "text": "[CVE-2019-3860] 3.8:libssh2 1.8.0-r3"
              },
              "help": {
                "text": "An out of bounds read flaw was discovered in libssh2 before 1.8.1 in the way SFTP packets with empty payloads are parsed. A remote attacker who compromises a SSH server may be able to cause a Denial of Service or read data in the client memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.8.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-12900_3.8:bzip2_1.0.6-r6",
              "shortDescription": {
                "text": "[CVE-2019-12900] 3.8:bzip2 1.0.6-r6"
              },
              "help": {
                "text": "BZ2_decompress in decompress.c in bzip2 through 1.0.6 has an out-of-bounds write when there are many selectors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.0.6-r7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-23914_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-23914] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2021-3918_json-schema_0.2.3",
              "shortDescription": {
                "text": "[CVE-2021-3918] json-schema 0.2.3"
              },
              "help": {
                "text": "json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [0.4.0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-38545_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-38545] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.4.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-7788_ini_1.3.5",
              "shortDescription": {
                "text": "[CVE-2020-7788] ini 1.3.5"
              },
              "help": {
                "text": "This affects the package ini before 1.3.6. If an attacker submits a malicious INI file to an application that parses it with ini.parse, they will pollute the prototype on the application. This can be exploited further depending on the context.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [1.3.6]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-44906_minimist_1.2.0",
              "shortDescription": {
                "text": "[CVE-2021-44906] minimist 1.2.0"
              },
              "help": {
                "text": "Minimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [0.2.4], [1.2.6]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-32221_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-32221] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-26136_tough-cookie_2.5.0",
              "shortDescription": {
                "text": "[CVE-2023-26136] tough-cookie 2.5.0"
              },
              "help": {
                "text": "Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. This issue arises from the manner in which the objects are initialized.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [4.1.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-44906_minimist_0.0.10",
              "shortDescription": {
                "text": "[CVE-2021-44906] minimist 0.0.10"
              },
              "help": {
                "text": "Minimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [0.2.4], [1.2.6]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-25235_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-25235] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "xmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-12265_decompress_4.2.0",
              "shortDescription": {
                "text": "[CVE-2020-12265] decompress 4.2.0"
              },
              "help": {
                "text": "The decompress package before 4.2.1 for Node.js is vulnerable to Arbitrary File Write via ../ in an archive member, when a symlink is used, because of Directory Traversal.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [4.2.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-23914_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-23914] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-32221_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-32221] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-29078_ejs_2.6.1",
              "shortDescription": {
                "text": "[CVE-2022-29078] ejs 2.6.1"
              },
              "help": {
                "text": "The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [3.1.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-27781_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27781] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-43551_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-43551] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A vulnerability exists in curl \u003c7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.87.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-32804_tar_4.4.8",
              "shortDescription": {
                "text": "[CVE-2021-32804] tar 4.4.8"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [3.2.2], [4.4.14], [5.0.6], [6.1.1]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-48285_jszip_2.6.1",
              "shortDescription": {
                "text": "[CVE-2022-48285] jszip 2.6.1"
              },
              "help": {
                "text": "loadAsync in JSZip before 3.8.0 allows Directory Traversal via a crafted ZIP archive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [3.8.0]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2021-32804_tar_4.4.6",
              "shortDescription": {
                "text": "[CVE-2021-32804] tar 4.4.6"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [3.2.2], [4.4.14], [5.0.6], [6.1.1]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-27533_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27533] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A vulnerability in input validation exists in curl \u003c8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-52425_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-52425] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-22809_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2023-22809] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "In Sudo before 1.9.12p2, the sudoedit (aka -e) feature mishandles extra arguments passed in the user-provided environment variables (SUDO_EDITOR, VISUAL, and EDITOR), allowing a local attacker to append arbitrary entries to the list of files to process. This can lead to privilege escalation. Affected versions are 1.8.0 through 1.9.12.p1. The problem exists because a user-specified editor may contain a \"--\" argument that defeats a protection mechanism, e.g., an EDITOR='vim -- /path/to/extra/file' value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.9.12_p2-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-25883_semver_5.3.0",
              "shortDescription": {
                "text": "[CVE-2022-25883] semver 5.3.0"
              },
              "help": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [5.7.2], [6.3.1], [7.5.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-38900_decode-uri-component_0.2.0",
              "shortDescription": {
                "text": "[CVE-2022-38900] decode-uri-component 0.2.0"
              },
              "help": {
                "text": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [0.2.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-15847_3.8:libgcc_6.4.0-r9",
              "shortDescription": {
                "text": "[CVE-2019-15847] 3.8:libgcc 6.4.0-r9"
              },
              "help": {
                "text": "The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [9.3.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-40674_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-40674] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.9-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-29491_3.8:ncurses-libs_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2023-29491] 3.8:ncurses-libs 6.1_p20180818-r1"
              },
              "help": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [6.4_p20230424-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-42916_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-42916] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22827_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-22827] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "storeAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-43551_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-43551] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A vulnerability exists in curl \u003c7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.87.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-44487_3.8:nghttp2-libs_1.32.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-44487] 3.8:nghttp2-libs 1.32.0-r0"
              },
              "help": {
                "text": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.57.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22825_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-22825] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "lookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-22576_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-22576] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-29491_3.8:ncurses-terminfo_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2023-29491] 3.8:ncurses-terminfo 6.1_p20180818-r1"
              },
              "help": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [6.4_p20230424-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-24999_qs_6.5.2",
              "shortDescription": {
                "text": "[CVE-2022-24999] qs 6.5.2"
              },
              "help": {
                "text": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b\u0026a[__proto__]\u0026a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [6.10.3], [6.2.4], [6.3.3], [6.4.1], [6.5.3], [6.6.1], [6.7.3], [6.8.3], [6.9.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22826_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-22826] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "nextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-3807_ansi-regex_3.0.0",
              "shortDescription": {
                "text": "[CVE-2021-3807] ansi-regex 3.0.0"
              },
              "help": {
                "text": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [3.0.1], [4.1.1], [5.0.1], [6.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-25883_semver_5.6.0",
              "shortDescription": {
                "text": "[CVE-2022-25883] semver 5.6.0"
              },
              "help": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [5.7.2], [6.3.1], [7.5.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-35945_3.8:nghttp2-libs_1.32.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-35945] 3.8:nghttp2-libs 1.32.0-r0"
              },
              "help": {
                "text": "Envoy is a cloud-native high-performance edge/middle/service proxy. Envoy’s HTTP/2 codec may leak a header map and bookkeeping structures upon receiving `RST_STREAM` immediately followed by the `GOAWAY` frames from an upstream server. In nghttp2, cleanup of pending requests due to receipt of the `GOAWAY` frame skips de-allocation of the bookkeeping structure and pending compressed header. The error return [code path] is taken if connection is already marked for not sending more requests due to `GOAWAY` frame. The clean-up code is right after the return statement, causing memory leak. Denial of service through memory exhaustion. This vulnerability was patched in versions(s) 1.26.3, 1.25.8, 1.24.9, 1.23.11.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.51.0-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-22946_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22946] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "A user can tell curl \u003e= 7.20.0 and \u003c= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-37712_tar_4.4.6",
              "shortDescription": {
                "text": "[CVE-2021-37712] tar 4.4.6"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.6      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [4.4.18], [5.0.10], [6.1.9]   |"
              },
              "properties": {
                "security-severity": "8.6"
              }
            },
            {
              "id": "CVE-2021-23343_path-parse_1.0.6",
              "shortDescription": {
                "text": "[CVE-2021-23343] path-parse 1.0.6"
              },
              "help": {
                "text": "All versions of package path-parse are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [1.0.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3807_ansi-regex_4.0.0",
              "shortDescription": {
                "text": "[CVE-2021-3807] ansi-regex 4.0.0"
              },
              "help": {
                "text": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [3.0.1], [4.1.1], [5.0.1], [6.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-31129_moment_2.22.2",
              "shortDescription": {
                "text": "[CVE-2022-31129] moment 2.22.2"
              },
              "help": {
                "text": "moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [2.29.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-3517_minimatch_3.0.4",
              "shortDescription": {
                "text": "[CVE-2022-3517] minimatch 3.0.4"
              },
              "help": {
                "text": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [3.0.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41409_3.8:pcre2_10.31-r0",
              "shortDescription": {
                "text": "[CVE-2022-41409] 3.8:pcre2 10.31-r0"
              },
              "help": {
                "text": "Integer overflow vulnerability in pcre2test before 10.41 allows attackers to cause a denial of service or other unspecified impacts via negative input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [10.41-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-43138_async_2.6.2",
              "shortDescription": {
                "text": "[CVE-2021-43138] async 2.6.2"
              },
              "help": {
                "text": "In Async before 2.6.4 and 3.x before 3.2.2, a malicious user can obtain privileges via the mapValues() method, aka lib/internal/iterator.js createObjectIterator prototype pollution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [2.6.4], [3.2.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-3749_axios_0.18.0",
              "shortDescription": {
                "text": "[CVE-2021-3749] axios 0.18.0"
              },
              "help": {
                "text": "axios is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [0.21.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22576_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-22576] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-24999_qs_6.5.1",
              "shortDescription": {
                "text": "[CVE-2022-24999] qs 6.5.1"
              },
              "help": {
                "text": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b\u0026a[__proto__]\u0026a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [6.10.3], [6.2.4], [6.3.3], [6.4.1], [6.5.3], [6.6.1], [6.7.3], [6.8.3], [6.9.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24785_moment_2.22.2",
              "shortDescription": {
                "text": "[CVE-2022-24785] moment 2.22.2"
              },
              "help": {
                "text": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [2.29.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-4435_yarn_1.12.3",
              "shortDescription": {
                "text": "[CVE-2021-4435] yarn 1.12.3"
              },
              "help": {
                "text": "An untrusted search path vulnerability was found in Yarn. When a victim runs certain Yarn commands in a directory with attacker-controlled content, malicious commands could be executed in unexpected ways.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__7b8a51711c7ee68fef2ae68936aacd344ad8e7b93a675e1c814531219809ee88.tar `       | [1.22.13]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-42916_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-42916] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29491_3.8:ncurses-terminfo-base_6.1_p20180818-r1",
              "shortDescription": {
                "text": "[CVE-2023-29491] 3.8:ncurses-terminfo-base 6.1_p20180818-r1"
              },
              "help": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [6.4_p20230424-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-27781_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2022-27781] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-43680_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-43680] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-25883_semver_5.5.1",
              "shortDescription": {
                "text": "[CVE-2022-25883] semver 5.5.1"
              },
              "help": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [5.7.2], [6.3.1], [7.5.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-25881_http-cache-semantics_3.8.1",
              "shortDescription": {
                "text": "[CVE-2022-25881] http-cache-semantics 3.8.1"
              },
              "help": {
                "text": "This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [4.1.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-20165_debug_0.8.1",
              "shortDescription": {
                "text": "[CVE-2017-20165] debug 0.8.1"
              },
              "help": {
                "text": "A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The identifier of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [2.6.9], [3.1.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-25883_semver_5.5.0",
              "shortDescription": {
                "text": "[CVE-2022-25883] semver 5.5.0"
              },
              "help": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [5.7.2], [6.3.1], [7.5.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27320_3.8:sudo_1.8.23-r2",
              "shortDescription": {
                "text": "[CVE-2023-27320] 3.8:sudo 1.8.23-r2"
              },
              "help": {
                "text": "Sudo before 1.9.13p2 has a double free in the per-command chroot feature.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [1.9.12_p2-r1]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-37712_tar_4.4.8",
              "shortDescription": {
                "text": "[CVE-2021-37712] tar 4.4.8"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.6      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [4.4.18], [5.0.10], [6.1.9]   |"
              },
              "properties": {
                "security-severity": "8.6"
              }
            },
            {
              "id": "CVE-2022-23990_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-23990] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "Expat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.4-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-15847_3.8:libstdc++_6.4.0-r9",
              "shortDescription": {
                "text": "[CVE-2019-15847] 3.8:libstdc++ 6.4.0-r9"
              },
              "help": {
                "text": "The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [9.3.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-25652_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2023-25652] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, by feeding specially crafted input to `git apply --reject`, a path outside the working tree can be overwritten with partially controlled contents (corresponding to the rejected hunk(s) from the given patch). A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid using `git apply` with `--reject` when applying patches from an untrusted source. Use `git apply --stat` to inspect a patch before applying; avoid applying one that create a conflict where a link corresponding to the `*.rej` file exists.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.40.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-22946_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22946] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A user can tell curl \u003e= 7.20.0 and \u003c= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-20149_kind-of_6.0.2",
              "shortDescription": {
                "text": "[CVE-2019-20149] kind-of 6.0.2"
              },
              "help": {
                "text": "ctorName in index.js in kind-of v6.0.2 allows external user input to overwrite certain internal attributes via a conflicting name, as demonstrated by 'constructor': {'name':'Symbol'}. Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [6.0.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27533_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27533] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "A vulnerability in input validation exists in curl \u003c8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-32804_tar_2.2.1",
              "shortDescription": {
                "text": "[CVE-2021-32804] tar 2.2.1"
              },
              "help": {
                "text": "The npm package \"tar\" (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [3.2.2], [4.4.14], [5.0.6], [6.1.1]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-12886_3.8:libgcc_6.4.0-r9",
              "shortDescription": {
                "text": "[CVE-2018-12886] 3.8:libgcc 6.4.0-r9"
              },
              "help": {
                "text": "stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-18276_3.8:bash_4.4.19-r1",
              "shortDescription": {
                "text": "[CVE-2019-18276] 3.8:bash 4.4.19-r1"
              },
              "help": {
                "text": "An issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support \"saved UID\" functionality, the saved UID is not dropped. An attacker with command execution in the shell can use \"enable -f\" for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-12886_3.8:libstdc++_6.4.0-r9",
              "shortDescription": {
                "text": "[CVE-2018-12886] 3.8:libstdc++ 6.4.0-r9"
              },
              "help": {
                "text": "stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2024-28863_tar_4.4.8",
              "shortDescription": {
                "text": "[CVE-2024-28863] tar 4.4.8"
              },
              "help": {
                "text": "node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [6.2.1]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22923_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22923] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-25313_3.8:expat_2.2.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-25313] 3.8:expat 2.2.5-r0"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-7598_minimist_0.0.10",
              "shortDescription": {
                "text": "[CVE-2020-7598] minimist 0.0.10"
              },
              "help": {
                "text": "minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a \"constructor\" or \"__proto__\" payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `       | [0.2.1], [1.2.3]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2021-22922_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22922] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22923_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22923] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-27536_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27536] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists libcurl \u003c8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2024-28863_tar_4.4.6",
              "shortDescription": {
                "text": "[CVE-2024-28863] tar 4.4.6"
              },
              "help": {
                "text": "node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [6.2.1]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22922_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2021-22922] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-7598_minimist_0.0.8",
              "shortDescription": {
                "text": "[CVE-2020-7598] minimist 0.0.8"
              },
              "help": {
                "text": "minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a \"constructor\" or \"__proto__\" payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [0.2.1], [1.2.3]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-27536_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-27536] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists libcurl \u003c8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2024-33883_ejs_2.6.1",
              "shortDescription": {
                "text": "[CVE-2024-33883] ejs 2.6.1"
              },
              "help": {
                "text": "The ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `       | [3.1.10]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28863_tar_2.2.1",
              "shortDescription": {
                "text": "[CVE-2024-28863] tar 2.2.1"
              },
              "help": {
                "text": "node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [6.2.1]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-7598_minimist_1.2.0",
              "shortDescription": {
                "text": "[CVE-2020-7598] minimist 1.2.0"
              },
              "help": {
                "text": "minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a \"constructor\" or \"__proto__\" payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Applicable       | `sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar `\u003cbr/\u003e`sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar `\u003cbr/\u003e`sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar `       | [0.2.1], [1.2.3]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-28322_3.8:libcurl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-28322] 3.8:libcurl 7.61.1-r2"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl \u003cv8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2023-28322_3.8:curl_7.61.1-r2",
              "shortDescription": {
                "text": "[CVE-2023-28322] 3.8:curl 7.61.1-r2"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl \u003cv8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2024-32004_3.8:git_2.18.1-r0",
              "shortDescription": {
                "text": "[CVE-2024-32004] 3.8:git 2.18.1-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, an attacker can prepare a local repository in such a way that, when cloned, will execute arbitrary code during the operation. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid cloning repositories from untrusted sources.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar `       | [2.45.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2018-1000517_3.8:busybox_1.28.4-r3",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000517] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000517_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000517] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37434_3.8:zlib_1.2.11-r1",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2022-37434] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7719_locutus_2.0.10",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7719] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22945_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22945] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14697_3.8:musl_1.1.19-r10",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14697] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36159_3.8:apk-tools_2.10.1-r0",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2021-36159] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3862_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3862] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23521_3.8:git_2.18.1-r0",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23521] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41903_3.8:git_2.18.1-r0",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41903] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5482_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5482] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3861_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3861] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3859_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3859] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5482_3.8:curl_7.61.1-r2",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5482] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.8:busybox_1.28.4-r3",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3858_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3858] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5481_3.8:curl_7.61.1-r2",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5481] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27224_@theia/preview_0.4.0",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2020-27224] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19486_3.8:git_2.18.1-r0",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2018-19486] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22945_3.8:curl_7.61.1-r2",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22945] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32207_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32207] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1353_3.8:git_2.18.1-r0",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1353] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32207_3.8:curl_7.61.1-r2",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32207] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5481_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5481] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14697_3.8:musl-utils_1.1.19-r10",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14697] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35784_3.8:libressl2.7-libtls_2.7.4-r0",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35784] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46880_3.8:libressl2.7-libtls_2.7.4-r0",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46880] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46880_3.8:libressl2.7-libcrypto_2.7.4-r0",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46880] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35784_3.8:libressl2.7-libssl_2.7.4-r0",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35784] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46880_3.8:libressl2.7-libssl_2.7.4-r0",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46880] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13619_locutus_2.0.10",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "[CVE-2020-13619] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35784_3.8:libressl2.7-libcrypto_2.7.4-r0",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35784] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3156_3.8:sudo_1.8.23-r2",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3156] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27782_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27782] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27782_3.8:curl_7.61.1-r2",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27782] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-25032_3.8:zlib_1.2.11-r1",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "[CVE-2018-25032] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27534_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27534] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27534_3.8:curl_7.61.1-r2",
          "ruleIndex": 38,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27534] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42465_3.8:sudo_1.8.23-r2",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "[CVE-2023-42465] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29007_3.8:git_2.18.1-r0",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29007] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37890_ws_5.2.2",
          "ruleIndex": 41,
          "level": "error",
          "message": {
            "text": "[CVE-2024-37890] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20679_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20679] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-45960_3.8:expat_2.2.5-r0",
          "ruleIndex": 43,
          "level": "error",
          "message": {
            "text": "[CVE-2021-45960] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20834_tar_2.2.1",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20834] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20834_tar_2.2.1",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20834] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23392_locutus_2.0.10",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23392] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5436_3.8:curl_7.61.1-r2",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5436] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-26237_highlight.js_9.12.0",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "[CVE-2020-26237] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0144_shelljs_0.8.3",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0144] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28391_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28391] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9513_3.8:nghttp2-libs_1.32.0-r0",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9513] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1349_3.8:git_2.18.1-r0",
          "ruleIndex": 51,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1349] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8177_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 52,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8177] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10773_yarn_1.12.3",
          "ruleIndex": 53,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10773] sha256__7b8a51711c7ee68fef2ae68936aacd344ad8e7b93a675e1c814531219809ee88.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-40330_3.8:git_2.18.1-r0",
          "ruleIndex": 54,
          "level": "error",
          "message": {
            "text": "[CVE-2021-40330] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27775_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 55,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27775] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42384_3.8:busybox_1.28.4-r3",
          "ruleIndex": 56,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42384] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3863_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 57,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3863] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46143_3.8:expat_2.2.5-r0",
          "ruleIndex": 58,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46143] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42915_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 59,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42915] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3856_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 60,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3856] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-5260_3.8:git_2.18.1-r0",
          "ruleIndex": 61,
          "level": "error",
          "message": {
            "text": "[CVE-2020-5260] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27290_ssri_6.0.1",
          "ruleIndex": 62,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27290] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22926_3.8:curl_7.61.1-r2",
          "ruleIndex": 63,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22926] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42386_3.8:busybox_1.28.4-r3",
          "ruleIndex": 64,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42386] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28319_3.8:curl_7.61.1-r2",
          "ruleIndex": 65,
          "level": "error",
          "message": {
            "text": "[CVE-2023-28319] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27780_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27780] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37701_tar_4.4.8",
          "ruleIndex": 67,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37701] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28391_3.8:busybox_1.28.4-r3",
          "ruleIndex": 68,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28391] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42385_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42385] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.8:libressl2.7-libssl_2.7.4-r0",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20679_3.8:busybox_1.28.4-r3",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20679] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458_3.8:ncurses-libs_6.1_p20180818-r1",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29458] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38039_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 73,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38039] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.8:libressl2.7-libtls_2.7.4-r0",
          "ruleIndex": 74,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23946_3.8:git_2.18.1-r0",
          "ruleIndex": 75,
          "level": "error",
          "message": {
            "text": "[CVE-2023-23946] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28469_glob-parent_2.0.0",
          "ruleIndex": 76,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28469] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22901_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22901] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8177_3.8:curl_7.61.1-r2",
          "ruleIndex": 78,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8177] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42383_3.8:busybox_1.28.4-r3",
          "ruleIndex": 79,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42383] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24765_3.8:git_2.18.1-r0",
          "ruleIndex": 80,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24765] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30065] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1350_3.8:git_2.18.1-r0",
          "ruleIndex": 82,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1350] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42379_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42379] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42381_3.8:busybox_1.28.4-r3",
          "ruleIndex": 84,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42381] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0654_requestretry_3.1.0",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0654] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458_3.8:ncurses-terminfo-base_6.1_p20180818-r1",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29458] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-30139_3.8:apk-tools_2.10.1-r0",
          "ruleIndex": 87,
          "level": "error",
          "message": {
            "text": "[CVE-2021-30139] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21300_3.8:git_2.18.1-r0",
          "ruleIndex": 88,
          "level": "error",
          "message": {
            "text": "[CVE-2021-21300] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27290_ssri_5.3.0",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27290] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27290_ssri_5.3.0",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27290] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17636_@theia/mini-browser_0.4.0",
          "ruleIndex": 90,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17636] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8169_3.8:curl_7.61.1-r2",
          "ruleIndex": 91,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8169] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27780_3.8:curl_7.61.1-r2",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27780] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5448_yarn_1.12.3",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5448] sha256__7b8a51711c7ee68fef2ae68936aacd344ad8e7b93a675e1c814531219809ee88.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22926_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22926] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34435_@theia/mini-browser_0.4.0",
          "ruleIndex": 95,
          "level": "error",
          "message": {
            "text": "[CVE-2021-34435] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19604_3.8:git_2.18.1-r0",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "[CVE-2019-19604] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23240_3.8:sudo_1.8.23-r2",
          "ruleIndex": 97,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23240] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8286_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 98,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8286] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27775_3.8:curl_7.61.1-r2",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27775] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1352_3.8:git_2.18.1-r0",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1352] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28831_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28831] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713_tar_2.2.1",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37713] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713_tar_2.2.1",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37713] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33623_trim-newlines_1.0.0",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33623] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43307_semver-regex_1.0.0",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "[CVE-2021-43307] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39537_3.8:ncurses-libs_6.1_p20180818-r1",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39537] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1387_3.8:git_2.18.1-r0",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1387] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.8:libressl2.7-libcrypto_2.7.4-r0",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39537_3.8:ncurses-terminfo-base_6.1_p20180818-r1",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39537] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16776_npm_6.4.1",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16776] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16776_npm_6.4.1",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16776] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8285_3.8:curl_7.61.1-r2",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8285] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8231_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8231] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8286_3.8:curl_7.61.1-r2",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8286] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39537_3.8:ncurses-terminfo_6.1_p20180818-r1",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39537] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17498_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17498] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458_3.8:ncurses-terminfo_6.1_p20180818-r1",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29458] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10742_axios_0.18.0",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10742] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32803_tar_4.4.8",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "[CVE-2021-32803] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25314_3.8:expat_2.2.5-r0",
          "ruleIndex": 118,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25314] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28469_glob-parent_3.1.0",
          "ruleIndex": 119,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28469] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28469_glob-parent_3.1.0",
          "ruleIndex": 119,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28469] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42378_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 120,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42378] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9511_3.8:nghttp2-libs_1.32.0-r0",
          "ruleIndex": 121,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9511] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5747_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 122,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5747] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32803_tar_4.4.6",
          "ruleIndex": 123,
          "level": "error",
          "message": {
            "text": "[CVE-2021-32803] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32803_tar_4.4.6",
          "ruleIndex": 123,
          "level": "error",
          "message": {
            "text": "[CVE-2021-32803] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32803_tar_4.4.6",
          "ruleIndex": 123,
          "level": "error",
          "message": {
            "text": "[CVE-2021-32803] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4068_braces_2.3.2",
          "ruleIndex": 124,
          "level": "error",
          "message": {
            "text": "[CVE-2024-4068] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4068_braces_2.3.2",
          "ruleIndex": 124,
          "level": "error",
          "message": {
            "text": "[CVE-2024-4068] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42382_3.8:busybox_1.28.4-r3",
          "ruleIndex": 125,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42382] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14287_3.8:sudo_1.8.23-r2",
          "ruleIndex": 126,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14287] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-95279_acorn_6.1.1",
          "ruleIndex": 127,
          "level": "error",
          "message": {
            "text": "[XRAY-95279] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8169_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 128,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8169] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28831_3.8:busybox_1.28.4-r3",
          "ruleIndex": 129,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28831] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37890_ws_6.1.0",
          "ruleIndex": 130,
          "level": "error",
          "message": {
            "text": "[CVE-2024-37890] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37701_tar_4.4.6",
          "ruleIndex": 131,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37701] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37701_tar_4.4.6",
          "ruleIndex": 131,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37701] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37701_tar_4.4.6",
          "ruleIndex": 131,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37701] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20843_3.8:expat_2.2.5-r0",
          "ruleIndex": 132,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20843] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5436_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 133,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5436] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43995_3.8:sudo_1.8.23-r2",
          "ruleIndex": 134,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43995] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42381_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 135,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42381] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11008_3.8:git_2.18.1-r0",
          "ruleIndex": 136,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11008] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-0542_xterm_3.9.1",
          "ruleIndex": 137,
          "level": "error",
          "message": {
            "text": "[CVE-2019-0542] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28319_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 138,
          "level": "error",
          "message": {
            "text": "[CVE-2023-28319] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42379_3.8:busybox_1.28.4-r3",
          "ruleIndex": 139,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42379] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42915_3.8:curl_7.61.1-r2",
          "ruleIndex": 140,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42915] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42384_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 141,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42384] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3795_semver-regex_1.0.0",
          "ruleIndex": 142,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3795] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42380_3.8:busybox_1.28.4-r3",
          "ruleIndex": 143,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42380] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1354_3.8:git_2.18.1-r0",
          "ruleIndex": 144,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1354] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42383_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 145,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42383] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5747_3.8:busybox_1.28.4-r3",
          "ruleIndex": 146,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5747] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3855_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 147,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3855] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22901_3.8:curl_7.61.1-r2",
          "ruleIndex": 148,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22901] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065_3.8:busybox_1.28.4-r3",
          "ruleIndex": 149,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30065] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42378_3.8:busybox_1.28.4-r3",
          "ruleIndex": 150,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42378] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27290_ssri_6.0.0",
          "ruleIndex": 151,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27290] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27290_ssri_6.0.0",
          "ruleIndex": 151,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27290] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8231_3.8:curl_7.61.1-r2",
          "ruleIndex": 152,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8231] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29187_3.8:git_2.18.1-r0",
          "ruleIndex": 153,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29187] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-13173_fstream_1.0.11",
          "ruleIndex": 154,
          "level": "error",
          "message": {
            "text": "[CVE-2019-13173] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-13173_fstream_1.0.11",
          "ruleIndex": 154,
          "level": "error",
          "message": {
            "text": "[CVE-2019-13173] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-13173_fstream_1.0.11",
          "ruleIndex": 154,
          "level": "error",
          "message": {
            "text": "[CVE-2019-13173] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-39260_3.8:git_2.18.1-r0",
          "ruleIndex": 155,
          "level": "error",
          "message": {
            "text": "[CVE-2022-39260] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8131_yarn_1.12.3",
          "ruleIndex": 156,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8131] sha256__7b8a51711c7ee68fef2ae68936aacd344ad8e7b93a675e1c814531219809ee88.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42385_3.8:busybox_1.28.4-r3",
          "ruleIndex": 157,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42385] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713_tar_4.4.8",
          "ruleIndex": 158,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37713] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713_tar_4.4.6",
          "ruleIndex": 159,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37713] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713_tar_4.4.6",
          "ruleIndex": 159,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37713] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713_tar_4.4.6",
          "ruleIndex": 159,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37713] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38039_3.8:curl_7.61.1-r2",
          "ruleIndex": 160,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38039] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-13115_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 161,
          "level": "error",
          "message": {
            "text": "[CVE-2019-13115] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42382_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 162,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42382] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3857_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 163,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3857] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11080_3.8:nghttp2-libs_1.32.0-r0",
          "ruleIndex": 164,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11080] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-15903_3.8:expat_2.2.5-r0",
          "ruleIndex": 165,
          "level": "error",
          "message": {
            "text": "[CVE-2019-15903] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42380_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 166,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42380] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0355_simple-get_2.8.1",
          "ruleIndex": 167,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0355] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8285_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 168,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8285] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42386_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 169,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42386] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7754_npm-user-validate_1.0.0",
          "ruleIndex": 170,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7754] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7754_npm-user-validate_1.0.0",
          "ruleIndex": 170,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7754] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43307_semver-regex_1.0.0",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "[CVE-2021-43307] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-18634_3.8:sudo_1.8.23-r2",
          "ruleIndex": 171,
          "level": "error",
          "message": {
            "text": "[CVE-2019-18634] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1351_3.8:git_2.18.1-r0",
          "ruleIndex": 172,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1351] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8116_dot-prop_4.2.0",
          "ruleIndex": 173,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8116] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8116_dot-prop_4.2.0",
          "ruleIndex": 173,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8116] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8116_dot-prop_4.2.0",
          "ruleIndex": 173,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8116] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-18684_3.8:sudo_1.8.23-r2",
          "ruleIndex": 174,
          "level": "error",
          "message": {
            "text": "[CVE-2019-18684] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20454_3.8:pcre2_10.31-r0",
          "ruleIndex": 175,
          "level": "error",
          "message": {
            "text": "[CVE-2019-20454] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29415_ip_1.1.5",
          "ruleIndex": 176,
          "level": "error",
          "message": {
            "text": "[CVE-2024-29415] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29415_ip_1.1.5",
          "ruleIndex": 176,
          "level": "error",
          "message": {
            "text": "[CVE-2024-29415] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31012_3.8:git_2.18.1-r0",
          "ruleIndex": 177,
          "level": "error",
          "message": {
            "text": "[CVE-2022-31012] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-7076_3.8:sudo_1.8.23-r2",
          "ruleIndex": 178,
          "level": "error",
          "message": {
            "text": "[CVE-2016-7076] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42915_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 179,
          "level": "error",
          "message": {
            "text": "[CVE-2023-42915] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42915_3.8:curl_7.61.1-r2",
          "ruleIndex": 180,
          "level": "error",
          "message": {
            "text": "[CVE-2023-42915] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37322_3.8:libgcc_6.4.0-r9",
          "ruleIndex": 181,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37322] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37322_3.8:libstdc++_6.4.0-r9",
          "ruleIndex": 182,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37322] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7090_3.8:sudo_1.8.23-r2",
          "ruleIndex": 183,
          "level": "error",
          "message": {
            "text": "[CVE-2023-7090] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24975_3.8:git_2.18.1-r0",
          "ruleIndex": 184,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24975] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46101_3.8:git_2.18.1-r0",
          "ruleIndex": 185,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46101] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5443_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 186,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5443] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5443_3.8:curl_7.61.1-r2",
          "ruleIndex": 187,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5443] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28321_3.8:curl_7.61.1-r2",
          "ruleIndex": 188,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28321] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28321_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 189,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28321] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 190,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-48795] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16980_3.8:curl_7.61.1-r2",
          "ruleIndex": 191,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-16980] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29041_express_4.16.3",
          "ruleIndex": 192,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-29041] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_3.8:libgcc_6.4.0-r9",
          "ruleIndex": 193,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16137_debug_0.8.1",
          "ruleIndex": 194,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-16137] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129954_highlight.js_9.12.0",
          "ruleIndex": 195,
          "level": "warning",
          "message": {
            "text": "[XRAY-129954] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-33987_got_6.7.1",
          "ruleIndex": 196,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-33987] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-33987_got_6.7.1",
          "ruleIndex": 196,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-33987] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-15608_yarn_1.12.3",
          "ruleIndex": 197,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-15608] sha256__7b8a51711c7ee68fef2ae68936aacd344ad8e7b93a675e1c814531219809ee88.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129944_highlight.js_9.12.0",
          "ruleIndex": 198,
          "level": "warning",
          "message": {
            "text": "[XRAY-129944] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129964_highlight.js_9.12.0",
          "ruleIndex": 199,
          "level": "warning",
          "message": {
            "text": "[XRAY-129964] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21670_markdown-it_8.4.2",
          "ruleIndex": 200,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-21670] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27779_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 201,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27779] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15366_ajv_6.5.4",
          "ruleIndex": 202,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15366] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23916_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 203,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23916] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129942_highlight.js_9.12.0",
          "ruleIndex": 204,
          "level": "warning",
          "message": {
            "text": "[XRAY-129942] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15366_ajv_6.10.0",
          "ruleIndex": 205,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15366] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129943_highlight.js_9.12.0",
          "ruleIndex": 206,
          "level": "warning",
          "message": {
            "text": "[XRAY-129943] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27537_3.8:curl_7.61.1-r2",
          "ruleIndex": 207,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27537] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129941_highlight.js_9.12.0",
          "ruleIndex": 208,
          "level": "warning",
          "message": {
            "text": "[XRAY-129941] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8244_bl_1.2.2",
          "ruleIndex": 209,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-8244] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129952_highlight.js_9.12.0",
          "ruleIndex": 210,
          "level": "warning",
          "message": {
            "text": "[XRAY-129952] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-29060_color-string_1.5.3",
          "ruleIndex": 211,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-29060] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219_3.8:curl_7.61.1-r2",
          "ruleIndex": 212,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46219] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22947_3.8:curl_7.61.1-r2",
          "ruleIndex": 213,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22947] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42375_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 214,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42375] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28928_3.8:musl_1.1.19-r10",
          "ruleIndex": 215,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-28928] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15095_npm_6.4.1",
          "ruleIndex": 216,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15095] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15095_npm_6.4.1",
          "ruleIndex": 216,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15095] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32205_3.8:curl_7.61.1-r2",
          "ruleIndex": 217,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32205] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27776_3.8:curl_7.61.1-r2",
          "ruleIndex": 218,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27776] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129959_highlight.js_9.12.0",
          "ruleIndex": 219,
          "level": "warning",
          "message": {
            "text": "[XRAY-129959] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129934_highlight.js_9.12.0",
          "ruleIndex": 220,
          "level": "warning",
          "message": {
            "text": "[XRAY-129934] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129965_highlight.js_9.12.0",
          "ruleIndex": 221,
          "level": "warning",
          "message": {
            "text": "[XRAY-129965] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28928_3.8:musl-utils_1.1.19-r10",
          "ruleIndex": 222,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-28928] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28849_follow-redirects_1.7.0",
          "ruleIndex": 223,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-28849] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28320_3.8:curl_7.61.1-r2",
          "ruleIndex": 224,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28320] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22947_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 225,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22947] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23413_jszip_2.6.1",
          "ruleIndex": 226,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-23413] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22876_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 227,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22876] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52426_3.8:expat_2.2.5-r0",
          "ruleIndex": 228,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-52426] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 229,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 230,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27535_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 231,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27535] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129945_highlight.js_9.12.0",
          "ruleIndex": 232,
          "level": "warning",
          "message": {
            "text": "[XRAY-129945] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.8:busybox_1.28.4-r3",
          "ruleIndex": 233,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30115_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 234,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-30115] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26159_follow-redirects_1.7.0",
          "ruleIndex": 235,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-26159] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16777_npm_6.4.1",
          "ruleIndex": 236,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-16777] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16777_npm_6.4.1",
          "ruleIndex": 236,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-16777] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16980_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 237,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-16980] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.8:busybox_1.28.4-r3",
          "ruleIndex": 238,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23915_3.8:curl_7.61.1-r2",
          "ruleIndex": 239,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23915] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32208_3.8:curl_7.61.1-r2",
          "ruleIndex": 240,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32208] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43552_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 241,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-43552] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129960_highlight.js_9.12.0",
          "ruleIndex": 242,
          "level": "warning",
          "message": {
            "text": "[XRAY-129960] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0853_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 243,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0853] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28162_@theia/messages_0.4.0",
          "ruleIndex": 244,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-28162] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-39253_3.8:git_2.18.1-r0",
          "ruleIndex": 245,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-39253] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0155_follow-redirects_1.7.0",
          "ruleIndex": 246,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-0155] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28168_axios_0.18.0",
          "ruleIndex": 247,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-28168] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129949_highlight.js_9.12.0",
          "ruleIndex": 248,
          "level": "warning",
          "message": {
            "text": "[XRAY-129949] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0853_3.8:curl_7.61.1-r2",
          "ruleIndex": 249,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0853] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129937_highlight.js_9.12.0",
          "ruleIndex": 250,
          "level": "warning",
          "message": {
            "text": "[XRAY-129937] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129966_highlight.js_9.12.0",
          "ruleIndex": 251,
          "level": "warning",
          "message": {
            "text": "[XRAY-129966] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23915_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 252,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23915] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129948_highlight.js_9.12.0",
          "ruleIndex": 253,
          "level": "warning",
          "message": {
            "text": "[XRAY-129948] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7608_yargs-parser_8.1.0",
          "ruleIndex": 254,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7608] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_3.8:libstdc++_6.4.0-r9",
          "ruleIndex": 255,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27538_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 256,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27538] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35260_3.8:curl_7.61.1-r2",
          "ruleIndex": 257,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-35260] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22876_3.8:curl_7.61.1-r2",
          "ruleIndex": 258,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22876] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22925_3.8:curl_7.61.1-r2",
          "ruleIndex": 259,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22925] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30115_3.8:curl_7.61.1-r2",
          "ruleIndex": 260,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-30115] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15366_ajv_5.5.2",
          "ruleIndex": 261,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15366] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15366_ajv_5.5.2",
          "ruleIndex": 261,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15366] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15366_ajv_5.5.2",
          "ruleIndex": 261,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15366] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.8:libressl2.7-libcrypto_2.7.4-r0",
          "ruleIndex": 262,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129967_highlight.js_9.12.0",
          "ruleIndex": 263,
          "level": "warning",
          "message": {
            "text": "[XRAY-129967] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129935_highlight.js_9.12.0",
          "ruleIndex": 264,
          "level": "warning",
          "message": {
            "text": "[XRAY-129935] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129968_highlight.js_9.12.0",
          "ruleIndex": 265,
          "level": "warning",
          "message": {
            "text": "[XRAY-129968] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35260_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 266,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-35260] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129947_highlight.js_9.12.0",
          "ruleIndex": 267,
          "level": "warning",
          "message": {
            "text": "[XRAY-129947] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23916_3.8:curl_7.61.1-r2",
          "ruleIndex": 268,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23916] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27774_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 269,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27774] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129963_highlight.js_9.12.0",
          "ruleIndex": 270,
          "level": "warning",
          "message": {
            "text": "[XRAY-129963] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28161_@theia/console_0.4.0",
          "ruleIndex": 271,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-28161] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.8:libressl2.7-libssl_2.7.4-r0",
          "ruleIndex": 272,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32205_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 273,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32205] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-33987_got_7.1.0",
          "ruleIndex": 274,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-33987] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23362_hosted-git-info_2.7.1",
          "ruleIndex": 275,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-23362] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23362_hosted-git-info_2.7.1",
          "ruleIndex": 275,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-23362] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23362_hosted-git-info_2.7.1",
          "ruleIndex": 275,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-23362] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32206_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 276,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32206] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32206_3.8:curl_7.61.1-r2",
          "ruleIndex": 277,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32206] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129961_highlight.js_9.12.0",
          "ruleIndex": 278,
          "level": "warning",
          "message": {
            "text": "[XRAY-129961] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7608_yargs-parser_11.1.1",
          "ruleIndex": 279,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7608] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0536_follow-redirects_1.7.0",
          "ruleIndex": 280,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-0536] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42375_3.8:busybox_1.28.4-r3",
          "ruleIndex": 281,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42375] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27538_3.8:curl_7.61.1-r2",
          "ruleIndex": 282,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27538] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27535_3.8:curl_7.61.1-r2",
          "ruleIndex": 283,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27535] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129946_highlight.js_9.12.0",
          "ruleIndex": 284,
          "level": "warning",
          "message": {
            "text": "[XRAY-129946] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22925_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 285,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22925] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 286,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129870_highlight.js_9.12.0",
          "ruleIndex": 287,
          "level": "warning",
          "message": {
            "text": "[XRAY-129870] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27537_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 288,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27537] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129969_highlight.js_9.12.0",
          "ruleIndex": 289,
          "level": "warning",
          "message": {
            "text": "[XRAY-129969] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129951_highlight.js_9.12.0",
          "ruleIndex": 290,
          "level": "warning",
          "message": {
            "text": "[XRAY-129951] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129970_highlight.js_9.12.0",
          "ruleIndex": 291,
          "level": "warning",
          "message": {
            "text": "[XRAY-129970] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129962_highlight.js_9.12.0",
          "ruleIndex": 292,
          "level": "warning",
          "message": {
            "text": "[XRAY-129962] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.8:busybox_1.28.4-r3",
          "ruleIndex": 293,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42374_3.8:busybox_1.28.4-r3",
          "ruleIndex": 294,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42374] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32640_ws_5.2.2",
          "ruleIndex": 295,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-32640] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 296,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27779_3.8:curl_7.61.1-r2",
          "ruleIndex": 297,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27779] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27776_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 298,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27776] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129938_highlight.js_9.12.0",
          "ruleIndex": 299,
          "level": "warning",
          "message": {
            "text": "[XRAY-129938] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27774_3.8:curl_7.61.1-r2",
          "ruleIndex": 300,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27774] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129950_highlight.js_9.12.0",
          "ruleIndex": 301,
          "level": "warning",
          "message": {
            "text": "[XRAY-129950] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41038_@theia/plugin-ext_0.4.0",
          "ruleIndex": 302,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-41038] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45857_axios_0.18.0",
          "ruleIndex": 303,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45857] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129940_highlight.js_9.12.0",
          "ruleIndex": 304,
          "level": "warning",
          "message": {
            "text": "[XRAY-129940] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43552_3.8:curl_7.61.1-r2",
          "ruleIndex": 305,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-43552] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15366_ajv_6.5.3",
          "ruleIndex": 306,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15366] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32208_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 307,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32208] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16137_debug_3.2.6",
          "ruleIndex": 308,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-16137] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16137_debug_3.2.6",
          "ruleIndex": 308,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-16137] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16775_npm_6.4.1",
          "ruleIndex": 309,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-16775] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16775_npm_6.4.1",
          "ruleIndex": 309,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-16775] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129939_highlight.js_9.12.0",
          "ruleIndex": 310,
          "level": "warning",
          "message": {
            "text": "[XRAY-129939] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129955_highlight.js_9.12.0",
          "ruleIndex": 311,
          "level": "warning",
          "message": {
            "text": "[XRAY-129955] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129953_highlight.js_9.12.0",
          "ruleIndex": 312,
          "level": "warning",
          "message": {
            "text": "[XRAY-129953] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218_3.8:curl_7.61.1-r2",
          "ruleIndex": 313,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46218] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28320_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 314,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28320] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.8:libressl2.7-libtls_2.7.4-r0",
          "ruleIndex": 315,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42374_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 316,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42374] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-33987_got_8.3.2",
          "ruleIndex": 317,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-33987] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129957_highlight.js_9.12.0",
          "ruleIndex": 318,
          "level": "warning",
          "message": {
            "text": "[XRAY-129957] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129958_highlight.js_9.12.0",
          "ruleIndex": 319,
          "level": "warning",
          "message": {
            "text": "[XRAY-129958] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.8:busybox_1.28.4-r3",
          "ruleIndex": 320,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7608_yargs-parser_9.0.2",
          "ruleIndex": 321,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7608] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7608_yargs-parser_9.0.2",
          "ruleIndex": 321,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7608] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7608_yargs-parser_9.0.2",
          "ruleIndex": 321,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7608] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 322,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46218] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129956_highlight.js_9.12.0",
          "ruleIndex": 323,
          "level": "warning",
          "message": {
            "text": "[XRAY-129956] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 324,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46219] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-129936_highlight.js_9.12.0",
          "ruleIndex": 325,
          "level": "warning",
          "message": {
            "text": "[XRAY-129936] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-22490_3.8:git_2.18.1-r0",
          "ruleIndex": 326,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-22490] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32640_ws_6.1.0",
          "ruleIndex": 327,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-32640] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22897_3.8:curl_7.61.1-r2",
          "ruleIndex": 328,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22897] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42376_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 329,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42376] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42376_3.8:busybox_1.28.4-r3",
          "ruleIndex": 330,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42376] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155_request_2.88.0",
          "ruleIndex": 331,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28155] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155_request_2.88.0",
          "ruleIndex": 331,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28155] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155_request_2.88.0",
          "ruleIndex": 331,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28155] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22897_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 332,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22897] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17594_3.8:ncurses-terminfo-base_6.1_p20180818-r1",
          "ruleIndex": 333,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17594] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17594_3.8:ncurses-terminfo_6.1_p20180818-r1",
          "ruleIndex": 334,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17594] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2013-0340_3.8:expat_2.2.5-r0",
          "ruleIndex": 335,
          "level": "warning",
          "message": {
            "text": "[CVE-2013-0340] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28486_3.8:sudo_1.8.23-r2",
          "ruleIndex": 336,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28486] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17595_3.8:ncurses-terminfo_6.1_p20180818-r1",
          "ruleIndex": 337,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17595] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48437_3.8:libressl2.7-libcrypto_2.7.4-r0",
          "ruleIndex": 338,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48437] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41581_3.8:libressl2.7-libcrypto_2.7.4-r0",
          "ruleIndex": 339,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-41581] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17594_3.8:ncurses-libs_6.1_p20180818-r1",
          "ruleIndex": 340,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17594] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48437_3.8:libressl2.7-libtls_2.7.4-r0",
          "ruleIndex": 341,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48437] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41581_3.8:libressl2.7-libtls_2.7.4-r0",
          "ruleIndex": 342,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-41581] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17595_3.8:ncurses-terminfo-base_6.1_p20180818-r1",
          "ruleIndex": 343,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17595] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28487_3.8:sudo_1.8.23-r2",
          "ruleIndex": 344,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28487] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41581_3.8:libressl2.7-libssl_2.7.4-r0",
          "ruleIndex": 345,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-41581] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17595_3.8:ncurses-libs_6.1_p20180818-r1",
          "ruleIndex": 346,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17595] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3826_3.8:libstdc++_6.4.0-r9",
          "ruleIndex": 347,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3826] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48437_3.8:libressl2.7-libssl_2.7.4-r0",
          "ruleIndex": 348,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48437] sha256__767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3826_3.8:libgcc_6.4.0-r9",
          "ruleIndex": 349,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3826] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22898_3.8:curl_7.61.1-r2",
          "ruleIndex": 350,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22898] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5435_3.8:curl_7.61.1-r2",
          "ruleIndex": 351,
          "level": "note",
          "message": {
            "text": "[CVE-2019-5435] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23239_3.8:sudo_1.8.23-r2",
          "ruleIndex": 352,
          "level": "note",
          "message": {
            "text": "[CVE-2021-23239] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22890_3.8:curl_7.61.1-r2",
          "ruleIndex": 353,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22890] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1348_3.8:git_2.18.1-r0",
          "ruleIndex": 354,
          "level": "note",
          "message": {
            "text": "[CVE-2019-1348] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-105536_npm-registry-fetch_1.1.0",
          "ruleIndex": 355,
          "level": "note",
          "message": {
            "text": "[XRAY-105536] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-105536_npm-registry-fetch_1.1.0",
          "ruleIndex": 355,
          "level": "note",
          "message": {
            "text": "[XRAY-105536] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22890_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 356,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22890] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18869_chownr_1.0.1",
          "ruleIndex": 357,
          "level": "note",
          "message": {
            "text": "[CVE-2017-18869] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18869_chownr_1.0.1",
          "ruleIndex": 357,
          "level": "note",
          "message": {
            "text": "[CVE-2017-18869] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18869_chownr_1.0.1",
          "ruleIndex": 357,
          "level": "note",
          "message": {
            "text": "[CVE-2017-18869] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22924_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 358,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22924] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5435_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 359,
          "level": "note",
          "message": {
            "text": "[CVE-2019-5435] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8284_3.8:curl_7.61.1-r2",
          "ruleIndex": 360,
          "level": "note",
          "message": {
            "text": "[CVE-2020-8284] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38546_3.8:curl_7.61.1-r2",
          "ruleIndex": 361,
          "level": "note",
          "message": {
            "text": "[CVE-2023-38546] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8284_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 362,
          "level": "note",
          "message": {
            "text": "[CVE-2020-8284] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35252_3.8:curl_7.61.1-r2",
          "ruleIndex": 363,
          "level": "note",
          "message": {
            "text": "[CVE-2022-35252] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25815_3.8:git_2.18.1-r0",
          "ruleIndex": 364,
          "level": "note",
          "message": {
            "text": "[CVE-2023-25815] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38546_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 365,
          "level": "note",
          "message": {
            "text": "[CVE-2023-38546] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22898_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 366,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22898] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22924_3.8:curl_7.61.1-r2",
          "ruleIndex": 367,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22924] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-105536_npm-registry-fetch_3.1.1",
          "ruleIndex": 368,
          "level": "note",
          "message": {
            "text": "[XRAY-105536] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-105536_npm-registry-fetch_3.1.1",
          "ruleIndex": 368,
          "level": "note",
          "message": {
            "text": "[XRAY-105536] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35252_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 369,
          "level": "note",
          "message": {
            "text": "[CVE-2022-35252] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28757_3.8:expat_2.2.5-r0",
          "ruleIndex": 370,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28757] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2466_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 371,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2466] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32465_3.8:git_2.18.1-r0",
          "ruleIndex": 372,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32465] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_3.8:curl_7.61.1-r2",
          "ruleIndex": 373,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2466_3.8:curl_7.61.1-r2",
          "ruleIndex": 374,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2466] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32020_3.8:git_2.18.1-r0",
          "ruleIndex": 375,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32020] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 376,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_3.8:curl_7.61.1-r2",
          "ruleIndex": 377,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2379] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2004_3.8:curl_7.61.1-r2",
          "ruleIndex": 378,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2004] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 379,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2379] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2004_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 380,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2004] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32021_3.8:git_2.18.1-r0",
          "ruleIndex": 381,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32021] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32002_3.8:git_2.18.1-r0",
          "ruleIndex": 382,
          "level": "error",
          "message": {
            "text": "[CVE-2024-32002] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10747_set-value_0.4.3",
          "ruleIndex": 383,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10747] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10747_set-value_0.4.3",
          "ruleIndex": 383,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10747] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7774_y18n_4.0.0",
          "ruleIndex": 384,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7774] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7774_y18n_4.0.0",
          "ruleIndex": 384,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7774] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7774_y18n_4.0.0",
          "ruleIndex": 384,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7774] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23852_3.8:expat_2.2.5-r0",
          "ruleIndex": 385,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23852] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7774_y18n_3.2.1",
          "ruleIndex": 386,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7774] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7774_y18n_3.2.1",
          "ruleIndex": 386,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7774] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7774_y18n_3.2.1",
          "ruleIndex": 386,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7774] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1586_3.8:pcre2_10.31-r0",
          "ruleIndex": 387,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1586] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22822_3.8:expat_2.2.5-r0",
          "ruleIndex": 388,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22822] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22824_3.8:expat_2.2.5-r0",
          "ruleIndex": 389,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22824] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25236_3.8:expat_2.2.5-r0",
          "ruleIndex": 390,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25236] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23440_set-value_2.0.0",
          "ruleIndex": 391,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23440] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23440_set-value_2.0.0",
          "ruleIndex": 391,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23440] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10747_set-value_2.0.0",
          "ruleIndex": 392,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10747] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10747_set-value_2.0.0",
          "ruleIndex": 392,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10747] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23440_set-value_0.4.3",
          "ruleIndex": 393,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23440] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23440_set-value_0.4.3",
          "ruleIndex": 393,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23440] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38545_3.8:curl_7.61.1-r2",
          "ruleIndex": 394,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38545] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42282_ip_1.1.5",
          "ruleIndex": 395,
          "level": "error",
          "message": {
            "text": "[CVE-2023-42282] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42282_ip_1.1.5",
          "ruleIndex": 395,
          "level": "error",
          "message": {
            "text": "[CVE-2023-42282] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136_tough-cookie_2.4.3",
          "ruleIndex": 396,
          "level": "error",
          "message": {
            "text": "[CVE-2023-26136] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136_tough-cookie_2.4.3",
          "ruleIndex": 396,
          "level": "error",
          "message": {
            "text": "[CVE-2023-26136] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136_tough-cookie_2.4.3",
          "ruleIndex": 396,
          "level": "error",
          "message": {
            "text": "[CVE-2023-26136] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22823_3.8:expat_2.2.5-r0",
          "ruleIndex": 397,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22823] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1587_3.8:pcre2_10.31-r0",
          "ruleIndex": 398,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1587] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25315_3.8:expat_2.2.5-r0",
          "ruleIndex": 399,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25315] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10746_mixin-deep_1.3.1",
          "ruleIndex": 400,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10746] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10746_mixin-deep_1.3.1",
          "ruleIndex": 400,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10746] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906_minimist_0.0.8",
          "ruleIndex": 401,
          "level": "error",
          "message": {
            "text": "[CVE-2021-44906] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906_minimist_0.0.8",
          "ruleIndex": 401,
          "level": "error",
          "message": {
            "text": "[CVE-2021-44906] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906_minimist_0.0.8",
          "ruleIndex": 401,
          "level": "error",
          "message": {
            "text": "[CVE-2021-44906] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3860_3.8:libssh2_1.8.0-r3",
          "ruleIndex": 402,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3860] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-12900_3.8:bzip2_1.0.6-r6",
          "ruleIndex": 403,
          "level": "error",
          "message": {
            "text": "[CVE-2019-12900] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23914_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 404,
          "level": "error",
          "message": {
            "text": "[CVE-2023-23914] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3918_json-schema_0.2.3",
          "ruleIndex": 405,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3918] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3918_json-schema_0.2.3",
          "ruleIndex": 405,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3918] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3918_json-schema_0.2.3",
          "ruleIndex": 405,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3918] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38545_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 406,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38545] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7788_ini_1.3.5",
          "ruleIndex": 407,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7788] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7788_ini_1.3.5",
          "ruleIndex": 407,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7788] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7788_ini_1.3.5",
          "ruleIndex": 407,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7788] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906_minimist_1.2.0",
          "ruleIndex": 408,
          "level": "error",
          "message": {
            "text": "[CVE-2021-44906] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906_minimist_1.2.0",
          "ruleIndex": 408,
          "level": "error",
          "message": {
            "text": "[CVE-2021-44906] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906_minimist_1.2.0",
          "ruleIndex": 408,
          "level": "error",
          "message": {
            "text": "[CVE-2021-44906] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32221_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 409,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32221] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136_tough-cookie_2.5.0",
          "ruleIndex": 410,
          "level": "error",
          "message": {
            "text": "[CVE-2023-26136] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906_minimist_0.0.10",
          "ruleIndex": 411,
          "level": "error",
          "message": {
            "text": "[CVE-2021-44906] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25235_3.8:expat_2.2.5-r0",
          "ruleIndex": 412,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25235] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-12265_decompress_4.2.0",
          "ruleIndex": 413,
          "level": "error",
          "message": {
            "text": "[CVE-2020-12265] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23914_3.8:curl_7.61.1-r2",
          "ruleIndex": 414,
          "level": "error",
          "message": {
            "text": "[CVE-2023-23914] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32221_3.8:curl_7.61.1-r2",
          "ruleIndex": 415,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32221] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29078_ejs_2.6.1",
          "ruleIndex": 416,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29078] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27781_3.8:curl_7.61.1-r2",
          "ruleIndex": 417,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27781] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43551_3.8:curl_7.61.1-r2",
          "ruleIndex": 418,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43551] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32804_tar_4.4.8",
          "ruleIndex": 419,
          "level": "error",
          "message": {
            "text": "[CVE-2021-32804] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48285_jszip_2.6.1",
          "ruleIndex": 420,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48285] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32804_tar_4.4.6",
          "ruleIndex": 421,
          "level": "error",
          "message": {
            "text": "[CVE-2021-32804] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32804_tar_4.4.6",
          "ruleIndex": 421,
          "level": "error",
          "message": {
            "text": "[CVE-2021-32804] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32804_tar_4.4.6",
          "ruleIndex": 421,
          "level": "error",
          "message": {
            "text": "[CVE-2021-32804] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27533_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 422,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27533] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52425_3.8:expat_2.2.5-r0",
          "ruleIndex": 423,
          "level": "error",
          "message": {
            "text": "[CVE-2023-52425] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-22809_3.8:sudo_1.8.23-r2",
          "ruleIndex": 424,
          "level": "error",
          "message": {
            "text": "[CVE-2023-22809] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_5.3.0",
          "ruleIndex": 425,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_5.3.0",
          "ruleIndex": 425,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38900_decode-uri-component_0.2.0",
          "ruleIndex": 426,
          "level": "error",
          "message": {
            "text": "[CVE-2022-38900] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38900_decode-uri-component_0.2.0",
          "ruleIndex": 426,
          "level": "error",
          "message": {
            "text": "[CVE-2022-38900] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38900_decode-uri-component_0.2.0",
          "ruleIndex": 426,
          "level": "error",
          "message": {
            "text": "[CVE-2022-38900] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-15847_3.8:libgcc_6.4.0-r9",
          "ruleIndex": 427,
          "level": "error",
          "message": {
            "text": "[CVE-2019-15847] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40674_3.8:expat_2.2.5-r0",
          "ruleIndex": 428,
          "level": "error",
          "message": {
            "text": "[CVE-2022-40674] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491_3.8:ncurses-libs_6.1_p20180818-r1",
          "ruleIndex": 429,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29491] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42916_3.8:curl_7.61.1-r2",
          "ruleIndex": 430,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42916] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22827_3.8:expat_2.2.5-r0",
          "ruleIndex": 431,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22827] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43551_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 432,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43551] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487_3.8:nghttp2-libs_1.32.0-r0",
          "ruleIndex": 433,
          "level": "error",
          "message": {
            "text": "[CVE-2023-44487] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22825_3.8:expat_2.2.5-r0",
          "ruleIndex": 434,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22825] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22576_3.8:curl_7.61.1-r2",
          "ruleIndex": 435,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22576] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491_3.8:ncurses-terminfo_6.1_p20180818-r1",
          "ruleIndex": 436,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29491] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999_qs_6.5.2",
          "ruleIndex": 437,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24999] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999_qs_6.5.2",
          "ruleIndex": 437,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24999] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999_qs_6.5.2",
          "ruleIndex": 437,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24999] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22826_3.8:expat_2.2.5-r0",
          "ruleIndex": 438,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22826] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807_ansi-regex_3.0.0",
          "ruleIndex": 439,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3807] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807_ansi-regex_3.0.0",
          "ruleIndex": 439,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3807] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807_ansi-regex_3.0.0",
          "ruleIndex": 439,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3807] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_5.6.0",
          "ruleIndex": 440,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35945_3.8:nghttp2-libs_1.32.0-r0",
          "ruleIndex": 441,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35945] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22946_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 442,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22946] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37712_tar_4.4.6",
          "ruleIndex": 443,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37712] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37712_tar_4.4.6",
          "ruleIndex": 443,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37712] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37712_tar_4.4.6",
          "ruleIndex": 443,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37712] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23343_path-parse_1.0.6",
          "ruleIndex": 444,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23343] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807_ansi-regex_4.0.0",
          "ruleIndex": 445,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3807] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31129_moment_2.22.2",
          "ruleIndex": 446,
          "level": "error",
          "message": {
            "text": "[CVE-2022-31129] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517_minimatch_3.0.4",
          "ruleIndex": 447,
          "level": "error",
          "message": {
            "text": "[CVE-2022-3517] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517_minimatch_3.0.4",
          "ruleIndex": 447,
          "level": "error",
          "message": {
            "text": "[CVE-2022-3517] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517_minimatch_3.0.4",
          "ruleIndex": 447,
          "level": "error",
          "message": {
            "text": "[CVE-2022-3517] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41409_3.8:pcre2_10.31-r0",
          "ruleIndex": 448,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41409] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43138_async_2.6.2",
          "ruleIndex": 449,
          "level": "error",
          "message": {
            "text": "[CVE-2021-43138] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3749_axios_0.18.0",
          "ruleIndex": 450,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3749] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22576_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 451,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22576] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999_qs_6.5.1",
          "ruleIndex": 452,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24999] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24785_moment_2.22.2",
          "ruleIndex": 453,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24785] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-4435_yarn_1.12.3",
          "ruleIndex": 454,
          "level": "error",
          "message": {
            "text": "[CVE-2021-4435] sha256__7b8a51711c7ee68fef2ae68936aacd344ad8e7b93a675e1c814531219809ee88.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42916_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 455,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42916] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491_3.8:ncurses-terminfo-base_6.1_p20180818-r1",
          "ruleIndex": 456,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29491] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27781_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 457,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27781] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43680_3.8:expat_2.2.5-r0",
          "ruleIndex": 458,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43680] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_5.5.1",
          "ruleIndex": 459,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25881_http-cache-semantics_3.8.1",
          "ruleIndex": 460,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25881] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25881_http-cache-semantics_3.8.1",
          "ruleIndex": 460,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25881] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-20165_debug_0.8.1",
          "ruleIndex": 461,
          "level": "error",
          "message": {
            "text": "[CVE-2017-20165] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_5.5.0",
          "ruleIndex": 462,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_5.5.0",
          "ruleIndex": 462,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27320_3.8:sudo_1.8.23-r2",
          "ruleIndex": 463,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27320] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37712_tar_4.4.8",
          "ruleIndex": 464,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37712] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23990_3.8:expat_2.2.5-r0",
          "ruleIndex": 465,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23990] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-15847_3.8:libstdc++_6.4.0-r9",
          "ruleIndex": 466,
          "level": "error",
          "message": {
            "text": "[CVE-2019-15847] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25652_3.8:git_2.18.1-r0",
          "ruleIndex": 467,
          "level": "error",
          "message": {
            "text": "[CVE-2023-25652] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22946_3.8:curl_7.61.1-r2",
          "ruleIndex": 468,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22946] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20149_kind-of_6.0.2",
          "ruleIndex": 469,
          "level": "error",
          "message": {
            "text": "[CVE-2019-20149] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20149_kind-of_6.0.2",
          "ruleIndex": 469,
          "level": "error",
          "message": {
            "text": "[CVE-2019-20149] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27533_3.8:curl_7.61.1-r2",
          "ruleIndex": 470,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27533] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32804_tar_2.2.1",
          "ruleIndex": 471,
          "level": "error",
          "message": {
            "text": "[CVE-2021-32804] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32804_tar_2.2.1",
          "ruleIndex": 471,
          "level": "error",
          "message": {
            "text": "[CVE-2021-32804] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12886_3.8:libgcc_6.4.0-r9",
          "ruleIndex": 472,
          "level": "error",
          "message": {
            "text": "[CVE-2018-12886] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-18276_3.8:bash_4.4.19-r1",
          "ruleIndex": 473,
          "level": "error",
          "message": {
            "text": "[CVE-2019-18276] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12886_3.8:libstdc++_6.4.0-r9",
          "ruleIndex": 474,
          "level": "error",
          "message": {
            "text": "[CVE-2018-12886] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863_tar_4.4.8",
          "ruleIndex": 475,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-28863] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22923_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 476,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22923] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25313_3.8:expat_2.2.5-r0",
          "ruleIndex": 477,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-25313] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598_minimist_0.0.10",
          "ruleIndex": 478,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7598] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22922_3.8:curl_7.61.1-r2",
          "ruleIndex": 479,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22922] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22923_3.8:curl_7.61.1-r2",
          "ruleIndex": 480,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22923] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27536_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 481,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27536] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863_tar_4.4.6",
          "ruleIndex": 482,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-28863] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863_tar_4.4.6",
          "ruleIndex": 482,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-28863] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863_tar_4.4.6",
          "ruleIndex": 482,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-28863] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22922_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 483,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22922] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598_minimist_0.0.8",
          "ruleIndex": 484,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7598] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598_minimist_0.0.8",
          "ruleIndex": 484,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7598] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598_minimist_0.0.8",
          "ruleIndex": 484,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7598] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27536_3.8:curl_7.61.1-r2",
          "ruleIndex": 485,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27536] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33883_ejs_2.6.1",
          "ruleIndex": 486,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-33883] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863_tar_2.2.1",
          "ruleIndex": 487,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-28863] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863_tar_2.2.1",
          "ruleIndex": 487,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-28863] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598_minimist_1.2.0",
          "ruleIndex": 488,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7598] sha256__a44c6bc861e14c535fd78b524fb4f795c15da8ff4d507acf0cf6419038636c0f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598_minimist_1.2.0",
          "ruleIndex": 488,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7598] sha256__0c08bec55bf23764b861d94768e3000ae341df151143eef84142a3e469675b51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598_minimist_1.2.0",
          "ruleIndex": 488,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7598] sha256__20684f07652b4027cec70559e9105755a961d1e973bfb2b2a66f423f08eee3cf.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28322_3.8:libcurl_7.61.1-r2",
          "ruleIndex": 489,
          "level": "note",
          "message": {
            "text": "[CVE-2023-28322] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28322_3.8:curl_7.61.1-r2",
          "ruleIndex": 490,
          "level": "note",
          "message": {
            "text": "[CVE-2023-28322] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32004_3.8:git_2.18.1-r0",
          "ruleIndex": 491,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32004] sha256__4a829424f19ac267dab4f55427cb08ddd4c7bdd6e322f50b1ccb7cf63725fbc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2018-1000517",
              "name": "CVE-2018-1000517",
              "shortDescription": {
                "text": "Scanner for CVE-2018-1000517"
              },
              "fullDescription": {
                "text": "The scanner checks whether the BusyBox binary supports `wget`.\n\nNote: The scanner does not check whether busybox's `wget` is executed in the image. To confirm the applicability, this should also be verified.",
                "markdown": "The scanner checks whether the BusyBox binary supports `wget`.\n\nNote: The scanner does not check whether busybox's `wget` is executed in the image. To confirm the applicability, this should also be verified."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-12886",
              "name": "CVE-2018-12886",
              "shortDescription": {
                "text": "Scanner for CVE-2018-12886"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-25032",
              "name": "CVE-2018-25032",
              "shortDescription": {
                "text": "Scanner for CVE-2018-25032"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `deflateInit2` is called.",
                "markdown": "The scanner checks whether the vulnerable function `deflateInit2` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-28321",
              "name": "CVE-2023-28321",
              "shortDescription": {
                "text": "Scanner for CVE-2023-28321"
              },
              "fullDescription": {
                "text": "The CVE is applicable in all possible configurations of cURL",
                "markdown": "The CVE is applicable in all possible configurations of cURL"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative"
              }
            },
            {
              "id": "applic_CVE-2021-4435",
              "name": "CVE-2021-4435",
              "shortDescription": {
                "text": "Scanner for CVE-2021-4435"
              },
              "fullDescription": {
                "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.",
                "markdown": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-12900",
              "name": "CVE-2019-12900",
              "shortDescription": {
                "text": "Scanner for CVE-2019-12900"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are referenced:\n\n* `BZ2_bzDecompress`\n* `BZ2_bzRead`\n* `BZ2_bzBuffToBuffDecompress`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are referenced:\n\n* `BZ2_bzDecompress`\n* `BZ2_bzRead`\n* `BZ2_bzBuffToBuffDecompress`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-15847",
              "name": "CVE-2019-15847",
              "shortDescription": {
                "text": "Scanner for CVE-2019-15847"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-3860",
              "name": "CVE-2019-3860",
              "shortDescription": {
                "text": "Scanner for CVE-2019-3860"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following functions is called:\n\n- libssh2_sftp_open_r\n- libssh2_sftp_open_ex_r\n- libssh2_sftp_open\n- libssh2_sftp_opendir\n- libssh2_sftp_open_ex\n- libssh2_sftp_fstat\n- libssh2_sftp_fsetstat\n- libssh2_sftp_fstat_ex\n- libssh2_sftp_read\n- libssh2_sftp_readdir\n- libssh2_sftp_readdir_ex\n- libssh2_sftp_symlink\n- libssh2_sftp_readlink\n- libssh2_sftp_realpath\n- libssh2_sftp_symlink_ex\n- libssh2_sftp_rmdir\n- libssh2_sftp_rmdir_ex\n- libssh2_sftp_mkdir\n- libssh2_sftp_mkdir_ex\n- libssh2_sftp_rmdir\n- libssh2_sftp_rmdir_ex\n- libssh2_sftp_statvfs\n- libssh2_sftp_rename\n- libssh2_sftp_rename_ex\n- libssh2_sftp_unlink\n- libssh2_sftp_unlink_ex\n- libssh2_sftp_fsync\n- libssh2_sftp_close\n- libssh2_sftp_closedir\n- libssh2_sftp_close_handle\n- libssh2_sftp_write",
                "markdown": "The scanner checks whether one of the following functions is called:\n\n- libssh2_sftp_open_r\n- libssh2_sftp_open_ex_r\n- libssh2_sftp_open\n- libssh2_sftp_opendir\n- libssh2_sftp_open_ex\n- libssh2_sftp_fstat\n- libssh2_sftp_fsetstat\n- libssh2_sftp_fstat_ex\n- libssh2_sftp_read\n- libssh2_sftp_readdir\n- libssh2_sftp_readdir_ex\n- libssh2_sftp_symlink\n- libssh2_sftp_readlink\n- libssh2_sftp_realpath\n- libssh2_sftp_symlink_ex\n- libssh2_sftp_rmdir\n- libssh2_sftp_rmdir_ex\n- libssh2_sftp_mkdir\n- libssh2_sftp_mkdir_ex\n- libssh2_sftp_rmdir\n- libssh2_sftp_rmdir_ex\n- libssh2_sftp_statvfs\n- libssh2_sftp_rename\n- libssh2_sftp_rename_ex\n- libssh2_sftp_unlink\n- libssh2_sftp_unlink_ex\n- libssh2_sftp_fsync\n- libssh2_sftp_close\n- libssh2_sftp_closedir\n- libssh2_sftp_close_handle\n- libssh2_sftp_write"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-12265",
              "name": "CVE-2020-12265",
              "shortDescription": {
                "text": "Scanner for CVE-2020-12265"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable library `decompress` is referenced.",
                "markdown": "The scanner checks whether the vulnerable library `decompress` is referenced."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-44906",
              "name": "CVE-2021-44906",
              "shortDescription": {
                "text": "Scanner for CVE-2021-44906"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present.",
                "markdown": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-7598",
              "name": "CVE-2020-7598",
              "shortDescription": {
                "text": "Scanner for CVE-2020-7598"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present.",
                "markdown": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-7788",
              "name": "CVE-2020-7788",
              "shortDescription": {
                "text": "Scanner for CVE-2020-7788"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `ini.parse` is called.",
                "markdown": "The scanner checks whether the vulnerable function `ini.parse` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22923",
              "name": "CVE-2021-22923",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22923"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used.",
                "markdown": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22922",
              "name": "CVE-2021-22922",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22922"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used.",
                "markdown": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22946",
              "name": "CVE-2021-22946",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22946"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable functionality, by checking whether any of the following vulnerable flags are used:\n\n- `--ssl-reqd`\n- `--ftp-ssl-reqd`",
                "markdown": "The scanner checks whether `curl` supports the vulnerable functionality, by checking whether any of the following vulnerable flags are used:\n\n- `--ssl-reqd`\n- `--ftp-ssl-reqd`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3156",
              "name": "CVE-2021-3156",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3156"
              },
              "fullDescription": {
                "text": "The scanner checks if the vulnerable configuration file `/etc/sudoers` exists.",
                "markdown": "The scanner checks if the vulnerable configuration file `/etc/sudoers` exists."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-32804",
              "name": "CVE-2021-32804",
              "shortDescription": {
                "text": "Scanner for CVE-2021-32804"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-37712",
              "name": "CVE-2021-37712",
              "shortDescription": {
                "text": "Scanner for CVE-2021-37712"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x\n* `tar.extract`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x\n* `tar.extract`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-28863",
              "name": "CVE-2024-28863",
              "shortDescription": {
                "text": "Scanner for CVE-2024-28863"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3749",
              "name": "CVE-2021-3749",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3749"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `trim` is called.",
                "markdown": "The scanner checks whether the vulnerable function `trim` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3807",
              "name": "CVE-2021-3807",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3807"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `ansi-regex` is called.",
                "markdown": "The scanner checks whether the vulnerable function `ansi-regex` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3918",
              "name": "CVE-2021-3918",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3918"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `json-schema.validate` with external input to its 1st (`instance`) argument.\n* `json-schema.checkPropertyChange` with external input to its 2nd (`schema`) argument.\n\nThe scanner also checks whether the `Object.freeze()` remediation is not present.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `json-schema.validate` with external input to its 1st (`instance`) argument.\n* `json-schema.checkPropertyChange` with external input to its 2nd (`schema`) argument.\n\nThe scanner also checks whether the `Object.freeze()` remediation is not present."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-43138",
              "name": "CVE-2021-43138",
              "shortDescription": {
                "text": "Scanner for CVE-2021-43138"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `mapValues` is called with external input to its 1st (`obj`) argument, and the `Object.freeze()` remediation is not present.",
                "markdown": "The scanner checks whether the vulnerable function `mapValues` is called with external input to its 1st (`obj`) argument, and the `Object.freeze()` remediation is not present."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1587",
              "name": "CVE-2022-1587",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1587"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1586",
              "name": "CVE-2022-1586",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1586"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24785",
              "name": "CVE-2022-24785",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24785"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `locale` is called with external input to its 1st (`config`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `locale` is called with external input to its 1st (`config`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24999",
              "name": "CVE-2022-24999",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24999"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `qs.parse` is called with the non-default option 'allowPrototypes' enabled, and the `Object.freeze()` remediation is not present.\nIt also checks whether `express.js` has a GET path that processes its query strings.",
                "markdown": "The scanner checks whether the vulnerable function `qs.parse` is called with the non-default option 'allowPrototypes' enabled, and the `Object.freeze()` remediation is not present.\nIt also checks whether `express.js` has a GET path that processes its query strings."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25881",
              "name": "CVE-2022-25881",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25881"
              },
              "fullDescription": {
                "text": "The scanner checks whether the object `CachePolicy` has been initiated using user-controlled input, or whether the vulnerable function `satisfiesWithoutRevalidation` has been called with user-controlled input.",
                "markdown": "The scanner checks whether the object `CachePolicy` has been initiated using user-controlled input, or whether the vulnerable function `satisfiesWithoutRevalidation` has been called with user-controlled input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-29078",
              "name": "CVE-2022-29078",
              "shortDescription": {
                "text": "Scanner for CVE-2022-29078"
              },
              "fullDescription": {
                "text": "The scanner checks for two vulnerable flows:\n\n1. Whether the `express.set` function is called with the arguments: `view engine` and `ejs`, or external input and if it's followed by a call to the vulnerable function `render` with an unknown second argument.\n\n2. Whether the `renderFile` function is called with an unknown second argument.\n\nThe scanner also checks whether the `Object.freeze()` remediation is not present.",
                "markdown": "The scanner checks for two vulnerable flows:\n\n1. Whether the `express.set` function is called with the arguments: `view engine` and `ejs`, or external input and if it's followed by a call to the vulnerable function `render` with an unknown second argument.\n\n2. Whether the `renderFile` function is called with an unknown second argument.\n\nThe scanner also checks whether the `Object.freeze()` remediation is not present."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-31129",
              "name": "CVE-2022-31129",
              "shortDescription": {
                "text": "Scanner for CVE-2022-31129"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `moment` is called with external input to its 1st (`config`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `moment` is called with external input to its 1st (`config`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-3517",
              "name": "CVE-2022-3517",
              "shortDescription": {
                "text": "Scanner for CVE-2022-3517"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called with external input to the `pattern` argument and brace expansion is not disabled (by the option `{nobrace: true}`):\n\n- `minimatch()`\n- `minimatch.braceExpand()`\n- `minimatch.filter()`\n- `minimatch.match()`\n- `minimatch.makeRe()`\n- `minimatch.Minimatch.prototype.braceExpand()`\n- `minimatch.Minimatch() `\n\nNote that if a call to the `minimatch.filter()` function was found by the scanner, the vulnerability is applicable only if the function returned by `minimatch.filter()` is invoked. Currently, the scanner does not check that.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called with external input to the `pattern` argument and brace expansion is not disabled (by the option `{nobrace: true}`):\n\n- `minimatch()`\n- `minimatch.braceExpand()`\n- `minimatch.filter()`\n- `minimatch.match()`\n- `minimatch.makeRe()`\n- `minimatch.Minimatch.prototype.braceExpand()`\n- `minimatch.Minimatch() `\n\nNote that if a call to the `minimatch.filter()` function was found by the scanner, the vulnerability is applicable only if the function returned by `minimatch.filter()` is invoked. Currently, the scanner does not check that."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-37434",
              "name": "CVE-2022-37434",
              "shortDescription": {
                "text": "Scanner for CVE-2022-37434"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-38900",
              "name": "CVE-2022-38900",
              "shortDescription": {
                "text": "Scanner for CVE-2022-38900"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `decode-uri-component` is called with external input.",
                "markdown": "The scanner checks whether the vulnerable function `decode-uri-component` is called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-40674",
              "name": "CVE-2022-40674",
              "shortDescription": {
                "text": "Scanner for CVE-2022-40674"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22822",
              "name": "CVE-2022-22822",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22822"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22823",
              "name": "CVE-2022-22823",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22823"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22824",
              "name": "CVE-2022-22824",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22824"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22825",
              "name": "CVE-2022-22825",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22825"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23852",
              "name": "CVE-2022-23852",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23852"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23990",
              "name": "CVE-2022-23990",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23990"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25235",
              "name": "CVE-2022-25235",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25235"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25236",
              "name": "CVE-2022-25236",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25236"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25315",
              "name": "CVE-2022-25315",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25315"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22826",
              "name": "CVE-2022-22826",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22826"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22827",
              "name": "CVE-2022-22827",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22827"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25313",
              "name": "CVE-2022-25313",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25313"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-52425",
              "name": "CVE-2023-52425",
              "shortDescription": {
                "text": "Scanner for CVE-2023-52425"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks.",
                "markdown": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-43680",
              "name": "CVE-2022-43680",
              "shortDescription": {
                "text": "Scanner for CVE-2022-43680"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-42916",
              "name": "CVE-2022-42916",
              "shortDescription": {
                "text": "Scanner for CVE-2022-42916"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-43551",
              "name": "CVE-2022-43551",
              "shortDescription": {
                "text": "Scanner for CVE-2022-43551"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-23914",
              "name": "CVE-2023-23914",
              "shortDescription": {
                "text": "Scanner for CVE-2023-23914"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-48285",
              "name": "CVE-2022-48285",
              "shortDescription": {
                "text": "Scanner for CVE-2022-48285"
              },
              "fullDescription": {
                "text": "The scanner checks if the vulnerable function `jszip.loadAsync` is called with external input.",
                "markdown": "The scanner checks if the vulnerable function `jszip.loadAsync` is called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-22809",
              "name": "CVE-2023-22809",
              "shortDescription": {
                "text": "Scanner for CVE-2023-22809"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `/etc/sudoers` file has the vulnerable directive `sudoedit`.\n\nFor determining the applicability of this CVE, it is mandatory to verify that no mitigation is present. The scanner currently does not detect this case.\n\nAn example of a global mitigation:\n```\nDefaults!sudoedit    env_delete+=\"SUDO_EDITOR VISUAL EDITOR\"\n```\nAn example of a mitigation on a specific alias:\n```\nCmnd_Alias              EDIT_MOTD = sudoedit /etc/motd\nDefaults!EDIT_MOTD      env_delete+=\"SUDO_EDITOR VISUAL EDITOR\"\nuser                    ALL = EDIT_MOTD\n```",
                "markdown": "The scanner checks whether the `/etc/sudoers` file has the vulnerable directive `sudoedit`.\n\nFor determining the applicability of this CVE, it is mandatory to verify that no mitigation is present. The scanner currently does not detect this case.\n\nAn example of a global mitigation:\n```\nDefaults!sudoedit    env_delete+=\"SUDO_EDITOR VISUAL EDITOR\"\n```\nAn example of a mitigation on a specific alias:\n```\nCmnd_Alias              EDIT_MOTD = sudoedit /etc/motd\nDefaults!EDIT_MOTD      env_delete+=\"SUDO_EDITOR VISUAL EDITOR\"\nuser                    ALL = EDIT_MOTD\n```"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27320",
              "name": "CVE-2023-27320",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27320"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `/etc/sudoers` file has the vulnerable setting `CHROOT`.",
                "markdown": "The scanner checks whether the `/etc/sudoers` file has the vulnerable setting `CHROOT`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27533",
              "name": "CVE-2023-27533",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27533"
              },
              "fullDescription": {
                "text": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`",
                "markdown": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27536",
              "name": "CVE-2023-27536",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27536"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32221",
              "name": "CVE-2022-32221",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32221"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl_easy_setopt()` is called.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that both CURLOPT_READFUNCTION and CURLOPT_POSTFIELDS options are set through `curl_easy_setopt()` on the same handler.",
                "markdown": "The scanner checks whether the `curl_easy_setopt()` is called.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that both CURLOPT_READFUNCTION and CURLOPT_POSTFIELDS options are set through `curl_easy_setopt()` on the same handler."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-28322",
              "name": "CVE-2023-28322",
              "shortDescription": {
                "text": "Scanner for CVE-2023-28322"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)",
                "markdown": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29491",
              "name": "CVE-2023-29491",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29491"
              },
              "fullDescription": {
                "text": "The scanner checks whether a **setuid** binary calls any of the following vulnerable functions -\n- `initscr` \n- `setupterm`\n- `restartterm`\n- `_nc_read_file_entry`",
                "markdown": "The scanner checks whether a **setuid** binary calls any of the following vulnerable functions -\n- `initscr` \n- `setupterm`\n- `restartterm`\n- `_nc_read_file_entry`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-26136",
              "name": "CVE-2023-26136",
              "shortDescription": {
                "text": "Scanner for CVE-2023-26136"
              },
              "fullDescription": {
                "text": "The scanner checks for the initialization of `CookieJar()` with the vulnerable option ` rejectPublicSuffixes` set to false.",
                "markdown": "The scanner checks for the initialization of `CookieJar()` with the vulnerable option ` rejectPublicSuffixes` set to false."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25883",
              "name": "CVE-2022-25883",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25883"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`",
                "markdown": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-10746",
              "name": "CVE-2019-10746",
              "shortDescription": {
                "text": "Scanner for CVE-2019-10746"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `mixinDeep` is called.",
                "markdown": "The scanner checks whether the vulnerable function `mixinDeep` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-10747",
              "name": "CVE-2019-10747",
              "shortDescription": {
                "text": "Scanner for CVE-2019-10747"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `set` is called.",
                "markdown": "The scanner checks whether the vulnerable function `set` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-23440",
              "name": "CVE-2021-23440",
              "shortDescription": {
                "text": "Scanner for CVE-2021-23440"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `set` is called.",
                "markdown": "The scanner checks whether the vulnerable function `set` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-7774",
              "name": "CVE-2020-7774",
              "shortDescription": {
                "text": "Scanner for CVE-2020-7774"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `setLocale` is called with external input to its 1st argument",
                "markdown": "The scanner checks whether the vulnerable function `setLocale` is called with external input to its 1st argument"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-23343",
              "name": "CVE-2021-23343",
              "shortDescription": {
                "text": "Scanner for CVE-2021-23343"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following functions are called with external input:\n\n* `pathParse.posix`\n\n* `pathParse.win32`\n\n* `pathParse`",
                "markdown": "The scanner checks if any of the following functions are called with external input:\n\n* `pathParse.posix`\n\n* `pathParse.win32`\n\n* `pathParse`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-20149",
              "name": "CVE-2019-20149",
              "shortDescription": {
                "text": "Scanner for CVE-2019-20149"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable constructor `kind-of` is called with external input.",
                "markdown": "The scanner checks whether the vulnerable constructor `kind-of` is called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-20165",
              "name": "CVE-2017-20165",
              "shortDescription": {
                "text": "Scanner for CVE-2017-20165"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable `debug()` function is used with a non-constant value.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the `debug()` function should print an object.",
                "markdown": "The scanner checks whether the vulnerable `debug()` function is used with a non-constant value.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the `debug()` function should print an object."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41409",
              "name": "CVE-2022-41409",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41409"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable `pcre2test` binary exists on the scanned artifact.",
                "markdown": "The scanner checks whether the vulnerable `pcre2test` binary exists on the scanned artifact."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-38545",
              "name": "CVE-2023-38545",
              "shortDescription": {
                "text": "Scanner for CVE-2023-38545"
              },
              "fullDescription": {
                "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`",
                "markdown": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-35945",
              "name": "CVE-2023-35945",
              "shortDescription": {
                "text": "Scanner for CVE-2023-35945"
              },
              "fullDescription": {
                "text": "The scanner checks whether the Envoy YAML or JSON configuration contains a definition for an upstream cluster.\nFor example -\n```yaml\nstatic_resources:\n\tclusters:\n\t- name: ...\t\n```",
                "markdown": "The scanner checks whether the Envoy YAML or JSON configuration contains a definition for an upstream cluster.\nFor example -\n```yaml\nstatic_resources:\n\tclusters:\n\t- name: ...\t\n```"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-48795",
              "name": "CVE-2023-48795",
              "shortDescription": {
                "text": "Scanner for CVE-2023-48795"
              },
              "fullDescription": {
                "text": "The scanner looks for the OpenSSH/libssh server and client configurations in the following locations:\n\n* `/etc/ssh/sshd_config`\n* `/etc/ssh/ssh_config`\n* `~/.ssh/config`\n* `/root/.ssh/config`\n\nAnd checks if all of the following steps were taken to mitigate the vulnerability:\n\n1. Disabling/overriding the vulnerable `chacha20-poly1305` cipher, which is enabled by default.\n\n2. Turning off `AES-CBC`, unless you combine it with case 3.\n\n3. Disabling/overriding the vulnerable Message Authentication Code (MAC) algorithms, some of which are enabled by default. This is only relevant when `AES-CBC` is enabled.\n\nThe scanner currently only checks for libssh and OpenSSH attack prerequisites, even though other SSH programs may be vulnerable with different prerequisites. Therefore - the scanner either returns an Applicable result (libssh or OpenSSH are applicable) or an Undetermined result (libssh or OpenSSH are not applicable, other SSH programs may be applicable).",
                "markdown": "The scanner looks for the OpenSSH/libssh server and client configurations in the following locations:\n\n* `/etc/ssh/sshd_config`\n* `/etc/ssh/ssh_config`\n* `~/.ssh/config`\n* `/root/.ssh/config`\n\nAnd checks if all of the following steps were taken to mitigate the vulnerability:\n\n1. Disabling/overriding the vulnerable `chacha20-poly1305` cipher, which is enabled by default.\n\n2. Turning off `AES-CBC`, unless you combine it with case 3.\n\n3. Disabling/overriding the vulnerable Message Authentication Code (MAC) algorithms, some of which are enabled by default. This is only relevant when `AES-CBC` is enabled.\n\nThe scanner currently only checks for libssh and OpenSSH attack prerequisites, even though other SSH programs may be vulnerable with different prerequisites. Therefore - the scanner either returns an Applicable result (libssh or OpenSSH are applicable) or an Undetermined result (libssh or OpenSSH are not applicable, other SSH programs may be applicable)."
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "applic_CVE-2023-27534",
              "name": "CVE-2023-27534",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27534"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following conditions are met:\n\n- The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n- A connection to an SFTP server is made using Curl.\n\nIf any of the conditions are not met, the scanner will return an inconclusive result because Curl may be executed dynamically with user-provided SFTP address.",
                "markdown": "The scanner checks if any of the following conditions are met:\n\n- The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n- A connection to an SFTP server is made using Curl.\n\nIf any of the conditions are not met, the scanner will return an inconclusive result because Curl may be executed dynamically with user-provided SFTP address."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-42465",
              "name": "CVE-2023-42465",
              "shortDescription": {
                "text": "Scanner for CVE-2023-42465"
              },
              "fullDescription": {
                "text": "The CVE is always applicable.\n\nNote - The vulnerability is hardware-dependent.",
                "markdown": "The CVE is always applicable.\n\nNote - The vulnerability is hardware-dependent."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative"
              }
            },
            {
              "id": "applic_CVE-2023-42282",
              "name": "CVE-2023-42282",
              "shortDescription": {
                "text": "Scanner for CVE-2023-42282"
              },
              "fullDescription": {
                "text": "The scanner checks whether `isPublic()` is called with external input.",
                "markdown": "The scanner checks whether `isPublic()` is called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-25652",
              "name": "CVE-2023-25652",
              "shortDescription": {
                "text": "Scanner for CVE-2023-25652"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable `git apply` command is used with the vulnerable option:\n\n* `--reject` \n\nThis vulnerability can also be triggered by an interactive user.",
                "markdown": "The scanner checks whether the vulnerable `git apply` command is used with the vulnerable option:\n\n* `--reject` \n\nThis vulnerability can also be triggered by an interactive user."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-33883",
              "name": "CVE-2024-33883",
              "shortDescription": {
                "text": "Scanner for CVE-2024-33883"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `ejs.compile()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `ejs.compile()` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-27782",
              "name": "CVE-2022-27782",
              "shortDescription": {
                "text": "Scanner for CVE-2022-27782"
              },
              "fullDescription": {
                "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is used with the vulnerable argument `--crlfile` or `--proxy-crlfile`.\n2. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, to fully determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n**TLS options**\n\n* `CURLOPT_SSL_OPTIONS`\n* `CURLOPT_CRLFILE`\n* `CURLOPT_TLSAUTH_USERNAME`\n* `CURLOPT_TLSAUTH_PASSWORD`\n* `CURLOPT_PROXY_SSL_OPTIONS`\n* `CURLOPT_PROXY_CRLFILE`\n* `CURLOPT_PROXY_TLSAUTH_USERNAME`\n* `CURLOPT_PROXY_TLSAUTH_PASSWORD`\n\n**SSH options**\n\n* `CURLOPT_SSH_PUBLIC_KEYFILE`\n* `CURLOPT_SSH_PRIVATE_KEYFILE`",
                "markdown": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is used with the vulnerable argument `--crlfile` or `--proxy-crlfile`.\n2. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, to fully determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n**TLS options**\n\n* `CURLOPT_SSL_OPTIONS`\n* `CURLOPT_CRLFILE`\n* `CURLOPT_TLSAUTH_USERNAME`\n* `CURLOPT_TLSAUTH_PASSWORD`\n* `CURLOPT_PROXY_SSL_OPTIONS`\n* `CURLOPT_PROXY_CRLFILE`\n* `CURLOPT_PROXY_TLSAUTH_USERNAME`\n* `CURLOPT_PROXY_TLSAUTH_PASSWORD`\n\n**SSH options**\n\n* `CURLOPT_SSH_PUBLIC_KEYFILE`\n* `CURLOPT_SSH_PRIVATE_KEYFILE`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29007",
              "name": "CVE-2023-29007",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29007"
              },
              "fullDescription": {
                "text": "The scanner checks whether git is used with one or more of the vulnerable options\n\n* `--rename-section`\n* `--remove-section`\n\nAlso, it checks whether the vulnerable `git` command is used with the vulnerable option `git submodule deinit`.\n\nThis vulnerability can also be triggered by an interactive user.",
                "markdown": "The scanner checks whether git is used with one or more of the vulnerable options\n\n* `--rename-section`\n* `--remove-section`\n\nAlso, it checks whether the vulnerable `git` command is used with the vulnerable option `git submodule deinit`.\n\nThis vulnerability can also be triggered by an interactive user."
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "applic_CVE-2022-27781",
              "name": "CVE-2022-27781",
              "shortDescription": {
                "text": "Scanner for CVE-2022-27781"
              },
              "fullDescription": {
                "text": "The scanner checks if both of the following conditions are met:\n\n* The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n* The library `libnss3` is linked with the `curl`.\n\nFor fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with the argument `CURLOPT_CERTINFO`.",
                "markdown": "The scanner checks if both of the following conditions are met:\n\n* The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n* The library `libnss3` is linked with the `curl`.\n\nFor fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with the argument `CURLOPT_CERTINFO`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22576",
              "name": "CVE-2022-22576",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22576"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` uses the vulnerable configuration, by checking whether the vulnerable flag `--oauth2-bearer` is used.",
                "markdown": "The scanner checks whether `curl` uses the vulnerable configuration, by checking whether the vulnerable flag `--oauth2-bearer` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-32002",
              "name": "CVE-2024-32002",
              "shortDescription": {
                "text": "Scanner for CVE-2024-32002"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-18276",
              "name": "CVE-2019-18276",
              "shortDescription": {
                "text": "Scanner for CVE-2019-18276"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable ‘setuid()’ function is called from a SUID binary.",
                "markdown": "The scanner checks whether the vulnerable ‘setuid()’ function is called from a SUID binary."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-32004",
              "name": "CVE-2024-32004",
              "shortDescription": {
                "text": "Scanner for CVE-2024-32004"
              },
              "fullDescription": {
                "text": "The scanner checks whether a local git repository contains a `upload-pack` command in its git config file (`repo-name/.git/config`).",
                "markdown": "The scanner checks whether a local git repository contains a `upload-pack` command in its git config file (`repo-name/.git/config`)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-44487",
              "name": "CVE-2023-44487",
              "shortDescription": {
                "text": "Scanner for CVE-2023-44487"
              },
              "fullDescription": {
                "text": "The scanner checks for each vendor listed here:\n\n* Tomcat: configuration enables HTTP/2 either through the XML file or Java's `addUpgradeProtocol()` method.\n* Jetty: HTTP/2 enabled through `HTTP2CServerConnectionFactory`/`HTTP2ServerConnectionFactory` class initialization. Note: it also checks whether `jenkins` enables http/2 through its configuration.\n* Nginx: check whether one of the HTTP configurations is enabling http/2.\nNote: the following parameters should be configured properly to make the vulnerability not applicable:\n`keepalive_requests` should be kept at the default setting of 1000 requests\n`http2_max_concurrent_streams` should be kept at the default setting of 128 streams\n`limit_conn and limit_req` should be set `with a reasonable setting balancing application performance and security`. \n* Netty: check whether the `http2` codec classes are used in a java class\n* NodeJS: check whether the `http2.createSecureServer()` is used\n* NGHttp2: check whether a web server is instantiated through one of the symbols `nghttp2_session_server_new` or `listen_and_serve`.\n* Go: check whether a server is instantiated through the `net/http` or `net/http2` packages",
                "markdown": "The scanner checks for each vendor listed here:\n\n* Tomcat: configuration enables HTTP/2 either through the XML file or Java's `addUpgradeProtocol()` method.\n* Jetty: HTTP/2 enabled through `HTTP2CServerConnectionFactory`/`HTTP2ServerConnectionFactory` class initialization. Note: it also checks whether `jenkins` enables http/2 through its configuration.\n* Nginx: check whether one of the HTTP configurations is enabling http/2.\nNote: the following parameters should be configured properly to make the vulnerability not applicable:\n`keepalive_requests` should be kept at the default setting of 1000 requests\n`http2_max_concurrent_streams` should be kept at the default setting of 128 streams\n`limit_conn and limit_req` should be set `with a reasonable setting balancing application performance and security`. \n* Netty: check whether the `http2` codec classes are used in a java class\n* NodeJS: check whether the `http2.createSecureServer()` is used\n* NGHttp2: check whether a web server is instantiated through one of the symbols `nghttp2_session_server_new` or `listen_and_serve`.\n* Go: check whether a server is instantiated through the `net/http` or `net/http2` packages"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-17498",
              "name": "CVE-2019-17498",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-17498"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22876",
              "name": "CVE-2021-22876",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22876"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-17595",
              "name": "CVE-2019-17595",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-17595"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28320",
              "name": "CVE-2023-28320",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28320"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8116",
              "name": "CVE-2020-8116",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8116"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42386",
              "name": "CVE-2021-42386",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42386"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-29458",
              "name": "CVE-2022-29458",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-29458"
              },
              "fullDescription": {
                "text": "The scanner searches for execution evidence of the vulnerable tool  `tic`.",
                "markdown": "The scanner searches for execution evidence of the vulnerable tool  `tic`."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-15366",
              "name": "CVE-2020-15366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-15366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-0853",
              "name": "CVE-2024-0853",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-0853"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1348",
              "name": "CVE-2019-1348",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1348"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38039",
              "name": "CVE-2023-38039",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30115",
              "name": "CVE-2022-30115",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30115"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5747",
              "name": "CVE-2019-5747",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5747"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22925",
              "name": "CVE-2021-22925",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22925"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-25815",
              "name": "CVE-2023-25815",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-25815"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-4068",
              "name": "CVE-2024-4068",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-4068"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8169",
              "name": "CVE-2020-8169",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8169"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48437",
              "name": "CVE-2022-48437",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48437"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42366",
              "name": "CVE-2023-42366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-3855",
              "name": "CVE-2019-3855",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-3855"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42380",
              "name": "CVE-2021-42380",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42380"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-16777",
              "name": "CVE-2019-16777",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-16777"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-0654",
              "name": "CVE-2022-0654",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0654"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28486",
              "name": "CVE-2023-28486",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28486"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38546",
              "name": "CVE-2023-38546",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38546"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-39260",
              "name": "CVE-2022-39260",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-39260"
              },
              "fullDescription": {
                "text": "The scanner checks whether `git shell` has interactive mode enabled and is also configured as a login shell for a user.",
                "markdown": "The scanner checks whether `git shell` has interactive mode enabled and is also configured as a login shell for a user."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-18634",
              "name": "CVE-2019-18634",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-18634"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-3857",
              "name": "CVE-2019-3857",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-3857"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-7090",
              "name": "CVE-2023-7090",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-7090"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-23362",
              "name": "CVE-2021-23362",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-23362"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-33987",
              "name": "CVE-2022-33987",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-33987"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27776",
              "name": "CVE-2022-27776",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27776"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-29415",
              "name": "CVE-2024-29415",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-29415"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5443",
              "name": "CVE-2019-5443",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5443"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28168",
              "name": "CVE-2020-28168",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28168"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-7754",
              "name": "CVE-2020-7754",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-7754"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32208",
              "name": "CVE-2022-32208",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32208"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-28391",
              "name": "CVE-2022-28391",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-28391"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-10742",
              "name": "CVE-2019-10742",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-10742"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22924",
              "name": "CVE-2021-22924",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22924"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-18684",
              "name": "CVE-2019-18684",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-18684"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42364",
              "name": "CVE-2023-42364",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42364"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2004",
              "name": "CVE-2024-2004",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2004"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20834",
              "name": "CVE-2018-20834",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20834"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3795",
              "name": "CVE-2021-3795",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3795"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-35260",
              "name": "CVE-2022-35260",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-35260"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2379",
              "name": "CVE-2024-2379",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2379"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-3858",
              "name": "CVE-2019-3858",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-3858"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-13173",
              "name": "CVE-2019-13173",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-13173"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-29187",
              "name": "CVE-2022-29187",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-29187"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-41038",
              "name": "CVE-2021-41038",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-41038"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-39537",
              "name": "CVE-2021-39537",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-39537"
              },
              "fullDescription": {
                "text": "The scanner searches for execution evidence of the vulnerable tool `captoinfo`.",
                "markdown": "The scanner searches for execution evidence of the vulnerable tool `captoinfo`."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5435",
              "name": "CVE-2019-5435",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5435"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1349",
              "name": "CVE-2019-1349",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1349"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13619",
              "name": "CVE-2020-13619",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13619"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-23239",
              "name": "CVE-2021-23239",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-23239"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42383",
              "name": "CVE-2021-42383",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42383"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-23240",
              "name": "CVE-2021-23240",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-23240"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-46101",
              "name": "CVE-2021-46101",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-46101"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2398",
              "name": "CVE-2024-2398",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2398"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2013-0340",
              "name": "CVE-2013-0340",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2013-0340"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8286",
              "name": "CVE-2020-8286",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8286"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22898",
              "name": "CVE-2021-22898",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22898"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-21300",
              "name": "CVE-2021-21300",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-21300"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42385",
              "name": "CVE-2021-42385",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42385"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-43552",
              "name": "CVE-2022-43552",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-43552"
              },
              "fullDescription": {
                "text": "The scanner checks whether the function `curl_easy_setopt()` is called to define `curl` options. The scanner does not check which options are passed to the function. \nA manual check is required to check if the `CURLOPT_PROXY` is defined along with a `CURLOPT_URL`  starting by `smb:` or `telnet:`.",
                "markdown": "The scanner checks whether the function `curl_easy_setopt()` is called to define `curl` options. The scanner does not check which options are passed to the function. \nA manual check is required to check if the `CURLOPT_PROXY` is defined along with a `CURLOPT_URL`  starting by `smb:` or `telnet:`."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3826",
              "name": "CVE-2021-3826",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3826"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-34435",
              "name": "CVE-2021-34435",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-34435"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-25314",
              "name": "CVE-2022-25314",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-25314"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-46880",
              "name": "CVE-2021-46880",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-46880"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-28161",
              "name": "CVE-2021-28161",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-28161"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-18869",
              "name": "CVE-2017-18869",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-18869"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42384",
              "name": "CVE-2021-42384",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42384"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20843",
              "name": "CVE-2018-20843",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20843"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42381",
              "name": "CVE-2021-42381",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42381"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-31012",
              "name": "CVE-2022-31012",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-31012"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-23946",
              "name": "CVE-2023-23946",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-23946"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `git apply` command is used in the init flow.",
                "markdown": "The scanner checks whether the `git apply` command is used in the init flow."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-17594",
              "name": "CVE-2019-17594",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-17594"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36159",
              "name": "CVE-2021-36159",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36159"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-37701",
              "name": "CVE-2021-37701",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-37701"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-5260",
              "name": "CVE-2020-5260",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-5260"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1352",
              "name": "CVE-2019-1352",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1352"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-32021",
              "name": "CVE-2024-32021",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-32021"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-9511",
              "name": "CVE-2019-9511",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-9511"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42375",
              "name": "CVE-2021-42375",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42375"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42379",
              "name": "CVE-2021-42379",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42379"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28849",
              "name": "CVE-2024-28849",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28849"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-32465",
              "name": "CVE-2024-32465",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-32465"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-39253",
              "name": "CVE-2022-39253",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-39253"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-3863",
              "name": "CVE-2019-3863",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-3863"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-3859",
              "name": "CVE-2019-3859",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-3859"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22945",
              "name": "CVE-2021-22945",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22945"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-19604",
              "name": "CVE-2019-19604",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-19604"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-41903",
              "name": "CVE-2022-41903",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-41903"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22890",
              "name": "CVE-2021-22890",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22890"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-52426",
              "name": "CVE-2023-52426",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-52426"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-0542",
              "name": "CVE-2019-0542",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-0542"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-23413",
              "name": "CVE-2021-23413",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-23413"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-16980",
              "name": "CVE-2018-16980",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-16980"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22947",
              "name": "CVE-2021-22947",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22947"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1351",
              "name": "CVE-2019-1351",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1351"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-32020",
              "name": "CVE-2024-32020",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-32020"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-9513",
              "name": "CVE-2019-9513",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-9513"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-40330",
              "name": "CVE-2021-40330",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-40330"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-14697",
              "name": "CVE-2019-14697",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-14697"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-28162",
              "name": "CVE-2021-28162",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-28162"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-45960",
              "name": "CVE-2021-45960",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-45960"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-16776",
              "name": "CVE-2019-16776",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-16776"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-33623",
              "name": "CVE-2021-33623",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-33623"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8284",
              "name": "CVE-2020-8284",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8284"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-3861",
              "name": "CVE-2019-3861",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-3861"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-1971",
              "name": "CVE-2020-1971",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-1971"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42376",
              "name": "CVE-2021-42376",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42376"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22926",
              "name": "CVE-2021-22926",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22926"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-16775",
              "name": "CVE-2019-16775",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-16775"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-32640",
              "name": "CVE-2021-32640",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-32640"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42915",
              "name": "CVE-2023-42915",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42915"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-27224",
              "name": "CVE-2020-27224",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-27224"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-14287",
              "name": "CVE-2019-14287",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-14287"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5448",
              "name": "CVE-2019-5448",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5448"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-4039",
              "name": "CVE-2023-4039",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-4039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-22490",
              "name": "CVE-2023-22490",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-22490"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-37713",
              "name": "CVE-2021-37713",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-37713"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27537",
              "name": "CVE-2023-27537",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27537"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-0778",
              "name": "CVE-2022-0778",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0778"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-0144",
              "name": "CVE-2022-0144",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0144"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-15095",
              "name": "CVE-2020-15095",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-15095"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-17636",
              "name": "CVE-2019-17636",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-17636"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27775",
              "name": "CVE-2022-27775",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27775"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-41581",
              "name": "CVE-2021-41581",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-41581"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8231",
              "name": "CVE-2020-8231",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8231"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46218",
              "name": "CVE-2023-46218",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46218"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8177",
              "name": "CVE-2020-8177",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8177"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-10773",
              "name": "CVE-2019-10773",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-10773"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45857",
              "name": "CVE-2023-45857",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45857"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22901",
              "name": "CVE-2021-22901",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22901"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-23392",
              "name": "CVE-2021-23392",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-23392"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1387",
              "name": "CVE-2019-1387",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1387"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-26159",
              "name": "CVE-2023-26159",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-26159"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-0536",
              "name": "CVE-2022-0536",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0536"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-37890",
              "name": "CVE-2024-37890",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-37890"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-28831",
              "name": "CVE-2021-28831",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-28831"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8131",
              "name": "CVE-2020-8131",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8131"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-13115",
              "name": "CVE-2019-13115",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-13115"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8244",
              "name": "CVE-2020-8244",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8244"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42363",
              "name": "CVE-2023-42363",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42363"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28928",
              "name": "CVE-2020-28928",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28928"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-27290",
              "name": "CVE-2021-27290",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-27290"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2466",
              "name": "CVE-2024-2466",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2466"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-43995",
              "name": "CVE-2022-43995",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-43995"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22897",
              "name": "CVE-2021-22897",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22897"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-3862",
              "name": "CVE-2019-3862",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-3862"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27535",
              "name": "CVE-2023-27535",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27535"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-19486",
              "name": "CVE-2018-19486",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-19486"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-15903",
              "name": "CVE-2019-15903",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-15903"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48174",
              "name": "CVE-2022-48174",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48174"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-23915",
              "name": "CVE-2023-23915",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-23915"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30065",
              "name": "CVE-2022-30065",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30065"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5481",
              "name": "CVE-2019-5481",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5481"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-30139",
              "name": "CVE-2021-30139",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-30139"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-7719",
              "name": "CVE-2020-7719",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-7719"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-42915",
              "name": "CVE-2022-42915",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-42915"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-3856",
              "name": "CVE-2019-3856",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-3856"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1354",
              "name": "CVE-2019-1354",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1354"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28469",
              "name": "CVE-2020-28469",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28469"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-35784",
              "name": "CVE-2023-35784",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-35784"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-16137",
              "name": "CVE-2017-16137",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-16137"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27780",
              "name": "CVE-2022-27780",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27780"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28757",
              "name": "CVE-2024-28757",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28757"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-29060",
              "name": "CVE-2021-29060",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-29060"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-0155",
              "name": "CVE-2022-0155",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0155"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-11008",
              "name": "CVE-2020-11008",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-11008"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27774",
              "name": "CVE-2022-27774",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27774"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42374",
              "name": "CVE-2021-42374",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42374"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-21670",
              "name": "CVE-2022-21670",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-21670"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20679",
              "name": "CVE-2018-20679",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20679"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-20454",
              "name": "CVE-2019-20454",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-20454"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28155",
              "name": "CVE-2023-28155",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28155"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-23521",
              "name": "CVE-2022-23521",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-23521"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1353",
              "name": "CVE-2019-1353",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1353"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-23916",
              "name": "CVE-2023-23916",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-23916"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5436",
              "name": "CVE-2019-5436",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5436"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32205",
              "name": "CVE-2022-32205",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32205"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-32803",
              "name": "CVE-2021-32803",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-32803"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-15608",
              "name": "CVE-2019-15608",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-15608"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32207",
              "name": "CVE-2022-32207",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32207"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-7076",
              "name": "CVE-2016-7076",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-7076"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-0355",
              "name": "CVE-2022-0355",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0355"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-24765",
              "name": "CVE-2022-24765",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-24765"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-29041",
              "name": "CVE-2024-29041",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-29041"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8285",
              "name": "CVE-2020-8285",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8285"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32206",
              "name": "CVE-2022-32206",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32206"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-7608",
              "name": "CVE-2020-7608",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-7608"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42378",
              "name": "CVE-2021-42378",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42378"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-24975",
              "name": "CVE-2022-24975",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-24975"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27779",
              "name": "CVE-2022-27779",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27779"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-26237",
              "name": "CVE-2020-26237",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-26237"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1350",
              "name": "CVE-2019-1350",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1350"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-11080",
              "name": "CVE-2020-11080",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-11080"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-35252",
              "name": "CVE-2022-35252",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-35252"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-46143",
              "name": "CVE-2021-46143",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-46143"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42365",
              "name": "CVE-2023-42365",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42365"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5482",
              "name": "CVE-2019-5482",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5482"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42382",
              "name": "CVE-2021-42382",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42382"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28487",
              "name": "CVE-2023-28487",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28487"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-43307",
              "name": "CVE-2021-43307",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-43307"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28319",
              "name": "CVE-2023-28319",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28319"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27538",
              "name": "CVE-2023-27538",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27538"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-37322",
              "name": "CVE-2021-37322",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-37322"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46219",
              "name": "CVE-2023-46219",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46219"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718694806-837381919/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718694622-582659985/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2018-1000517",
          "message": {
            "text": "The vulnerable `BusyBox` containing `wget` tool is present"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/busybox"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-12886",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2018-25032",
          "message": {
            "text": "The vulnerable function deflateInit2 is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-4435",
          "kind": "pass",
          "message": {
            "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
          }
        },
        {
          "ruleId": "applic_CVE-2019-12900",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are referenced:\n\n* `BZ2_bzDecompress`\n* `BZ2_bzRead`\n* `BZ2_bzBuffToBuffDecompress`"
          }
        },
        {
          "ruleId": "applic_CVE-2019-15847",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2019-3860",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the following functions is called:\n\n- libssh2_sftp_open_r\n- libssh2_sftp_open_ex_r\n- libssh2_sftp_open\n- libssh2_sftp_opendir\n- libssh2_sftp_open_ex\n- libssh2_sftp_fstat\n- libssh2_sftp_fsetstat\n- libssh2_sftp_fstat_ex\n- libssh2_sftp_read\n- libssh2_sftp_readdir\n- libssh2_sftp_readdir_ex\n- libssh2_sftp_symlink\n- libssh2_sftp_readlink\n- libssh2_sftp_realpath\n- libssh2_sftp_symlink_ex\n- libssh2_sftp_rmdir\n- libssh2_sftp_rmdir_ex\n- libssh2_sftp_mkdir\n- libssh2_sftp_mkdir_ex\n- libssh2_sftp_rmdir\n- libssh2_sftp_rmdir_ex\n- libssh2_sftp_statvfs\n- libssh2_sftp_rename\n- libssh2_sftp_rename_ex\n- libssh2_sftp_unlink\n- libssh2_sftp_unlink_ex\n- libssh2_sftp_fsync\n- libssh2_sftp_close\n- libssh2_sftp_closedir\n- libssh2_sftp_close_handle\n- libssh2_sftp_write"
          }
        },
        {
          "ruleId": "applic_CVE-2020-12265",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable library `decompress` is referenced."
          }
        },
        {
          "ruleId": "applic_CVE-2021-44906",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present."
          }
        },
        {
          "ruleId": "applic_CVE-2020-7598",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present."
          }
        },
        {
          "ruleId": "applic_CVE-2020-7788",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `ini.parse` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2021-22923",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-22922",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-22946",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable functionality, by checking whether any of the following vulnerable flags are used:\n\n- `--ssl-reqd`\n- `--ftp-ssl-reqd`"
          }
        },
        {
          "ruleId": "applic_CVE-2021-3156",
          "message": {
            "text": "The vulnerable configuration file sudoers was found"
          }
        },
        {
          "ruleId": "applic_CVE-2021-32804",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`"
          }
        },
        {
          "ruleId": "applic_CVE-2021-37712",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x\n* `tar.extract`"
          }
        },
        {
          "ruleId": "applic_CVE-2024-28863",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`"
          }
        },
        {
          "ruleId": "applic_CVE-2021-3749",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `trim` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2021-3807",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `ansi-regex` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2021-3918",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `json-schema.validate` with external input to its 1st (`instance`) argument.\n* `json-schema.checkPropertyChange` with external input to its 2nd (`schema`) argument.\n\nThe scanner also checks whether the `Object.freeze()` remediation is not present."
          }
        },
        {
          "ruleId": "applic_CVE-2021-43138",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `mapValues` is called with external input to its 1st (`obj`) argument, and the `Object.freeze()` remediation is not present."
          }
        },
        {
          "ruleId": "applic_CVE-2022-1587",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-1586",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-24785",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `locale` is called with external input to its 1st (`config`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2022-24999",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `qs.parse` is called with the non-default option 'allowPrototypes' enabled, and the `Object.freeze()` remediation is not present.\nIt also checks whether `express.js` has a GET path that processes its query strings."
          }
        },
        {
          "ruleId": "applic_CVE-2022-25881",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the object `CachePolicy` has been initiated using user-controlled input, or whether the vulnerable function `satisfiesWithoutRevalidation` has been called with user-controlled input."
          }
        },
        {
          "ruleId": "applic_CVE-2022-29078",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for two vulnerable flows:\n\n1. Whether the `express.set` function is called with the arguments: `view engine` and `ejs`, or external input and if it's followed by a call to the vulnerable function `render` with an unknown second argument.\n\n2. Whether the `renderFile` function is called with an unknown second argument.\n\nThe scanner also checks whether the `Object.freeze()` remediation is not present."
          }
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `moment` is called with external input to its 1st (`config`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2022-3517",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called with external input to the `pattern` argument and brace expansion is not disabled (by the option `{nobrace: true}`):\n\n- `minimatch()`\n- `minimatch.braceExpand()`\n- `minimatch.filter()`\n- `minimatch.match()`\n- `minimatch.makeRe()`\n- `minimatch.Minimatch.prototype.braceExpand()`\n- `minimatch.Minimatch() `\n\nNote that if a call to the `minimatch.filter()` function was found by the scanner, the vulnerability is applicable only if the function returned by `minimatch.filter()` is invoked. Currently, the scanner does not check that."
          }
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "message": {
            "text": "The vulnerable library zlib is included"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "message": {
            "text": "The vulnerable function inflateGetHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "message": {
            "text": "The vulnerable library zlib is included"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "message": {
            "text": "The vulnerable library zlib is included"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "message": {
            "text": "The vulnerable library zlib is included"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "message": {
            "text": "The vulnerable library zlib is included"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "message": {
            "text": "The vulnerable library zlib is included"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "message": {
            "text": "The vulnerable library zlib is included"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38900",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `decode-uri-component` is called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2022-40674",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22822",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22823",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22824",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22825",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-23852",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-23990",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-25235",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-25236",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-25315",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22826",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22827",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-25313",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-52425",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks."
          }
        },
        {
          "ruleId": "applic_CVE-2022-43680",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-42916",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2022-43551",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2023-23914",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2022-48285",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if the vulnerable function `jszip.loadAsync` is called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2023-22809",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `/etc/sudoers` file has the vulnerable directive `sudoedit`.\n\nFor determining the applicability of this CVE, it is mandatory to verify that no mitigation is present. The scanner currently does not detect this case.\n\nAn example of a global mitigation:\n```\nDefaults!sudoedit    env_delete+=\"SUDO_EDITOR VISUAL EDITOR\"\n```\nAn example of a mitigation on a specific alias:\n```\nCmnd_Alias              EDIT_MOTD = sudoedit /etc/motd\nDefaults!EDIT_MOTD      env_delete+=\"SUDO_EDITOR VISUAL EDITOR\"\nuser                    ALL = EDIT_MOTD\n```"
          }
        },
        {
          "ruleId": "applic_CVE-2023-27320",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `/etc/sudoers` file has the vulnerable setting `CHROOT`."
          }
        },
        {
          "ruleId": "applic_CVE-2023-27533",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-27536",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option."
          }
        },
        {
          "ruleId": "applic_CVE-2022-32221",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl_easy_setopt()` is called.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that both CURLOPT_READFUNCTION and CURLOPT_POSTFIELDS options are set through `curl_easy_setopt()` on the same handler."
          }
        },
        {
          "ruleId": "applic_CVE-2023-28322",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29491",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether a **setuid** binary calls any of the following vulnerable functions -\n- `initscr` \n- `setupterm`\n- `restartterm`\n- `_nc_read_file_entry`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-26136",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for the initialization of `CookieJar()` with the vulnerable option ` rejectPublicSuffixes` set to false."
          }
        },
        {
          "ruleId": "applic_CVE-2022-25883",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`"
          }
        },
        {
          "ruleId": "applic_CVE-2019-10746",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `mixinDeep` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-10747",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `set` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2021-23440",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `set` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-7774",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `setLocale` is called with external input to its 1st argument"
          }
        },
        {
          "ruleId": "applic_CVE-2021-23343",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following functions are called with external input:\n\n* `pathParse.posix`\n\n* `pathParse.win32`\n\n* `pathParse`"
          }
        },
        {
          "ruleId": "applic_CVE-2019-20149",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable constructor `kind-of` is called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2017-20165",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable `debug()` function is used with a non-constant value.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the `debug()` function should print an object."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41409",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable `pcre2test` binary exists on the scanned artifact."
          }
        },
        {
          "ruleId": "applic_CVE-2023-38545",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-35945",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the Envoy YAML or JSON configuration contains a definition for an upstream cluster.\nFor example -\n```yaml\nstatic_resources:\n\tclusters:\n\t- name: ...\t\n```"
          }
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-http-fetch"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-http-push"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-ftp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-ftps"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-http"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-https"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-42282",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `isPublic()` is called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2023-25652",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable `git apply` command is used with the vulnerable option:\n\n* `--reject` \n\nThis vulnerability can also be triggered by an interactive user."
          }
        },
        {
          "ruleId": "applic_CVE-2024-33883",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `ejs.compile()` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-http-fetch"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-http-push"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-ftp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-ftps"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-http"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-https"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27781",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if both of the following conditions are met:\n\n* The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n* The library `libnss3` is linked with the `curl`.\n\nFor fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with the argument `CURLOPT_CERTINFO`."
          }
        },
        {
          "ruleId": "applic_CVE-2022-22576",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` uses the vulnerable configuration, by checking whether the vulnerable flag `--oauth2-bearer` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2024-32002",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2019-18276",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable ‘setuid()’ function is called from a SUID binary."
          }
        },
        {
          "ruleId": "applic_CVE-2024-32004",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether a local git repository contains a `upload-pack` command in its git config file (`repo-name/.git/config`)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-44487",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for each vendor listed here:\n\n* Tomcat: configuration enables HTTP/2 either through the XML file or Java's `addUpgradeProtocol()` method.\n* Jetty: HTTP/2 enabled through `HTTP2CServerConnectionFactory`/`HTTP2ServerConnectionFactory` class initialization. Note: it also checks whether `jenkins` enables http/2 through its configuration.\n* Nginx: check whether one of the HTTP configurations is enabling http/2.\nNote: the following parameters should be configured properly to make the vulnerability not applicable:\n`keepalive_requests` should be kept at the default setting of 1000 requests\n`http2_max_concurrent_streams` should be kept at the default setting of 128 streams\n`limit_conn and limit_req` should be set `with a reasonable setting balancing application performance and security`. \n* Netty: check whether the `http2` codec classes are used in a java class\n* NodeJS: check whether the `http2.createSecureServer()` is used\n* NGHttp2: check whether a web server is instantiated through one of the symbols `nghttp2_session_server_new` or `listen_and_serve`.\n* Go: check whether a server is instantiated through the `net/http` or `net/http2` packages"
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718694806-837381919/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718694622-582659985/image.tar"
          }
        }
      ],
      "results": []
    }
  ]
}
