{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-21698_github.com/prometheus/client_golang_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-21698] github.com/prometheus/client_golang 1.5.1"
              },
              "help": {
                "text": "client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.11.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9514_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2019-9514] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "Some HTTP/2 implementations are vulnerable to a reset flood, potentially leading to a denial of service. The attacker opens a number of streams and sends an invalid request over each stream that should solicit a stream of RST_STREAM frames from the peer. Depending on how the peer queues the RST_STREAM frames, this can consume excess memory, CPU, or both.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.0.0-20190813141303-74dc4d7220e7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2021-33194_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2021-33194] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "golang.org/x/net before v0.0.0-20210520170846-37e1c6afe023 allows attackers to cause a denial of service (infinite loop) via crafted ParseFragment input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.0.0-20210520170846-37e1c6afe023]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-44487_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2023-44487] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.17.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-27534_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-27534] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A path traversal vulnerability exists in curl \u003c8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [7.74.0-1.3+deb11u8]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-27664_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2022-27664] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.0.0-20220906165146-f3363e06e74c]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9512_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2019-9512] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "Some HTTP/2 implementations are vulnerable to ping floods, potentially leading to a denial of service. The attacker sends continual pings to an HTTP/2 peer, causing the peer to build an internal queue of responses. Depending on how efficiently this data is queued, this can consume excess CPU, memory, or both.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.0.0-20190813141303-74dc4d7220e7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-39325_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2023-39325] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.17.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27534_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-27534] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A path traversal vulnerability exists in curl \u003c8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-4911_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2023-4911] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "A buffer overflow was discovered in the GNU C Library's dynamic loader ld.so while processing the GLIBC_TUNABLES environment variable. This issue could allow a local attacker to use maliciously crafted GLIBC_TUNABLES environment variables when launching binaries with SUID permission to execute code with elevated privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-4911_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2023-4911] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "A buffer overflow was discovered in the GNU C Library's dynamic loader ld.so while processing the GLIBC_TUNABLES environment variable. This issue could allow a local attacker to use maliciously crafted GLIBC_TUNABLES environment variables when launching binaries with SUID permission to execute code with elevated privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-50387_debian:bullseye:libsystemd0_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-50387] debian:bullseye:libsystemd0 247.3-7+deb11u1"
              },
              "help": {
                "text": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Undetermined       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-50387_debian:bullseye:libudev1_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-50387] debian:bullseye:libudev1 247.3-7+deb11u1"
              },
              "help": {
                "text": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Undetermined       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-31484_debian:bullseye:perl-base_5.32.1-4+deb11u2",
              "shortDescription": {
                "text": "[CVE-2023-31484] debian:bullseye:perl-base 5.32.1-4+deb11u2"
              },
              "help": {
                "text": "CPAN.pm before 2.35 does not verify TLS certificates when downloading distributions over HTTPS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-29458_debian:bullseye:libtinfo6_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2022-29458] debian:bullseye:libtinfo6 6.2+20201114-2"
              },
              "help": {
                "text": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-1304_debian:bullseye:libcom-err2_1.46.2-2",
              "shortDescription": {
                "text": "[CVE-2022-1304] debian:bullseye:libcom-err2 1.46.2-2"
              },
              "help": {
                "text": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-29458_debian:bullseye:ncurses-bin_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2022-29458] debian:bullseye:ncurses-bin 6.2+20201114-2"
              },
              "help": {
                "text": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-1304_debian:bullseye:libss2_1.46.2-2",
              "shortDescription": {
                "text": "[CVE-2022-1304] debian:bullseye:libss2 1.46.2-2"
              },
              "help": {
                "text": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-1304_debian:bullseye:libext2fs2_1.46.2-2",
              "shortDescription": {
                "text": "[CVE-2022-1304] debian:bullseye:libext2fs2 1.46.2-2"
              },
              "help": {
                "text": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-16156_debian:bullseye:perl-base_5.32.1-4+deb11u2",
              "shortDescription": {
                "text": "[CVE-2020-16156] debian:bullseye:perl-base 5.32.1-4+deb11u2"
              },
              "help": {
                "text": "CPAN 2.28 allows Signature Verification Bypass.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-1304_debian:bullseye:logsave_1.46.2-2",
              "shortDescription": {
                "text": "[CVE-2022-1304] debian:bullseye:logsave 1.46.2-2"
              },
              "help": {
                "text": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-3715_debian:bullseye:bash_5.1-2+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-3715] debian:bullseye:bash 5.1-2+deb11u1"
              },
              "help": {
                "text": "A flaw was found in the bash package, where a heap-buffer overflow can occur in valid parameter_transform. This issue may lead to memory problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29458_debian:bullseye:ncurses-base_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2022-29458] debian:bullseye:ncurses-base 6.2+20201114-2"
              },
              "help": {
                "text": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-1304_debian:bullseye:e2fsprogs_1.46.2-2",
              "shortDescription": {
                "text": "[CVE-2022-1304] debian:bullseye:e2fsprogs 1.46.2-2"
              },
              "help": {
                "text": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-31525_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2021-31525] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "net/http in Go before 1.15.12 and 1.16.x before 1.16.4 allows remote attackers to cause a denial of service (panic) via a large header to ReadRequest or ReadResponse. Server, Transport, and Client can each be affected in some configurations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.0.0-20210428140749-89ef3d95e781]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-28321_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-28321] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "An improper certificate validation vulnerability exists in curl \u003cv8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [7.74.0-1.3+deb11u9]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-41717_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2022-41717] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.4.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45288_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2023-45288] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.23.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-28321_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-28321] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "An improper certificate validation vulnerability exists in curl \u003cv8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-3817_debian:bullseye:openssl_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-3817] debian:bullseye:openssl 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [1.1.1v-0~deb11u1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-27535_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-27535] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl \u003c8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [7.74.0-1.3+deb11u8]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-3446_debian:bullseye:openssl_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-3446] debian:bullseye:openssl 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [1.1.1v-0~deb11u1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-46218_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-46218] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [7.74.0-1.3+deb11u11]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-27538_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-27538] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [7.74.0-1.3+deb11u8]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-0727_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2024-0727] debian:bullseye:libssl1.1 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-4806_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2023-4806] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "A flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-3817_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-3817] debian:bullseye:libssl1.1 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-36054_debian:bullseye:libk5crypto3_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2023-36054] debian:bullseye:libk5crypto3 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-46219_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-46219] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-27535_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-27535] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl \u003c8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-3821_debian:bullseye:libsystemd0_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-3821] debian:bullseye:libsystemd0 247.3-7+deb11u1"
              },
              "help": {
                "text": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-36054_debian:bullseye:libkrb5-3_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2023-36054] debian:bullseye:libkrb5-3 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-4806_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2023-4806] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "A flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-36054_debian:bullseye:libgssapi-krb5-2_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2023-36054] debian:bullseye:libgssapi-krb5-2 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-23915_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-23915] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-50495_debian:bullseye:ncurses-bin_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2023-50495] debian:bullseye:ncurses-bin 6.2+20201114-2"
              },
              "help": {
                "text": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-36054_debian:bullseye:libkrb5support0_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2023-36054] debian:bullseye:libkrb5support0 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-46219_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-46219] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-7008_debian:bullseye:libsystemd0_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-7008] debian:bullseye:libsystemd0 247.3-7+deb11u1"
              },
              "help": {
                "text": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-3446_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-3446] debian:bullseye:libssl1.1 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-4039_debian:bullseye:libgcc-s1_10.2.1-6",
              "shortDescription": {
                "text": "[CVE-2023-4039] debian:bullseye:libgcc-s1 10.2.1-6"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2022-4415_debian:bullseye:libsystemd0_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-4415] debian:bullseye:libsystemd0 247.3-7+deb11u1"
              },
              "help": {
                "text": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-7008_debian:bullseye:libudev1_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-7008] debian:bullseye:libudev1 247.3-7+deb11u1"
              },
              "help": {
                "text": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2024-22365_debian:bullseye:libpam-runtime_1.4.0-9+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-22365] debian:bullseye:libpam-runtime 1.4.0-9+deb11u1"
              },
              "help": {
                "text": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-5678_debian:bullseye:openssl_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-5678] debian:bullseye:openssl 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-4641_debian:bullseye:passwd:1_4.8.1-1",
              "shortDescription": {
                "text": "[CVE-2023-4641] debian:bullseye:passwd:1 4.8.1-1"
              },
              "help": {
                "text": "A flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-4039_debian:bullseye:libstdc++6_10.2.1-6",
              "shortDescription": {
                "text": "[CVE-2023-4039] debian:bullseye:libstdc++6 10.2.1-6"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-50495_debian:bullseye:ncurses-base_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2023-50495] debian:bullseye:ncurses-base 6.2+20201114-2"
              },
              "help": {
                "text": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-5981_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
              "shortDescription": {
                "text": "[CVE-2023-5981] debian:bullseye:libgnutls30 3.7.1-5+deb11u3"
              },
              "help": {
                "text": "A vulnerability was found that the response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from response times of ciphertexts with correct PKCS#1 v1.5 padding.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2024-22365_debian:bullseye:libpam-modules_1.4.0-9+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-22365] debian:bullseye:libpam-modules 1.4.0-9+deb11u1"
              },
              "help": {
                "text": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-22365_debian:bullseye:libpam0g_1.4.0-9+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-22365] debian:bullseye:libpam0g 1.4.0-9+deb11u1"
              },
              "help": {
                "text": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-22365_debian:bullseye:libpam-modules-bin_1.4.0-9+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-22365] debian:bullseye:libpam-modules-bin 1.4.0-9+deb11u1"
              },
              "help": {
                "text": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-3821_debian:bullseye:libudev1_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-3821] debian:bullseye:libudev1 247.3-7+deb11u1"
              },
              "help": {
                "text": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-4641_debian:bullseye:login:1_4.8.1-1",
              "shortDescription": {
                "text": "[CVE-2023-4641] debian:bullseye:login:1 4.8.1-1"
              },
              "help": {
                "text": "A flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-4039_debian:bullseye:gcc-10-base_10.2.1-6",
              "shortDescription": {
                "text": "[CVE-2023-4039] debian:bullseye:gcc-10-base 10.2.1-6"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2024-0727_debian:bullseye:openssl_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2024-0727] debian:bullseye:openssl 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-46218_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-46218] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-27538_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-27538] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-50495_debian:bullseye:libtinfo6_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2023-50495] debian:bullseye:libtinfo6 6.2+20201114-2"
              },
              "help": {
                "text": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-4039_debian:bullseye:gcc-9-base_9.3.0-22",
              "shortDescription": {
                "text": "[CVE-2023-4039] debian:bullseye:gcc-9-base 9.3.0-22"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2022-4415_debian:bullseye:libudev1_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-4415] debian:bullseye:libudev1 247.3-7+deb11u1"
              },
              "help": {
                "text": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-5678_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-5678] debian:bullseye:libssl1.1 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-23915_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-23915] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-44487_debian:bullseye:libnghttp2-14_1.43.0-1",
              "shortDescription": {
                "text": "[CVE-2023-44487] debian:bullseye:libnghttp2-14 1.43.0-1"
              },
              "help": {
                "text": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-11164_debian:bullseye:libpcre3:2_8.39-13",
              "shortDescription": {
                "text": "[CVE-2017-11164] debian:bullseye:libpcre3:2 8.39-13"
              },
              "help": {
                "text": "In PCRE 8.41, the OP_KETRMAX feature in the match function in pcre_exec.c allows stack exhaustion (uncontrolled recursion) when processing a crafted regular expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2013-4235_debian:bullseye:passwd:1_4.8.1-1",
              "shortDescription": {
                "text": "[CVE-2013-4235] debian:bullseye:passwd:1 4.8.1-1"
              },
              "help": {
                "text": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2019-1010024_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2019-1010024] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2010-4756_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2010-4756] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2018-6829_debian:bullseye:libgcrypt20_1.8.7-6",
              "shortDescription": {
                "text": "[CVE-2018-6829] debian:bullseye:libgcrypt20 1.8.7-6"
              },
              "help": {
                "text": "cipher/elgamal.c in Libgcrypt through 1.8.2, when used to encrypt messages directly, improperly encodes plaintexts, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for Libgcrypt's ElGamal implementation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-38546_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-38546] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "This flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2023-28320_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-28320] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A denial of service vulnerability exists in curl \u003cv8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2010-4756_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2010-4756] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-31438_debian:bullseye:libudev1_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-31438] debian:bullseye:libudev1 247.3-7+deb11u1"
              },
              "help": {
                "text": "An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2007-5686_debian:bullseye:passwd:1_4.8.1-1",
              "shortDescription": {
                "text": "[CVE-2007-5686] debian:bullseye:passwd:1 4.8.1-1"
              },
              "help": {
                "text": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2019-1010023_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2019-1010023] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-48303_debian:bullseye:tar_1.34+dfsg-1",
              "shortDescription": {
                "text": "[CVE-2022-48303] debian:bullseye:tar 1.34+dfsg-1"
              },
              "help": {
                "text": "GNU Tar through 1.34 has a one-byte out-of-bounds read that results in use of uninitialized memory for a conditional jump. Exploitation to change the flow of control has not been demonstrated. The issue occurs in from_header in list.c via a V7 archive in which mtime has approximately 11 whitespace characters.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | [1.34+dfsg-1+deb11u1]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2018-5709_debian:bullseye:libkrb5-3_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2018-5709] debian:bullseye:libkrb5-3 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry-\u003en_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-38546_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-38546] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "This flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [7.74.0-1.3+deb11u10]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2021-4217_debian:bullseye:unzip_6.0-26+deb11u1",
              "shortDescription": {
                "text": "[CVE-2021-4217] debian:bullseye:unzip 6.0-26+deb11u1"
              },
              "help": {
                "text": "A flaw was found in unzip. The vulnerability occurs due to improper handling of Unicode strings, which can lead to a null pointer dereference. This flaw allows an attacker to input a specially crafted zip file, leading to a crash or code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2021-36084_debian:bullseye:libsepol1_3.1-1",
              "shortDescription": {
                "text": "[CVE-2021-36084] debian:bullseye:libsepol1 3.1-1"
              },
              "help": {
                "text": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __cil_verify_classpermission and __cil_pre_verify_helper).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2019-1010025_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2019-1010025] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-31486_debian:bullseye:perl-base_5.32.1-4+deb11u2",
              "shortDescription": {
                "text": "[CVE-2023-31486] debian:bullseye:perl-base 5.32.1-4+deb11u2"
              },
              "help": {
                "text": "HTTP::Tiny before 0.083, a Perl core module since 5.13.9 and available standalone on CPAN, has an insecure default TLS configuration where users must opt in to verify certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-29383_debian:bullseye:passwd:1_4.8.1-1",
              "shortDescription": {
                "text": "[CVE-2023-29383] debian:bullseye:passwd:1 4.8.1-1"
              },
              "help": {
                "text": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-31438_debian:bullseye:libsystemd0_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-31438] debian:bullseye:libsystemd0 247.3-7+deb11u1"
              },
              "help": {
                "text": "An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-9192_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2019-9192] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-1010025_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2019-1010025] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-15719_debian:bullseye:libldap-2.4-2_2.4.57+dfsg-3+deb11u1",
              "shortDescription": {
                "text": "[CVE-2020-15719] debian:bullseye:libldap-2.4-2 2.4.57+dfsg-3+deb11u1"
              },
              "help": {
                "text": "libldap in certain third-party OpenLDAP packages has a certificate-validation flaw when the third-party package is asserting RFC6125 support. It considers CN even when there is a non-matching subjectAltName (SAN). This is fixed in, for example, openldap-2.4.46-10.el8 in Red Hat Enterprise Linux.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.2      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.2"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2019-1010024_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2019-1010024] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-19882_debian:bullseye:passwd:1_4.8.1-1",
              "shortDescription": {
                "text": "[CVE-2019-19882] debian:bullseye:passwd:1 4.8.1-1"
              },
              "help": {
                "text": "shadow 4.8, in certain circumstances affecting at least Gentoo, Arch Linux, and Void Linux, allows local users to obtain root access because setuid programs are misconfigured. Specifically, this affects shadow 4.8 when compiled using --with-libpam but without explicitly passing --disable-account-tools-setuid, and without a PAM configuration suitable for use with setuid account management tools. This combination leads to account management tools (groupadd, groupdel, groupmod, useradd, userdel, usermod) that can easily be used by unprivileged local users to escalate privileges to root in multiple ways. This issue became much more relevant in approximately December 2019 when an unrelated bug was fixed (i.e., the chmod calls to suidusbins were fixed in the upstream Makefile which is now included in the release version 4.8).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-5709_debian:bullseye:libk5crypto3_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2018-5709] debian:bullseye:libk5crypto3 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry-\u003en_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-5709_debian:bullseye:libkrb5support0_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2018-5709] debian:bullseye:libkrb5support0 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry-\u003en_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9192_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2019-9192] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-13529_debian:bullseye:libudev1_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2020-13529] debian:bullseye:libudev1 247.3-7+deb11u1"
              },
              "help": {
                "text": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-31439_debian:bullseye:libsystemd0_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-31439] debian:bullseye:libsystemd0 247.3-7+deb11u1"
              },
              "help": {
                "text": "An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2013-4235_debian:bullseye:login:1_4.8.1-1",
              "shortDescription": {
                "text": "[CVE-2013-4235] debian:bullseye:login:1 4.8.1-1"
              },
              "help": {
                "text": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2015-3276_debian:bullseye:libldap-2.4-2_2.4.57+dfsg-3+deb11u1",
              "shortDescription": {
                "text": "[CVE-2015-3276] debian:bullseye:libldap-2.4-2 2.4.57+dfsg-3+deb11u1"
              },
              "help": {
                "text": "The nss_parse_ciphers function in libraries/libldap/tls_m.c in OpenLDAP does not properly parse OpenSSL-style multi-keyword mode cipher strings, which might cause a weaker than intended cipher to be used and allow remote attackers to have unspecified impact via unknown vectors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-15719_debian:bullseye:libldap-common_2.4.57+dfsg-3+deb11u1",
              "shortDescription": {
                "text": "[CVE-2020-15719] debian:bullseye:libldap-common 2.4.57+dfsg-3+deb11u1"
              },
              "help": {
                "text": "libldap in certain third-party OpenLDAP packages has a certificate-validation flaw when the third-party package is asserting RFC6125 support. It considers CN even when there is a non-matching subjectAltName (SAN). This is fixed in, for example, openldap-2.4.46-10.el8 in Red Hat Enterprise Linux.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.2      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.2"
              }
            },
            {
              "id": "CVE-2019-1010022_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2019-1010022] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-20796_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2018-20796] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2013-4392_debian:bullseye:libudev1_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2013-4392] debian:bullseye:libudev1 247.3-7+deb11u1"
              },
              "help": {
                "text": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2021-36087_debian:bullseye:libsepol1_3.1-1",
              "shortDescription": {
                "text": "[CVE-2021-36087] debian:bullseye:libsepol1 3.1-1"
              },
              "help": {
                "text": "The CIL compiler in SELinux 3.2 has a heap-based buffer over-read in ebitmap_match_any (called indirectly from cil_check_neverallow). This occurs because there is sometimes a lack of checks for invalid statements in an optional block.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2022-3219_debian:bullseye:gpgv_2.2.27-2+deb11u2",
              "shortDescription": {
                "text": "[CVE-2022-3219] debian:bullseye:gpgv 2.2.27-2+deb11u2"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2017-14159_debian:bullseye:libldap-common_2.4.57+dfsg-3+deb11u1",
              "shortDescription": {
                "text": "[CVE-2017-14159] debian:bullseye:libldap-common 2.4.57+dfsg-3+deb11u1"
              },
              "help": {
                "text": "slapd in OpenLDAP 2.4.45 and earlier creates a PID file after dropping privileges to a non-root account, which might allow local users to kill arbitrary processes by leveraging access to this non-root account for PID file modification before a root script executes a \"kill `cat /pathname`\" command, as demonstrated by openldap-initscript.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2021-36086_debian:bullseye:libsepol1_3.1-1",
              "shortDescription": {
                "text": "[CVE-2021-36086] debian:bullseye:libsepol1 3.1-1"
              },
              "help": {
                "text": "The CIL compiler in SELinux 3.2 has a use-after-free in cil_reset_classpermission (called from cil_reset_classperms_set and cil_reset_classperms_list).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2024-2379_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2024-2379] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2023-29383_debian:bullseye:login:1_4.8.1-1",
              "shortDescription": {
                "text": "[CVE-2023-29383] debian:bullseye:login:1 4.8.1-1"
              },
              "help": {
                "text": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2017-14159_debian:bullseye:libldap-2.4-2_2.4.57+dfsg-3+deb11u1",
              "shortDescription": {
                "text": "[CVE-2017-14159] debian:bullseye:libldap-2.4-2 2.4.57+dfsg-3+deb11u1"
              },
              "help": {
                "text": "slapd in OpenLDAP 2.4.45 and earlier creates a PID file after dropping privileges to a non-root account, which might allow local users to kill arbitrary processes by leveraging access to this non-root account for PID file modification before a root script executes a \"kill `cat /pathname`\" command, as demonstrated by openldap-initscript.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2011-3389_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
              "shortDescription": {
                "text": "[CVE-2011-3389] debian:bullseye:libgnutls30 3.7.1-5+deb11u3"
              },
              "help": {
                "text": "The SSL protocol, as used in certain configurations in Microsoft Windows and Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera, and other products, encrypts data by using CBC mode with chained initialization vectors, which allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a \"BEAST\" attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2005-2541_debian:bullseye:tar_1.34+dfsg-1",
              "shortDescription": {
                "text": "[CVE-2005-2541] debian:bullseye:tar 1.34+dfsg-1"
              },
              "help": {
                "text": "Tar 1.15.1 does not properly warn the user when extracting setuid or setgid files, which may allow local users or remote attackers to gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-28320_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-28320] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A denial of service vulnerability exists in curl \u003cv8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2011-4116_debian:bullseye:perl-base_5.32.1-4+deb11u2",
              "shortDescription": {
                "text": "[CVE-2011-4116] debian:bullseye:perl-base 5.32.1-4+deb11u2"
              },
              "help": {
                "text": "_is_safe in the File::Temp module for Perl does not properly handle symlinks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2007-5686_debian:bullseye:login:1_4.8.1-1",
              "shortDescription": {
                "text": "[CVE-2007-5686] debian:bullseye:login:1 4.8.1-1"
              },
              "help": {
                "text": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2017-17740_debian:bullseye:libldap-2.4-2_2.4.57+dfsg-3+deb11u1",
              "shortDescription": {
                "text": "[CVE-2017-17740] debian:bullseye:libldap-2.4-2 2.4.57+dfsg-3+deb11u1"
              },
              "help": {
                "text": "contrib/slapd-modules/nops/nops.c in OpenLDAP through 2.4.45, when both the nops module and the memberof overlay are enabled, attempts to free a buffer that was allocated on the stack, which allows remote attackers to cause a denial of service (slapd crash) via a member MODDN operation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-16231_debian:bullseye:libpcre3:2_8.39-13",
              "shortDescription": {
                "text": "[CVE-2017-16231] debian:bullseye:libpcre3:2 8.39-13"
              },
              "help": {
                "text": "In PCRE 8.41, after compiling, a pcretest load test PoC produces a crash overflow in the function match() in pcre_exec.c because of a self-recursive call. NOTE: third parties dispute the relevance of this report, noting that there are options that can be used to limit the amount of stack that is used",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2017-17740_debian:bullseye:libldap-common_2.4.57+dfsg-3+deb11u1",
              "shortDescription": {
                "text": "[CVE-2017-17740] debian:bullseye:libldap-common 2.4.57+dfsg-3+deb11u1"
              },
              "help": {
                "text": "contrib/slapd-modules/nops/nops.c in OpenLDAP through 2.4.45, when both the nops module and the memberof overlay are enabled, attempts to free a buffer that was allocated on the stack, which allows remote attackers to cause a denial of service (slapd crash) via a member MODDN operation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-13529_debian:bullseye:libsystemd0_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2020-13529] debian:bullseye:libsystemd0 247.3-7+deb11u1"
              },
              "help": {
                "text": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2018-20796_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2018-20796] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-19882_debian:bullseye:login:1_4.8.1-1",
              "shortDescription": {
                "text": "[CVE-2019-19882] debian:bullseye:login:1 4.8.1-1"
              },
              "help": {
                "text": "shadow 4.8, in certain circumstances affecting at least Gentoo, Arch Linux, and Void Linux, allows local users to obtain root access because setuid programs are misconfigured. Specifically, this affects shadow 4.8 when compiled using --with-libpam but without explicitly passing --disable-account-tools-setuid, and without a PAM configuration suitable for use with setuid account management tools. This combination leads to account management tools (groupadd, groupdel, groupmod, useradd, userdel, usermod) that can easily be used by unprivileged local users to escalate privileges to root in multiple ways. This issue became much more relevant in approximately December 2019 when an unrelated bug was fixed (i.e., the chmod calls to suidusbins were fixed in the upstream Makefile which is now included in the release version 4.8).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2013-4392_debian:bullseye:libsystemd0_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2013-4392] debian:bullseye:libsystemd0 247.3-7+deb11u1"
              },
              "help": {
                "text": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2016-2781_debian:bullseye:coreutils_8.32-4+b1",
              "shortDescription": {
                "text": "[CVE-2016-2781] debian:bullseye:coreutils 8.32-4+b1"
              },
              "help": {
                "text": "chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2017-18018_debian:bullseye:coreutils_8.32-4+b1",
              "shortDescription": {
                "text": "[CVE-2017-18018] debian:bullseye:coreutils 8.32-4+b1"
              },
              "help": {
                "text": "In GNU Coreutils through 8.29, chown-core.c in chown and chgrp does not prevent replacement of a plain file with a symlink during use of the POSIX \"-R -L\" options, which allows local users to modify the ownership of arbitrary files by leveraging a race condition.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2018-5709_debian:bullseye:libgssapi-krb5-2_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2018-5709] debian:bullseye:libgssapi-krb5-2 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry-\u003en_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-31437_debian:bullseye:libudev1_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-31437] debian:bullseye:libudev1 247.3-7+deb11u1"
              },
              "help": {
                "text": "An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-31439_debian:bullseye:libudev1_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-31439] debian:bullseye:libudev1 247.3-7+deb11u1"
              },
              "help": {
                "text": "An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-36085_debian:bullseye:libsepol1_3.1-1",
              "shortDescription": {
                "text": "[CVE-2021-36085] debian:bullseye:libsepol1 3.1-1"
              },
              "help": {
                "text": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __verify_map_perm_classperms and hashtab_map).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2024-2379_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2024-2379] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-31437_debian:bullseye:libsystemd0_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-31437] debian:bullseye:libsystemd0 247.3-7+deb11u1"
              },
              "help": {
                "text": "An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2015-3276_debian:bullseye:libldap-common_2.4.57+dfsg-3+deb11u1",
              "shortDescription": {
                "text": "[CVE-2015-3276] debian:bullseye:libldap-common 2.4.57+dfsg-3+deb11u1"
              },
              "help": {
                "text": "The nss_parse_ciphers function in libraries/libldap/tls_m.c in OpenLDAP does not properly parse OpenSSL-style multi-keyword mode cipher strings, which might cause a weaker than intended cipher to be used and allow remote attackers to have unspecified impact via unknown vectors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-1010023_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2019-1010023] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2019-1010022_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2019-1010022] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2024-28182_debian:bullseye:libnghttp2-14_1.43.0-1",
              "shortDescription": {
                "text": "[CVE-2024-28182] debian:bullseye:libnghttp2-14 1.43.0-1"
              },
              "help": {
                "text": "nghttp2 is an implementation of the Hypertext Transfer Protocol version 2 in C. The nghttp2 library prior to version 1.61.0 keeps reading the unbounded number of HTTP/2 CONTINUATION frames even after a stream is reset to keep HPACK context in sync.  This causes excessive CPU usage to decode HPACK stream. nghttp2 v1.61.0 mitigates this vulnerability by limiting the number of CONTINUATION frames it accepts per stream. There is no workaround for this vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-50868_debian:bullseye:libudev1_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-50868] debian:bullseye:libudev1 247.3-7+deb11u1"
              },
              "help": {
                "text": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Undetermined       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-50868_debian:bullseye:libsystemd0_247.3-7+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-50868] debian:bullseye:libsystemd0 247.3-7+deb11u1"
              },
              "help": {
                "text": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Undetermined       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_debian:bullseye:libuuid1_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-28085] debian:bullseye:libuuid1 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26458_debian:bullseye:libkrb5support0_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26458] debian:bullseye:libkrb5support0 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28834_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-28834] debian:bullseye:libgnutls30 3.7.1-5+deb11u3"
              },
              "help": {
                "text": "A flaw was found in GnuTLS. The Minerva attack is a cryptographic vulnerability that exploits deterministic behavior in systems like GnuTLS, leading to side-channel leaks. In specific scenarios, such as when using the GNUTLS_PRIVKEY_FLAG_REPRODUCIBLE flag, it can result in a noticeable step in nonce size from 513 to 512 bits, exposing a potential timing side-channel.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_debian:bullseye:bsdutils:1_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-28085] debian:bullseye:bsdutils:1 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-33601_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2024-33601] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "nscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26462_debian:bullseye:libgssapi-krb5-2_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26462] debian:bullseye:libgssapi-krb5-2 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26462_debian:bullseye:libk5crypto3_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26462] debian:bullseye:libk5crypto3 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26458_debian:bullseye:libk5crypto3_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26458] debian:bullseye:libk5crypto3 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26461_debian:bullseye:libgssapi-krb5-2_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26461] debian:bullseye:libgssapi-krb5-2 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-33602_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2024-33602] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "nscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_debian:bullseye:libsmartcols1_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-28085] debian:bullseye:libsmartcols1 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_debian:bullseye:mount_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-28085] debian:bullseye:mount 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26462_debian:bullseye:libkrb5support0_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26462] debian:bullseye:libkrb5support0 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-33601_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2024-33601] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "nscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26462_debian:bullseye:libkrb5-3_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26462] debian:bullseye:libkrb5-3 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2236_debian:bullseye:libgcrypt20_1.8.7-6",
              "shortDescription": {
                "text": "[CVE-2024-2236] debian:bullseye:libgcrypt20 1.8.7-6"
              },
              "help": {
                "text": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-45918_debian:bullseye:ncurses-base_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2023-45918] debian:bullseye:ncurses-base 6.2+20201114-2"
              },
              "help": {
                "text": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-39804_debian:bullseye:tar_1.34+dfsg-1",
              "shortDescription": {
                "text": "[CVE-2023-39804] debian:bullseye:tar 1.34+dfsg-1"
              },
              "help": {
                "text": "In GNU tar before 1.35, mishandled extension attributes in a PAX archive can lead to an application crash in xheader.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | [1.34+dfsg-1+deb11u1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_debian:bullseye:libblkid1_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-28085] debian:bullseye:libblkid1 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26458_debian:bullseye:libgssapi-krb5-2_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26458] debian:bullseye:libgssapi-krb5-2 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2511_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2024-2511] debian:bullseye:libssl1.1 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26461_debian:bullseye:libkrb5support0_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26461] debian:bullseye:libkrb5support0 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_debian:bullseye:util-linux_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-28085] debian:bullseye:util-linux 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | [2.36.1-8+deb11u2]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2398_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2024-2398] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28835_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-28835] debian:bullseye:libgnutls30 3.7.1-5+deb11u3"
              },
              "help": {
                "text": "A flaw has been discovered in GnuTLS where an application crash can be induced when attempting to verify a specially crafted .pem bundle using the \"certtool --verify-chain\" command.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26461_debian:bullseye:libk5crypto3_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26461] debian:bullseye:libk5crypto3 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-45918_debian:bullseye:ncurses-bin_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2023-45918] debian:bullseye:ncurses-bin 6.2+20201114-2"
              },
              "help": {
                "text": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26458_debian:bullseye:libkrb5-3_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26458] debian:bullseye:libkrb5-3 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2398_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2024-2398] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-45918_debian:bullseye:libtinfo6_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2023-45918] debian:bullseye:libtinfo6 6.2+20201114-2"
              },
              "help": {
                "text": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2511_debian:bullseye:openssl_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2024-2511] debian:bullseye:openssl 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26461_debian:bullseye:libkrb5-3_1.18.3-6+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-26461] debian:bullseye:libkrb5-3 1.18.3-6+deb11u3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-33602_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2024-33602] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "nscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_debian:bullseye:libmount1_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2024-28085] debian:bullseye:libmount1 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-38545_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-38545] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [7.74.0-1.3+deb11u10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-38545_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-38545] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-23914_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-23914] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-8457_debian:bullseye:libdb5.3_5.3.28+dfsg1-0.8",
              "shortDescription": {
                "text": "[CVE-2019-8457] debian:bullseye:libdb5.3 5.3.28+dfsg1-0.8"
              },
              "help": {
                "text": "SQLite3 from 3.6.0 to and including 3.27.2 is vulnerable to heap out-of-bound read in the rtreenode() function when handling invalid rtree tables.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-23914_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-23914] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-45853_debian:bullseye:zlib1g:1_1.2.11.dfsg-2+deb11u2",
              "shortDescription": {
                "text": "[CVE-2023-45853] debian:bullseye:zlib1g:1 1.2.11.dfsg-2+deb11u2"
              },
              "help": {
                "text": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-0464_debian:bullseye:openssl_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-0464] debian:bullseye:openssl 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [1.1.1n-0+deb11u5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27533_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-27533] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A vulnerability in input validation exists in curl \u003c8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [7.74.0-1.3+deb11u8]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.18.10",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.18.10"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41723_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2022-41723] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.7.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29491_debian:bullseye:ncurses-base_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2023-29491] debian:bullseye:ncurses-base 6.2+20201114-2"
              },
              "help": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-4899_debian:bullseye:libzstd1_1.4.8+dfsg-2.1",
              "shortDescription": {
                "text": "[CVE-2022-4899] debian:bullseye:libzstd1 1.4.8+dfsg-2.1"
              },
              "help": {
                "text": "A vulnerability was found in zstd v1.4.10, where an attacker can supply empty string as an argument to the command line tool to cause buffer overrun.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-0553_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-0553] debian:bullseye:libgnutls30 3.7.1-5+deb11u3"
              },
              "help": {
                "text": "A vulnerability was found in GnuTLS. The response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from the response times of ciphertexts with correct PKCS#1 v1.5 padding. This issue may allow a remote attacker to perform a timing side-channel attack in the RSA-PSK key exchange, potentially leading to the leakage of sensitive data. CVE-2024-0553 is designated as an incomplete resolution for CVE-2023-5981.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-43551_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2022-43551] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A vulnerability exists in curl \u003c7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-47038_debian:bullseye:perl-base_5.32.1-4+deb11u2",
              "shortDescription": {
                "text": "[CVE-2023-47038] debian:bullseye:perl-base 5.32.1-4+deb11u2"
              },
              "help": {
                "text": "A vulnerability was found in perl 5.30.0 through 5.38.0. This issue occurs when a crafted regular expression is compiled by perl, which can allow an attacker controlled byte buffer overflow in a heap allocated buffer.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-0464_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-0464] debian:bullseye:libssl1.1 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-0567_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
              "shortDescription": {
                "text": "[CVE-2024-0567] debian:bullseye:libgnutls30 3.7.1-5+deb11u3"
              },
              "help": {
                "text": "A vulnerability was found in GnuTLS, where a cockpit (which uses gnuTLS) rejects a certificate chain with distributed trust. This issue occurs when validating a certificate chain with cockpit-certificate-ensure. This flaw allows an unauthenticated, remote client or attacker to initiate a denial of service attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-22218_debian:bullseye:libssh2-1_1.9.0-2",
              "shortDescription": {
                "text": "[CVE-2020-22218] debian:bullseye:libssh2-1 1.9.0-2"
              },
              "help": {
                "text": "An issue was discovered in function _libssh2_packet_add in libssh2 1.10.0 allows attackers to access out of bounds memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-2953_debian:bullseye:libldap-common_2.4.57+dfsg-3+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-2953] debian:bullseye:libldap-common 2.4.57+dfsg-3+deb11u1"
              },
              "help": {
                "text": "A vulnerability was found in openldap. This security flaw causes a null pointer dereference in ber_memalloc_x() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-2953_debian:bullseye:libldap-2.4-2_2.4.57+dfsg-3+deb11u1",
              "shortDescription": {
                "text": "[CVE-2023-2953] debian:bullseye:libldap-2.4-2 2.4.57+dfsg-3+deb11u1"
              },
              "help": {
                "text": "A vulnerability was found in openldap. This security flaw causes a null pointer dereference in ber_memalloc_x() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-43551_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2022-43551] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A vulnerability exists in curl \u003c7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27533_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-27533] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "A vulnerability in input validation exists in curl \u003c8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-33560_debian:bullseye:libgcrypt20_1.8.7-6",
              "shortDescription": {
                "text": "[CVE-2021-33560] debian:bullseye:libgcrypt20 1.8.7-6"
              },
              "help": {
                "text": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-42916_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2022-42916] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29491_debian:bullseye:ncurses-bin_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2023-29491] debian:bullseye:ncurses-bin 6.2+20201114-2"
              },
              "help": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-42916_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2022-42916] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29491_debian:bullseye:libtinfo6_6.2+20201114-2",
              "shortDescription": {
                "text": "[CVE-2023-29491] debian:bullseye:libtinfo6 6.2+20201114-2"
              },
              "help": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-27536_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-27536] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists libcurl \u003c8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-4813_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2023-4813] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "A flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-2650_debian:bullseye:openssl_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-2650] debian:bullseye:openssl 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [1.1.1n-0+deb11u5]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-0465_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-0465] debian:bullseye:libssl1.1 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-27536_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-27536] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists libcurl \u003c8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [7.74.0-1.3+deb11u8]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-0466_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-0466] debian:bullseye:libssl1.1 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-29526_golang.org/x/sys_0.0.0-20190422165155-953cdadca894",
              "shortDescription": {
                "text": "[CVE-2022-29526] golang.org/x/sys 0.0.0-20190422165155-953cdadca894"
              },
              "help": {
                "text": "Go before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Assignment. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [0.0.0-20220412211240-33da011f77ad]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.13.8",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.13.8"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.14.1",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.14.1"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-0466_debian:bullseye:openssl_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-0466] debian:bullseye:openssl 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [1.1.1n-0+deb11u5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.17.6",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.17.6"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-4813_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2023-4813] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "A flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-0465_debian:bullseye:openssl_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-0465] debian:bullseye:openssl 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [1.1.1n-0+deb11u5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-2650_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2023-2650] debian:bullseye:libssl1.1 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-3978_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
              "shortDescription": {
                "text": "[CVE-2023-3978] golang.org/x/net 0.0.0-20190620200207-3b0461eec859"
              },
              "help": {
                "text": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Applicable       | `sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar `       | [0.13.0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.12.9",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.12.9"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-41409_debian:bullseye:libpcre2-8-0_10.36-2+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-41409] debian:bullseye:libpcre2-8-0 10.36-2+deb11u1"
              },
              "help": {
                "text": "Integer overflow vulnerability in pcre2test before 10.41 allows attackers to cause a denial of service or other unspecified impacts via negative input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-22922_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2021-22922] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-0563_debian:bullseye:util-linux_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-0563] debian:bullseye:util-linux 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-0563_debian:bullseye:libsmartcols1_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-0563] debian:bullseye:libsmartcols1 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2017-7246_debian:bullseye:libpcre3:2_8.39-13",
              "shortDescription": {
                "text": "[CVE-2017-7246] debian:bullseye:libpcre3:2 8.39-13"
              },
              "help": {
                "text": "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 268) or possibly have unspecified other impact via a crafted file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-28322_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-28322] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl \u003cv8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2022-0563_debian:bullseye:libmount1_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-0563] debian:bullseye:libmount1 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-0563_debian:bullseye:mount_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-0563] debian:bullseye:mount 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-28322_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2023-28322] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl \u003cv8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | [7.74.0-1.3+deb11u9]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2011-3374_debian:bullseye:libapt-pkg6.0_2.2.4",
              "shortDescription": {
                "text": "[CVE-2011-3374] debian:bullseye:libapt-pkg6.0 2.2.4"
              },
              "help": {
                "text": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2021-22923_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2021-22923] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-0563_debian:bullseye:libblkid1_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-0563] debian:bullseye:libblkid1 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2017-7245_debian:bullseye:libpcre3:2_8.39-13",
              "shortDescription": {
                "text": "[CVE-2017-7245] debian:bullseye:libpcre3:2 8.39-13"
              },
              "help": {
                "text": "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 4) or possibly have unspecified other impact via a crafted file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-0563_debian:bullseye:libuuid1_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-0563] debian:bullseye:libuuid1 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-22923_debian:bullseye:curl_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2021-22923] debian:bullseye:curl 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-22922_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
              "shortDescription": {
                "text": "[CVE-2021-22922] debian:bullseye:libcurl4 7.74.0-1.3+deb11u7"
              },
              "help": {
                "text": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-0563_debian:bullseye:bsdutils:1_2.36.1-8+deb11u1",
              "shortDescription": {
                "text": "[CVE-2022-0563] debian:bullseye:bsdutils:1 2.36.1-8+deb11u1"
              },
              "help": {
                "text": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2011-3374_debian:bullseye:apt_2.2.4",
              "shortDescription": {
                "text": "[CVE-2011-3374] debian:bullseye:apt 2.2.4"
              },
              "help": {
                "text": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2019-20838_debian:bullseye:libpcre3:2_8.39-13",
              "shortDescription": {
                "text": "[CVE-2019-20838] debian:bullseye:libpcre3:2 8.39-13"
              },
              "help": {
                "text": "libpcre in PCRE before 8.43 allows a subject buffer over-read in JIT when UTF is disabled, and \\X or \\R has more than one fixed quantifier, a related issue to CVE-2019-20454.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-33599_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2024-33599] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "nscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon's (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-4741_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2024-4741] debian:bullseye:libssl1.1 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "CVE-2024-4741",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-33600_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2024-33600] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "nscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon's (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2961_debian:bullseye:libc6_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2024-2961] debian:bullseye:libc6 2.31-13+deb11u5"
              },
              "help": {
                "text": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-33600_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2024-33600] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "nscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon's (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-33599_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2024-33599] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "nscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon's (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2961_debian:bullseye:libc-bin_2.31-13+deb11u5",
              "shortDescription": {
                "text": "[CVE-2024-2961] debian:bullseye:libc-bin 2.31-13+deb11u5"
              },
              "help": {
                "text": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-4741_debian:bullseye:openssl_1.1.1n-0+deb11u4",
              "shortDescription": {
                "text": "[CVE-2024-4741] debian:bullseye:openssl 1.1.1n-0+deb11u4"
              },
              "help": {
                "text": "CVE-2024-4741",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.18.10",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.13.8",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.17.6",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.12.9",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.14.1",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.13.8",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.13.8",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.12.9",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.14.1",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.18.10",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.17.6",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.12.9",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.14.1",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.17.6",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.12.9",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.17.6",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.14.1",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.14.1",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.12.9",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.14.1",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.12.9",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.13.8",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.13.8",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.12.9",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.13.8",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.12.9",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.18.10",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.12.9",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.13.8",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.12.9",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.17.6",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.14.1",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.17.6",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.13.8",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.14.1",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.18.10",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.13.8",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.17.6",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.17.6",
          "ruleIndex": 38,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.17.6",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.18.10",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.13.8",
          "ruleIndex": 41,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.13.8",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.12.9",
          "ruleIndex": 43,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.14.1",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.14.1",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.14.1",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21698_github.com/prometheus/client_golang_1.5.1",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "[CVE-2022-21698] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9514_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9514] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.12.9",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.14.1",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.17.6",
          "ruleIndex": 51,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.13.8",
          "ruleIndex": 52,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.12.9",
          "ruleIndex": 53,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.14.1",
          "ruleIndex": 54,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.18.10",
          "ruleIndex": 55,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.14.1",
          "ruleIndex": 56,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33194_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 57,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33194] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.12.9",
          "ruleIndex": 58,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.13.8",
          "ruleIndex": 59,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.14.1",
          "ruleIndex": 60,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.13.8",
          "ruleIndex": 61,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.17.6",
          "ruleIndex": 62,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.14.1",
          "ruleIndex": 63,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.12.9",
          "ruleIndex": 64,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 65,
          "level": "error",
          "message": {
            "text": "[CVE-2023-44487] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.17.6",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.12.9",
          "ruleIndex": 67,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.12.9",
          "ruleIndex": 68,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.14.1",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.13.8",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.14.1",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.17.6",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.12.9",
          "ruleIndex": 73,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.17.6",
          "ruleIndex": 74,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.14.1",
          "ruleIndex": 75,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.13.8",
          "ruleIndex": 76,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.18.10",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.13.8",
          "ruleIndex": 78,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.14.1",
          "ruleIndex": 79,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27534_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 80,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27534] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27664_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27664] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.12.9",
          "ruleIndex": 82,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.12.9",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.17.6",
          "ruleIndex": 84,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.14.1",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9512_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9512] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.17.6",
          "ruleIndex": 87,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.17.6",
          "ruleIndex": 88,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.17.6",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.13.8",
          "ruleIndex": 90,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 91,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39325] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.12.9",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.18.10",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.13.8",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.13.8",
          "ruleIndex": 95,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.13.8",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.14.1",
          "ruleIndex": 97,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.12.9",
          "ruleIndex": 98,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.12.9",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.13.8",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27534_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27534] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4911_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "[CVE-2023-4911] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4911_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "[CVE-2023-4911] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50387_debian:bullseye:libsystemd0_247.3-7+deb11u1",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "[CVE-2023-50387] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50387_debian:bullseye:libudev1_247.3-7+deb11u1",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "[CVE-2023-50387] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-31484_debian:bullseye:perl-base_5.32.1-4+deb11u2",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "[CVE-2023-31484] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458_debian:bullseye:libtinfo6_6.2+20201114-2",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29458] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.13.8",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1304_debian:bullseye:libcom-err2_1.46.2-2",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1304] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458_debian:bullseye:ncurses-bin_6.2+20201114-2",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29458] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.12.9",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.14.1",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1304_debian:bullseye:libss2_1.46.2-2",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1304] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1304_debian:bullseye:libext2fs2_1.46.2-2",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1304] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-16156_debian:bullseye:perl-base_5.32.1-4+deb11u2",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "[CVE-2020-16156] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.12.9",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1304_debian:bullseye:logsave_1.46.2-2",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1304] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3715_debian:bullseye:bash_5.1-2+deb11u1",
          "ruleIndex": 118,
          "level": "error",
          "message": {
            "text": "[CVE-2022-3715] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.14.1",
          "ruleIndex": 119,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458_debian:bullseye:ncurses-base_6.2+20201114-2",
          "ruleIndex": 120,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29458] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.12.9",
          "ruleIndex": 121,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1304_debian:bullseye:e2fsprogs_1.46.2-2",
          "ruleIndex": 122,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1304] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.13.8",
          "ruleIndex": 123,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.14.1",
          "ruleIndex": 124,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.14.1",
          "ruleIndex": 125,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.14.1",
          "ruleIndex": 126,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.13.8",
          "ruleIndex": 127,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.13.8",
          "ruleIndex": 128,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.18.10",
          "ruleIndex": 129,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.14.1",
          "ruleIndex": 130,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.17.6",
          "ruleIndex": 131,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.13.8",
          "ruleIndex": 132,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.17.6",
          "ruleIndex": 133,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31525_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 134,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-31525] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28321_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 135,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28321] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41717_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 136,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-41717] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.12.9",
          "ruleIndex": 137,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.12.9",
          "ruleIndex": 138,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 139,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.13.8",
          "ruleIndex": 140,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.18.10",
          "ruleIndex": 141,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.18.10",
          "ruleIndex": 142,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.12.9",
          "ruleIndex": 143,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.17.6",
          "ruleIndex": 144,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.13.8",
          "ruleIndex": 145,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.12.9",
          "ruleIndex": 146,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.17.6",
          "ruleIndex": 147,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.14.1",
          "ruleIndex": 148,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.12.9",
          "ruleIndex": 149,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28321_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 150,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28321] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.18.10",
          "ruleIndex": 151,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.12.9",
          "ruleIndex": 152,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.14.1",
          "ruleIndex": 153,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.12.9",
          "ruleIndex": 154,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.14.1",
          "ruleIndex": 155,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.13.8",
          "ruleIndex": 156,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.14.1",
          "ruleIndex": 157,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.13.8",
          "ruleIndex": 158,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.12.9",
          "ruleIndex": 159,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3817_debian:bullseye:openssl_1.1.1n-0+deb11u4",
          "ruleIndex": 160,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3817] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.12.9",
          "ruleIndex": 161,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.14.1",
          "ruleIndex": 162,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.14.1",
          "ruleIndex": 163,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.13.8",
          "ruleIndex": 164,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.14.1",
          "ruleIndex": 165,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.18.10",
          "ruleIndex": 166,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27535_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 167,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27535] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.13.8",
          "ruleIndex": 168,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.14.1",
          "ruleIndex": 169,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.18.10",
          "ruleIndex": 170,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3446_debian:bullseye:openssl_1.1.1n-0+deb11u4",
          "ruleIndex": 171,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3446] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 172,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46218] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.17.6",
          "ruleIndex": 173,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.13.8",
          "ruleIndex": 174,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.13.8",
          "ruleIndex": 175,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.12.9",
          "ruleIndex": 176,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.13.8",
          "ruleIndex": 177,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.12.9",
          "ruleIndex": 178,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.14.1",
          "ruleIndex": 179,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.17.6",
          "ruleIndex": 180,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.12.9",
          "ruleIndex": 181,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27538_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 182,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27538] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.12.9",
          "ruleIndex": 183,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.13.8",
          "ruleIndex": 184,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.14.1",
          "ruleIndex": 185,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.17.6",
          "ruleIndex": 186,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.17.6",
          "ruleIndex": 187,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.13.8",
          "ruleIndex": 188,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.14.1",
          "ruleIndex": 189,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.17.6",
          "ruleIndex": 190,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.12.9",
          "ruleIndex": 191,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.12.9",
          "ruleIndex": 192,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.14.1",
          "ruleIndex": 193,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.12.9",
          "ruleIndex": 194,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.13.8",
          "ruleIndex": 195,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.12.9",
          "ruleIndex": 196,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.17.6",
          "ruleIndex": 197,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.18.10",
          "ruleIndex": 198,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.14.1",
          "ruleIndex": 199,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.13.8",
          "ruleIndex": 200,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.13.8",
          "ruleIndex": 201,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.18.10",
          "ruleIndex": 202,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0727_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
          "ruleIndex": 203,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0727] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4806_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 204,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4806] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3817_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
          "ruleIndex": 205,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3817] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-36054_debian:bullseye:libk5crypto3_1.18.3-6+deb11u3",
          "ruleIndex": 206,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-36054] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 207,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46219] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27535_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 208,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27535] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3821_debian:bullseye:libsystemd0_247.3-7+deb11u1",
          "ruleIndex": 209,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-3821] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-36054_debian:bullseye:libkrb5-3_1.18.3-6+deb11u3",
          "ruleIndex": 210,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-36054] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4806_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 211,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4806] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-36054_debian:bullseye:libgssapi-krb5-2_1.18.3-6+deb11u3",
          "ruleIndex": 212,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-36054] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23915_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 213,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23915] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50495_debian:bullseye:ncurses-bin_6.2+20201114-2",
          "ruleIndex": 214,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-50495] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-36054_debian:bullseye:libkrb5support0_1.18.3-6+deb11u3",
          "ruleIndex": 215,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-36054] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 216,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46219] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7008_debian:bullseye:libsystemd0_247.3-7+deb11u1",
          "ruleIndex": 217,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-7008] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3446_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
          "ruleIndex": 218,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3446] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_debian:bullseye:libgcc-s1_10.2.1-6",
          "ruleIndex": 219,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4415_debian:bullseye:libsystemd0_247.3-7+deb11u1",
          "ruleIndex": 220,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-4415] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7008_debian:bullseye:libudev1_247.3-7+deb11u1",
          "ruleIndex": 221,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-7008] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22365_debian:bullseye:libpam-runtime_1.4.0-9+deb11u1",
          "ruleIndex": 222,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-22365] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678_debian:bullseye:openssl_1.1.1n-0+deb11u4",
          "ruleIndex": 223,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-5678] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4641_debian:bullseye:passwd:1_4.8.1-1",
          "ruleIndex": 224,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4641] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_debian:bullseye:libstdc++6_10.2.1-6",
          "ruleIndex": 225,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50495_debian:bullseye:ncurses-base_6.2+20201114-2",
          "ruleIndex": 226,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-50495] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5981_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
          "ruleIndex": 227,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-5981] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22365_debian:bullseye:libpam-modules_1.4.0-9+deb11u1",
          "ruleIndex": 228,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-22365] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22365_debian:bullseye:libpam0g_1.4.0-9+deb11u1",
          "ruleIndex": 229,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-22365] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22365_debian:bullseye:libpam-modules-bin_1.4.0-9+deb11u1",
          "ruleIndex": 230,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-22365] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3821_debian:bullseye:libudev1_247.3-7+deb11u1",
          "ruleIndex": 231,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-3821] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4641_debian:bullseye:login:1_4.8.1-1",
          "ruleIndex": 232,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4641] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_debian:bullseye:gcc-10-base_10.2.1-6",
          "ruleIndex": 233,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0727_debian:bullseye:openssl_1.1.1n-0+deb11u4",
          "ruleIndex": 234,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0727] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 235,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46218] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27538_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 236,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27538] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50495_debian:bullseye:libtinfo6_6.2+20201114-2",
          "ruleIndex": 237,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-50495] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_debian:bullseye:gcc-9-base_9.3.0-22",
          "ruleIndex": 238,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4415_debian:bullseye:libudev1_247.3-7+deb11u1",
          "ruleIndex": 239,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-4415] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
          "ruleIndex": 240,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-5678] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23915_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 241,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23915] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487_debian:bullseye:libnghttp2-14_1.43.0-1",
          "ruleIndex": 242,
          "level": "note",
          "message": {
            "text": "[CVE-2023-44487] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-11164_debian:bullseye:libpcre3:2_8.39-13",
          "ruleIndex": 243,
          "level": "note",
          "message": {
            "text": "[CVE-2017-11164] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2013-4235_debian:bullseye:passwd:1_4.8.1-1",
          "ruleIndex": 244,
          "level": "note",
          "message": {
            "text": "[CVE-2013-4235] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010024_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 245,
          "level": "note",
          "message": {
            "text": "[CVE-2019-1010024] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2010-4756_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 246,
          "level": "note",
          "message": {
            "text": "[CVE-2010-4756] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6829_debian:bullseye:libgcrypt20_1.8.7-6",
          "ruleIndex": 247,
          "level": "note",
          "message": {
            "text": "[CVE-2018-6829] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38546_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 248,
          "level": "note",
          "message": {
            "text": "[CVE-2023-38546] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28320_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 249,
          "level": "note",
          "message": {
            "text": "[CVE-2023-28320] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2010-4756_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 250,
          "level": "note",
          "message": {
            "text": "[CVE-2010-4756] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-31438_debian:bullseye:libudev1_247.3-7+deb11u1",
          "ruleIndex": 251,
          "level": "note",
          "message": {
            "text": "[CVE-2023-31438] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2007-5686_debian:bullseye:passwd:1_4.8.1-1",
          "ruleIndex": 252,
          "level": "note",
          "message": {
            "text": "[CVE-2007-5686] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010023_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 253,
          "level": "note",
          "message": {
            "text": "[CVE-2019-1010023] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48303_debian:bullseye:tar_1.34+dfsg-1",
          "ruleIndex": 254,
          "level": "note",
          "message": {
            "text": "[CVE-2022-48303] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5709_debian:bullseye:libkrb5-3_1.18.3-6+deb11u3",
          "ruleIndex": 255,
          "level": "note",
          "message": {
            "text": "[CVE-2018-5709] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38546_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 256,
          "level": "note",
          "message": {
            "text": "[CVE-2023-38546] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-4217_debian:bullseye:unzip_6.0-26+deb11u1",
          "ruleIndex": 257,
          "level": "note",
          "message": {
            "text": "[CVE-2021-4217] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36084_debian:bullseye:libsepol1_3.1-1",
          "ruleIndex": 258,
          "level": "note",
          "message": {
            "text": "[CVE-2021-36084] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010025_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 259,
          "level": "note",
          "message": {
            "text": "[CVE-2019-1010025] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-31486_debian:bullseye:perl-base_5.32.1-4+deb11u2",
          "ruleIndex": 260,
          "level": "note",
          "message": {
            "text": "[CVE-2023-31486] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29383_debian:bullseye:passwd:1_4.8.1-1",
          "ruleIndex": 261,
          "level": "note",
          "message": {
            "text": "[CVE-2023-29383] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-31438_debian:bullseye:libsystemd0_247.3-7+deb11u1",
          "ruleIndex": 262,
          "level": "note",
          "message": {
            "text": "[CVE-2023-31438] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9192_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 263,
          "level": "note",
          "message": {
            "text": "[CVE-2019-9192] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010025_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 264,
          "level": "note",
          "message": {
            "text": "[CVE-2019-1010025] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15719_debian:bullseye:libldap-2.4-2_2.4.57+dfsg-3+deb11u1",
          "ruleIndex": 265,
          "level": "note",
          "message": {
            "text": "[CVE-2020-15719] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.14.1",
          "ruleIndex": 266,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010024_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 267,
          "level": "note",
          "message": {
            "text": "[CVE-2019-1010024] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19882_debian:bullseye:passwd:1_4.8.1-1",
          "ruleIndex": 268,
          "level": "note",
          "message": {
            "text": "[CVE-2019-19882] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5709_debian:bullseye:libk5crypto3_1.18.3-6+deb11u3",
          "ruleIndex": 269,
          "level": "note",
          "message": {
            "text": "[CVE-2018-5709] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5709_debian:bullseye:libkrb5support0_1.18.3-6+deb11u3",
          "ruleIndex": 270,
          "level": "note",
          "message": {
            "text": "[CVE-2018-5709] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9192_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 271,
          "level": "note",
          "message": {
            "text": "[CVE-2019-9192] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13529_debian:bullseye:libudev1_247.3-7+deb11u1",
          "ruleIndex": 272,
          "level": "note",
          "message": {
            "text": "[CVE-2020-13529] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-31439_debian:bullseye:libsystemd0_247.3-7+deb11u1",
          "ruleIndex": 273,
          "level": "note",
          "message": {
            "text": "[CVE-2023-31439] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2013-4235_debian:bullseye:login:1_4.8.1-1",
          "ruleIndex": 274,
          "level": "note",
          "message": {
            "text": "[CVE-2013-4235] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-3276_debian:bullseye:libldap-2.4-2_2.4.57+dfsg-3+deb11u1",
          "ruleIndex": 275,
          "level": "note",
          "message": {
            "text": "[CVE-2015-3276] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15719_debian:bullseye:libldap-common_2.4.57+dfsg-3+deb11u1",
          "ruleIndex": 276,
          "level": "note",
          "message": {
            "text": "[CVE-2020-15719] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010022_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 277,
          "level": "note",
          "message": {
            "text": "[CVE-2019-1010022] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20796_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 278,
          "level": "note",
          "message": {
            "text": "[CVE-2018-20796] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.17.6",
          "ruleIndex": 279,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2013-4392_debian:bullseye:libudev1_247.3-7+deb11u1",
          "ruleIndex": 280,
          "level": "note",
          "message": {
            "text": "[CVE-2013-4392] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.12.9",
          "ruleIndex": 281,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36087_debian:bullseye:libsepol1_3.1-1",
          "ruleIndex": 282,
          "level": "note",
          "message": {
            "text": "[CVE-2021-36087] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_debian:bullseye:gpgv_2.2.27-2+deb11u2",
          "ruleIndex": 283,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-14159_debian:bullseye:libldap-common_2.4.57+dfsg-3+deb11u1",
          "ruleIndex": 284,
          "level": "note",
          "message": {
            "text": "[CVE-2017-14159] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36086_debian:bullseye:libsepol1_3.1-1",
          "ruleIndex": 285,
          "level": "note",
          "message": {
            "text": "[CVE-2021-36086] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 286,
          "level": "note",
          "message": {
            "text": "[CVE-2024-2379] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.13.8",
          "ruleIndex": 287,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29383_debian:bullseye:login:1_4.8.1-1",
          "ruleIndex": 288,
          "level": "note",
          "message": {
            "text": "[CVE-2023-29383] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-14159_debian:bullseye:libldap-2.4-2_2.4.57+dfsg-3+deb11u1",
          "ruleIndex": 289,
          "level": "note",
          "message": {
            "text": "[CVE-2017-14159] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2011-3389_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
          "ruleIndex": 290,
          "level": "note",
          "message": {
            "text": "[CVE-2011-3389] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2005-2541_debian:bullseye:tar_1.34+dfsg-1",
          "ruleIndex": 291,
          "level": "note",
          "message": {
            "text": "[CVE-2005-2541] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28320_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 292,
          "level": "note",
          "message": {
            "text": "[CVE-2023-28320] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2011-4116_debian:bullseye:perl-base_5.32.1-4+deb11u2",
          "ruleIndex": 293,
          "level": "note",
          "message": {
            "text": "[CVE-2011-4116] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2007-5686_debian:bullseye:login:1_4.8.1-1",
          "ruleIndex": 294,
          "level": "note",
          "message": {
            "text": "[CVE-2007-5686] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-17740_debian:bullseye:libldap-2.4-2_2.4.57+dfsg-3+deb11u1",
          "ruleIndex": 295,
          "level": "note",
          "message": {
            "text": "[CVE-2017-17740] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16231_debian:bullseye:libpcre3:2_8.39-13",
          "ruleIndex": 296,
          "level": "note",
          "message": {
            "text": "[CVE-2017-16231] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-17740_debian:bullseye:libldap-common_2.4.57+dfsg-3+deb11u1",
          "ruleIndex": 297,
          "level": "note",
          "message": {
            "text": "[CVE-2017-17740] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13529_debian:bullseye:libsystemd0_247.3-7+deb11u1",
          "ruleIndex": 298,
          "level": "note",
          "message": {
            "text": "[CVE-2020-13529] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20796_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 299,
          "level": "note",
          "message": {
            "text": "[CVE-2018-20796] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19882_debian:bullseye:login:1_4.8.1-1",
          "ruleIndex": 300,
          "level": "note",
          "message": {
            "text": "[CVE-2019-19882] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2013-4392_debian:bullseye:libsystemd0_247.3-7+deb11u1",
          "ruleIndex": 301,
          "level": "note",
          "message": {
            "text": "[CVE-2013-4392] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-2781_debian:bullseye:coreutils_8.32-4+b1",
          "ruleIndex": 302,
          "level": "note",
          "message": {
            "text": "[CVE-2016-2781] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18018_debian:bullseye:coreutils_8.32-4+b1",
          "ruleIndex": 303,
          "level": "note",
          "message": {
            "text": "[CVE-2017-18018] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5709_debian:bullseye:libgssapi-krb5-2_1.18.3-6+deb11u3",
          "ruleIndex": 304,
          "level": "note",
          "message": {
            "text": "[CVE-2018-5709] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-31437_debian:bullseye:libudev1_247.3-7+deb11u1",
          "ruleIndex": 305,
          "level": "note",
          "message": {
            "text": "[CVE-2023-31437] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-31439_debian:bullseye:libudev1_247.3-7+deb11u1",
          "ruleIndex": 306,
          "level": "note",
          "message": {
            "text": "[CVE-2023-31439] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36085_debian:bullseye:libsepol1_3.1-1",
          "ruleIndex": 307,
          "level": "note",
          "message": {
            "text": "[CVE-2021-36085] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 308,
          "level": "note",
          "message": {
            "text": "[CVE-2024-2379] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-31437_debian:bullseye:libsystemd0_247.3-7+deb11u1",
          "ruleIndex": 309,
          "level": "note",
          "message": {
            "text": "[CVE-2023-31437] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-3276_debian:bullseye:libldap-common_2.4.57+dfsg-3+deb11u1",
          "ruleIndex": 310,
          "level": "note",
          "message": {
            "text": "[CVE-2015-3276] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010023_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 311,
          "level": "note",
          "message": {
            "text": "[CVE-2019-1010023] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010022_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 312,
          "level": "note",
          "message": {
            "text": "[CVE-2019-1010022] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28182_debian:bullseye:libnghttp2-14_1.43.0-1",
          "ruleIndex": 313,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28182] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50868_debian:bullseye:libudev1_247.3-7+deb11u1",
          "ruleIndex": 314,
          "level": "none",
          "message": {
            "text": "[CVE-2023-50868] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50868_debian:bullseye:libsystemd0_247.3-7+deb11u1",
          "ruleIndex": 315,
          "level": "none",
          "message": {
            "text": "[CVE-2023-50868] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_debian:bullseye:libuuid1_2.36.1-8+deb11u1",
          "ruleIndex": 316,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458_debian:bullseye:libkrb5support0_1.18.3-6+deb11u3",
          "ruleIndex": 317,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26458] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28834_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
          "ruleIndex": 318,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28834] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_debian:bullseye:bsdutils:1_2.36.1-8+deb11u1",
          "ruleIndex": 319,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33601_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 320,
          "level": "none",
          "message": {
            "text": "[CVE-2024-33601] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462_debian:bullseye:libgssapi-krb5-2_1.18.3-6+deb11u3",
          "ruleIndex": 321,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26462] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462_debian:bullseye:libk5crypto3_1.18.3-6+deb11u3",
          "ruleIndex": 322,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26462] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458_debian:bullseye:libk5crypto3_1.18.3-6+deb11u3",
          "ruleIndex": 323,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26458] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461_debian:bullseye:libgssapi-krb5-2_1.18.3-6+deb11u3",
          "ruleIndex": 324,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26461] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33602_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 325,
          "level": "none",
          "message": {
            "text": "[CVE-2024-33602] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_debian:bullseye:libsmartcols1_2.36.1-8+deb11u1",
          "ruleIndex": 326,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_debian:bullseye:mount_2.36.1-8+deb11u1",
          "ruleIndex": 327,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462_debian:bullseye:libkrb5support0_1.18.3-6+deb11u3",
          "ruleIndex": 328,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26462] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33601_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 329,
          "level": "none",
          "message": {
            "text": "[CVE-2024-33601] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462_debian:bullseye:libkrb5-3_1.18.3-6+deb11u3",
          "ruleIndex": 330,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26462] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2236_debian:bullseye:libgcrypt20_1.8.7-6",
          "ruleIndex": 331,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2236] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45918_debian:bullseye:ncurses-base_6.2+20201114-2",
          "ruleIndex": 332,
          "level": "none",
          "message": {
            "text": "[CVE-2023-45918] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39804_debian:bullseye:tar_1.34+dfsg-1",
          "ruleIndex": 333,
          "level": "none",
          "message": {
            "text": "[CVE-2023-39804] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_debian:bullseye:libblkid1_2.36.1-8+deb11u1",
          "ruleIndex": 334,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458_debian:bullseye:libgssapi-krb5-2_1.18.3-6+deb11u3",
          "ruleIndex": 335,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26458] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
          "ruleIndex": 336,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2511] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461_debian:bullseye:libkrb5support0_1.18.3-6+deb11u3",
          "ruleIndex": 337,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26461] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_debian:bullseye:util-linux_2.36.1-8+deb11u1",
          "ruleIndex": 338,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 339,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28835_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
          "ruleIndex": 340,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28835] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461_debian:bullseye:libk5crypto3_1.18.3-6+deb11u3",
          "ruleIndex": 341,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26461] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45918_debian:bullseye:ncurses-bin_6.2+20201114-2",
          "ruleIndex": 342,
          "level": "none",
          "message": {
            "text": "[CVE-2023-45918] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458_debian:bullseye:libkrb5-3_1.18.3-6+deb11u3",
          "ruleIndex": 343,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26458] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 344,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45918_debian:bullseye:libtinfo6_6.2+20201114-2",
          "ruleIndex": 345,
          "level": "none",
          "message": {
            "text": "[CVE-2023-45918] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_debian:bullseye:openssl_1.1.1n-0+deb11u4",
          "ruleIndex": 346,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2511] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461_debian:bullseye:libkrb5-3_1.18.3-6+deb11u3",
          "ruleIndex": 347,
          "level": "none",
          "message": {
            "text": "[CVE-2024-26461] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33602_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 348,
          "level": "none",
          "message": {
            "text": "[CVE-2024-33602] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_debian:bullseye:libmount1_2.36.1-8+deb11u1",
          "ruleIndex": 349,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38545_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 350,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38545] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.12.9",
          "ruleIndex": 351,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.14.1",
          "ruleIndex": 352,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.14.1",
          "ruleIndex": 353,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.18.10",
          "ruleIndex": 354,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.13.8",
          "ruleIndex": 355,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38545_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 356,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38545] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.14.1",
          "ruleIndex": 357,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23914_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 358,
          "level": "error",
          "message": {
            "text": "[CVE-2023-23914] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-8457_debian:bullseye:libdb5.3_5.3.28+dfsg1-0.8",
          "ruleIndex": 359,
          "level": "error",
          "message": {
            "text": "[CVE-2019-8457] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.18.10",
          "ruleIndex": 360,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.13.8",
          "ruleIndex": 361,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.12.9",
          "ruleIndex": 362,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.12.9",
          "ruleIndex": 363,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.14.1",
          "ruleIndex": 364,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23914_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 365,
          "level": "error",
          "message": {
            "text": "[CVE-2023-23914] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.13.8",
          "ruleIndex": 366,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.13.8",
          "ruleIndex": 367,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.17.6",
          "ruleIndex": 368,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45853_debian:bullseye:zlib1g:1_1.2.11.dfsg-2+deb11u2",
          "ruleIndex": 369,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45853] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.12.9",
          "ruleIndex": 370,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.18.10",
          "ruleIndex": 371,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.17.6",
          "ruleIndex": 372,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.17.6",
          "ruleIndex": 373,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.12.9",
          "ruleIndex": 374,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.17.6",
          "ruleIndex": 375,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.13.8",
          "ruleIndex": 376,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.14.1",
          "ruleIndex": 377,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.12.9",
          "ruleIndex": 378,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.13.8",
          "ruleIndex": 379,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.18.10",
          "ruleIndex": 380,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.12.9",
          "ruleIndex": 381,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.12.9",
          "ruleIndex": 382,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.13.8",
          "ruleIndex": 383,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.17.6",
          "ruleIndex": 384,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.12.9",
          "ruleIndex": 385,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.14.1",
          "ruleIndex": 386,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.13.8",
          "ruleIndex": 387,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.17.6",
          "ruleIndex": 388,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.14.1",
          "ruleIndex": 389,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.17.6",
          "ruleIndex": 390,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.14.1",
          "ruleIndex": 391,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.12.9",
          "ruleIndex": 392,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.13.8",
          "ruleIndex": 393,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.13.8",
          "ruleIndex": 394,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.17.6",
          "ruleIndex": 395,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.18.10",
          "ruleIndex": 396,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.12.9",
          "ruleIndex": 397,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.13.8",
          "ruleIndex": 398,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.17.6",
          "ruleIndex": 399,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.13.8",
          "ruleIndex": 400,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.12.9",
          "ruleIndex": 401,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.13.8",
          "ruleIndex": 402,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.12.9",
          "ruleIndex": 403,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.13.8",
          "ruleIndex": 404,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.17.6",
          "ruleIndex": 405,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.13.8",
          "ruleIndex": 406,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.17.6",
          "ruleIndex": 407,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.12.9",
          "ruleIndex": 408,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.12.9",
          "ruleIndex": 409,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.14.1",
          "ruleIndex": 410,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.13.8",
          "ruleIndex": 411,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.12.9",
          "ruleIndex": 412,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.17.6",
          "ruleIndex": 413,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.13.8",
          "ruleIndex": 414,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.14.1",
          "ruleIndex": 415,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.17.6",
          "ruleIndex": 416,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.18.10",
          "ruleIndex": 417,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.17.6",
          "ruleIndex": 418,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.13.8",
          "ruleIndex": 419,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.17.6",
          "ruleIndex": 420,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.14.1",
          "ruleIndex": 421,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.14.1",
          "ruleIndex": 422,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.12.9",
          "ruleIndex": 423,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.17.6",
          "ruleIndex": 424,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.17.6",
          "ruleIndex": 425,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.14.1",
          "ruleIndex": 426,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.18.10",
          "ruleIndex": 427,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0464_debian:bullseye:openssl_1.1.1n-0+deb11u4",
          "ruleIndex": 428,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0464] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.13.8",
          "ruleIndex": 429,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.13.8",
          "ruleIndex": 430,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.18.10",
          "ruleIndex": 431,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.12.9",
          "ruleIndex": 432,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.14.1",
          "ruleIndex": 433,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.12.9",
          "ruleIndex": 434,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.12.9",
          "ruleIndex": 435,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.17.6",
          "ruleIndex": 436,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.14.1",
          "ruleIndex": 437,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.17.6",
          "ruleIndex": 438,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.14.1",
          "ruleIndex": 439,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.13.8",
          "ruleIndex": 440,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.14.1",
          "ruleIndex": 441,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27533_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 442,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27533] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.13.8",
          "ruleIndex": 443,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.14.1",
          "ruleIndex": 444,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.12.9",
          "ruleIndex": 445,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.14.1",
          "ruleIndex": 446,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.12.9",
          "ruleIndex": 447,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.18.10",
          "ruleIndex": 448,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.17.6",
          "ruleIndex": 449,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.14.1",
          "ruleIndex": 450,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.14.1",
          "ruleIndex": 451,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.14.1",
          "ruleIndex": 452,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.12.9",
          "ruleIndex": 453,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.14.1",
          "ruleIndex": 454,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.12.9",
          "ruleIndex": 455,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.18.10",
          "ruleIndex": 456,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.13.8",
          "ruleIndex": 457,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.17.6",
          "ruleIndex": 458,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.12.9",
          "ruleIndex": 459,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.14.1",
          "ruleIndex": 460,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.13.8",
          "ruleIndex": 461,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.14.1",
          "ruleIndex": 462,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41723_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 463,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41723] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.13.8",
          "ruleIndex": 464,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.12.9",
          "ruleIndex": 465,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.13.8",
          "ruleIndex": 466,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.12.9",
          "ruleIndex": 467,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.14.1",
          "ruleIndex": 468,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491_debian:bullseye:ncurses-base_6.2+20201114-2",
          "ruleIndex": 469,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29491] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4899_debian:bullseye:libzstd1_1.4.8+dfsg-2.1",
          "ruleIndex": 470,
          "level": "error",
          "message": {
            "text": "[CVE-2022-4899] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0553_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
          "ruleIndex": 471,
          "level": "error",
          "message": {
            "text": "[CVE-2024-0553] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43551_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 472,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43551] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-47038_debian:bullseye:perl-base_5.32.1-4+deb11u2",
          "ruleIndex": 473,
          "level": "error",
          "message": {
            "text": "[CVE-2023-47038] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0464_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
          "ruleIndex": 474,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0464] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0567_debian:bullseye:libgnutls30_3.7.1-5+deb11u3",
          "ruleIndex": 475,
          "level": "error",
          "message": {
            "text": "[CVE-2024-0567] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-22218_debian:bullseye:libssh2-1_1.9.0-2",
          "ruleIndex": 476,
          "level": "error",
          "message": {
            "text": "[CVE-2020-22218] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2953_debian:bullseye:libldap-common_2.4.57+dfsg-3+deb11u1",
          "ruleIndex": 477,
          "level": "error",
          "message": {
            "text": "[CVE-2023-2953] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2953_debian:bullseye:libldap-2.4-2_2.4.57+dfsg-3+deb11u1",
          "ruleIndex": 478,
          "level": "error",
          "message": {
            "text": "[CVE-2023-2953] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43551_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 479,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43551] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27533_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 480,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27533] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33560_debian:bullseye:libgcrypt20_1.8.7-6",
          "ruleIndex": 481,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33560] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42916_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 482,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42916] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491_debian:bullseye:ncurses-bin_6.2+20201114-2",
          "ruleIndex": 483,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29491] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42916_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 484,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42916] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491_debian:bullseye:libtinfo6_6.2+20201114-2",
          "ruleIndex": 485,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29491] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27536_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 486,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27536] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4813_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 487,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4813] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2650_debian:bullseye:openssl_1.1.1n-0+deb11u4",
          "ruleIndex": 488,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2650] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.14.1",
          "ruleIndex": 489,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.13.8",
          "ruleIndex": 490,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0465_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
          "ruleIndex": 491,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-0465] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.14.1",
          "ruleIndex": 492,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27536_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 493,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27536] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.13.8",
          "ruleIndex": 494,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.13.8",
          "ruleIndex": 495,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0466_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
          "ruleIndex": 496,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-0466] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.12.9",
          "ruleIndex": 497,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29526_golang.org/x/sys_0.0.0-20190422165155-953cdadca894",
          "ruleIndex": 498,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-29526] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.14.1",
          "ruleIndex": 499,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.13.8",
          "ruleIndex": 500,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__d10ffd3e489c45e6422a11c5f387240ce7594696ebd34a2cd55f097ad43f3d81.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.12.9",
          "ruleIndex": 501,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.14.1",
          "ruleIndex": 502,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__b8a7376d91593f8d48ca790def142e53abe04f31aea8eaae2135abe3729d423d.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0466_debian:bullseye:openssl_1.1.1n-0+deb11u4",
          "ruleIndex": 503,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-0466] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.17.6",
          "ruleIndex": 504,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__86b0a19a09ce59a6fb249e4a2ceb6b7e3930fd1314217677f7c180e3f5fcf87a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4813_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 505,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4813] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.12.9",
          "ruleIndex": 506,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0465_debian:bullseye:openssl_1.1.1n-0+deb11u4",
          "ruleIndex": 507,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-0465] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2650_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
          "ruleIndex": 508,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2650] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3978_golang.org/x/net_0.0.0-20190620200207-3b0461eec859",
          "ruleIndex": 509,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3978] sha256__f5d2045e957bbca92b5d70e65e6948153f5b8985b86b1956f9123dbce44bee89.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.12.9",
          "ruleIndex": 510,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__15549b3b195aeb3e2bdd37c11f29b4504ad597a01d48cd462ac38d593465d3ba.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41409_debian:bullseye:libpcre2-8-0_10.36-2+deb11u1",
          "ruleIndex": 511,
          "level": "note",
          "message": {
            "text": "[CVE-2022-41409] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22922_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 512,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22922] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0563_debian:bullseye:util-linux_2.36.1-8+deb11u1",
          "ruleIndex": 513,
          "level": "note",
          "message": {
            "text": "[CVE-2022-0563] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0563_debian:bullseye:libsmartcols1_2.36.1-8+deb11u1",
          "ruleIndex": 514,
          "level": "note",
          "message": {
            "text": "[CVE-2022-0563] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-7246_debian:bullseye:libpcre3:2_8.39-13",
          "ruleIndex": 515,
          "level": "note",
          "message": {
            "text": "[CVE-2017-7246] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28322_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 516,
          "level": "note",
          "message": {
            "text": "[CVE-2023-28322] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0563_debian:bullseye:libmount1_2.36.1-8+deb11u1",
          "ruleIndex": 517,
          "level": "note",
          "message": {
            "text": "[CVE-2022-0563] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0563_debian:bullseye:mount_2.36.1-8+deb11u1",
          "ruleIndex": 518,
          "level": "note",
          "message": {
            "text": "[CVE-2022-0563] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28322_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 519,
          "level": "note",
          "message": {
            "text": "[CVE-2023-28322] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2011-3374_debian:bullseye:libapt-pkg6.0_2.2.4",
          "ruleIndex": 520,
          "level": "note",
          "message": {
            "text": "[CVE-2011-3374] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22923_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 521,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22923] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0563_debian:bullseye:libblkid1_2.36.1-8+deb11u1",
          "ruleIndex": 522,
          "level": "note",
          "message": {
            "text": "[CVE-2022-0563] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-7245_debian:bullseye:libpcre3:2_8.39-13",
          "ruleIndex": 523,
          "level": "note",
          "message": {
            "text": "[CVE-2017-7245] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0563_debian:bullseye:libuuid1_2.36.1-8+deb11u1",
          "ruleIndex": 524,
          "level": "note",
          "message": {
            "text": "[CVE-2022-0563] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22923_debian:bullseye:curl_7.74.0-1.3+deb11u7",
          "ruleIndex": 525,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22923] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22922_debian:bullseye:libcurl4_7.74.0-1.3+deb11u7",
          "ruleIndex": 526,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22922] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0563_debian:bullseye:bsdutils:1_2.36.1-8+deb11u1",
          "ruleIndex": 527,
          "level": "note",
          "message": {
            "text": "[CVE-2022-0563] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2011-3374_debian:bullseye:apt_2.2.4",
          "ruleIndex": 528,
          "level": "note",
          "message": {
            "text": "[CVE-2011-3374] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20838_debian:bullseye:libpcre3:2_8.39-13",
          "ruleIndex": 529,
          "level": "note",
          "message": {
            "text": "[CVE-2019-20838] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33599_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 530,
          "level": "none",
          "message": {
            "text": "[CVE-2024-33599] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4741_debian:bullseye:libssl1.1_1.1.1n-0+deb11u4",
          "ruleIndex": 531,
          "level": "none",
          "message": {
            "text": "[CVE-2024-4741] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33600_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 532,
          "level": "none",
          "message": {
            "text": "[CVE-2024-33600] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2961_debian:bullseye:libc6_2.31-13+deb11u5",
          "ruleIndex": 533,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2961] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33600_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 534,
          "level": "none",
          "message": {
            "text": "[CVE-2024-33600] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33599_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 535,
          "level": "none",
          "message": {
            "text": "[CVE-2024-33599] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2961_debian:bullseye:libc-bin_2.31-13+deb11u5",
          "ruleIndex": 536,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2961] sha256__ec09eb83ea031896df916feb3a61cefba9facf449c8a55d88667927538dca2b4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4741_debian:bullseye:openssl_1.1.1n-0+deb11u4",
          "ruleIndex": 537,
          "level": "none",
          "message": {
            "text": "[CVE-2024-4741] sha256__df00557067db2b3bab5ee958363c8e9e7dff5354f902587cb0282e334b06ade2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2011-3374",
              "name": "CVE-2011-3374",
              "shortDescription": {
                "text": "Scanner for CVE-2011-3374"
              },
              "fullDescription": {
                "text": "The scanner checks if the vulnerable variable `ARCHIVE_KEYRING_URI` in `/usr/bin/apt-key` is not empty and not commented out. This is the URI that an attacker would need to target in a Man-in-the-Middle attack.\n\nThe below prerequisites are also crucial for exploitability but are not checked in the scanner:\n\n1. The command apt-key net-update should be executed on the affected system, or alternatively `apt.auth.net_update()` function from the `python-apt` Python module should be called. This is for the malicious keys download.\n\n2. After the execution of `apt-key net-update`, APT packages should be installed or updated on the machine.",
                "markdown": "The scanner checks if the vulnerable variable `ARCHIVE_KEYRING_URI` in `/usr/bin/apt-key` is not empty and not commented out. This is the URI that an attacker would need to target in a Man-in-the-Middle attack.\n\nThe below prerequisites are also crucial for exploitability but are not checked in the scanner:\n\n1. The command apt-key net-update should be executed on the affected system, or alternatively `apt.auth.net_update()` function from the `python-apt` Python module should be called. This is for the malicious keys download.\n\n2. After the execution of `apt-key net-update`, APT packages should be installed or updated on the machine."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-38297",
              "name": "CVE-2021-38297",
              "shortDescription": {
                "text": "Scanner for CVE-2021-38297"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-14039",
              "name": "CVE-2020-14039",
              "shortDescription": {
                "text": "Scanner for CVE-2020-14039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41722",
              "name": "CVE-2022-41722",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41722"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3115",
              "name": "CVE-2021-3115",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3115"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-29804",
              "name": "CVE-2022-29804",
              "shortDescription": {
                "text": "Scanner for CVE-2022-29804"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30580",
              "name": "CVE-2022-30580",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30580"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30634",
              "name": "CVE-2022-30634",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30634"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41716",
              "name": "CVE-2022-41716",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41716"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41720",
              "name": "CVE-2022-41720",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41720"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called.",
                "markdown": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-0601",
              "name": "CVE-2020-0601",
              "shortDescription": {
                "text": "Scanner for CVE-2020-0601"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-28321",
              "name": "CVE-2023-28321",
              "shortDescription": {
                "text": "Scanner for CVE-2023-28321"
              },
              "fullDescription": {
                "text": "The CVE is applicable in all possible configurations of cURL",
                "markdown": "The CVE is applicable in all possible configurations of cURL"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative"
              }
            },
            {
              "id": "applic_CVE-2023-45283",
              "name": "CVE-2023-45283",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45283"
              },
              "fullDescription": {
                "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.",
                "markdown": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-17596",
              "name": "CVE-2019-17596",
              "shortDescription": {
                "text": "Scanner for CVE-2019-17596"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-9512",
              "name": "CVE-2019-9512",
              "shortDescription": {
                "text": "Scanner for CVE-2019-9512"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-9514",
              "name": "CVE-2019-9514",
              "shortDescription": {
                "text": "Scanner for CVE-2019-9514"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22922",
              "name": "CVE-2021-22922",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22922"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used.",
                "markdown": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22923",
              "name": "CVE-2021-22923",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22923"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used.",
                "markdown": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-27918",
              "name": "CVE-2021-27918",
              "shortDescription": {
                "text": "Scanner for CVE-2021-27918"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-31525",
              "name": "CVE-2021-31525",
              "shortDescription": {
                "text": "Scanner for CVE-2021-31525"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33194",
              "name": "CVE-2021-33194",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33194"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33195",
              "name": "CVE-2021-33195",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33195"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33196",
              "name": "CVE-2021-33196",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33196"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `zip.OpenReader`\n\t\n* `zip.NewReader`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `zip.OpenReader`\n\t\n* `zip.NewReader`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-36221",
              "name": "CVE-2021-36221",
              "shortDescription": {
                "text": "Scanner for CVE-2021-36221"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33197",
              "name": "CVE-2021-33197",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33197"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2880",
              "name": "CVE-2022-2880",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2880"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33198",
              "name": "CVE-2021-33198",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33198"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-39293",
              "name": "CVE-2021-39293",
              "shortDescription": {
                "text": "Scanner for CVE-2021-39293"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-41771",
              "name": "CVE-2021-41771",
              "shortDescription": {
                "text": "Scanner for CVE-2021-41771"
              },
              "fullDescription": {
                "text": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input.",
                "markdown": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-41772",
              "name": "CVE-2021-41772",
              "shortDescription": {
                "text": "Scanner for CVE-2021-41772"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used.",
                "markdown": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-44717",
              "name": "CVE-2021-44717",
              "shortDescription": {
                "text": "Scanner for CVE-2021-44717"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-0563",
              "name": "CVE-2022-0563",
              "shortDescription": {
                "text": "Scanner for CVE-2022-0563"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `chfs` and `chfn` CLI utilities are compiled with the vulnerable `readline` library.",
                "markdown": "The scanner checks whether the `chfs` and `chfn` CLI utilities are compiled with the vulnerable `readline` library."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1962",
              "name": "CVE-2022-1962",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1962"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-21698",
              "name": "CVE-2022-21698",
              "shortDescription": {
                "text": "Scanner for CVE-2022-21698"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23772",
              "name": "CVE-2022-23772",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23772"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Rat.SetString` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Rat.SetString` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23806",
              "name": "CVE-2022-23806",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23806"
              },
              "fullDescription": {
                "text": "The scanner checks if at least one of the following vulnerable functions is called with external output - \n```\ncrypto/elliptic.(*CurveParams).IsOnCurve()\ncrypto/elliptic.p224Curve.IsOnCurve()\ncrypto/elliptic.p521Curve.IsOnCurve()\ncrypto/elliptic.Curve.IsOnCurve()\ncrypto/elliptic.p256Curve.IsOnCurve()\ncrypto/elliptic.(*p224Curve).IsOnCurve()\ncrypto/elliptic.(*p256Curve).IsOnCurve()\ncrypto/elliptic.(*p521Curve).IsOnCurve()\n```",
                "markdown": "The scanner checks if at least one of the following vulnerable functions is called with external output - \n```\ncrypto/elliptic.(*CurveParams).IsOnCurve()\ncrypto/elliptic.p224Curve.IsOnCurve()\ncrypto/elliptic.p521Curve.IsOnCurve()\ncrypto/elliptic.Curve.IsOnCurve()\ncrypto/elliptic.p256Curve.IsOnCurve()\ncrypto/elliptic.(*p224Curve).IsOnCurve()\ncrypto/elliptic.(*p256Curve).IsOnCurve()\ncrypto/elliptic.(*p521Curve).IsOnCurve()\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24675",
              "name": "CVE-2022-24675",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24675"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `pem.Decode` is called.",
                "markdown": "The scanner checks whether the vulnerable function `pem.Decode` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24921",
              "name": "CVE-2022-24921",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24921"
              },
              "fullDescription": {
                "text": "The scanner checks whether at least one of the vulnerable functions is called : \n```\nregexp.Match\nregexp.MatchReader \nregexp.MatchString\nregexp.Compile\nregexp.CompilePOSIX \nregexp.MustCompile\nregexp.MustCompilePOSIX\n```",
                "markdown": "The scanner checks whether at least one of the vulnerable functions is called : \n```\nregexp.Match\nregexp.MatchReader \nregexp.MatchString\nregexp.Compile\nregexp.CompilePOSIX \nregexp.MustCompile\nregexp.MustCompilePOSIX\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-27664",
              "name": "CVE-2022-27664",
              "shortDescription": {
                "text": "Scanner for CVE-2022-27664"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `net/http.ListenAndServeTLS` is called.",
                "markdown": "The scanner checks whether the vulnerable function `net/http.ListenAndServeTLS` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-28131",
              "name": "CVE-2022-28131",
              "shortDescription": {
                "text": "Scanner for CVE-2022-28131"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Decoder.Skip` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Decoder.Skip` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-28327",
              "name": "CVE-2022-28327",
              "shortDescription": {
                "text": "Scanner for CVE-2022-28327"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2879",
              "name": "CVE-2022-2879",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2879"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called.",
                "markdown": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-29526",
              "name": "CVE-2022-29526",
              "shortDescription": {
                "text": "Scanner for CVE-2022-29526"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30630",
              "name": "CVE-2022-30630",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30630"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `fs.Glob` is called.",
                "markdown": "The scanner checks whether the vulnerable function `fs.Glob` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30631",
              "name": "CVE-2022-30631",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30631"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Reader.Read` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Reader.Read` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30632",
              "name": "CVE-2022-30632",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30632"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `filepath.Glob` is called.",
                "markdown": "The scanner checks whether the vulnerable function `filepath.Glob` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30633",
              "name": "CVE-2022-30633",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30633"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32148",
              "name": "CVE-2022-32148",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32148"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32189",
              "name": "CVE-2022-32189",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32189"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions `Float.GobDecode()` or `Rat.GobDecode()` are called.",
                "markdown": "The scanner checks whether the vulnerable functions `Float.GobDecode()` or `Rat.GobDecode()` are called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41715",
              "name": "CVE-2022-41715",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41715"
              },
              "fullDescription": {
                "text": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`.",
                "markdown": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41717",
              "name": "CVE-2022-41717",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41717"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41723",
              "name": "CVE-2022-41723",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41723"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Decoder.DecodeFull` is called",
                "markdown": "The scanner checks whether the vulnerable function `Decoder.DecodeFull` is called"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41724",
              "name": "CVE-2022-41724",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41724"
              },
              "fullDescription": {
                "text": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)",
                "markdown": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24536",
              "name": "CVE-2023-24536",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24536"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41725",
              "name": "CVE-2022-41725",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41725"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-42916",
              "name": "CVE-2022-42916",
              "shortDescription": {
                "text": "Scanner for CVE-2022-42916"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-43551",
              "name": "CVE-2022-43551",
              "shortDescription": {
                "text": "Scanner for CVE-2022-43551"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-23914",
              "name": "CVE-2023-23914",
              "shortDescription": {
                "text": "Scanner for CVE-2023-23914"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0464",
              "name": "CVE-2023-0464",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0464"
              },
              "fullDescription": {
                "text": "The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the `X509_VERIFY_PARAM_set1_policies` function is called (the functionality is disabled by default)\n\nNote that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag `-policy`. For example, by running `openssl ca -policy match`. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security.",
                "markdown": "The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the `X509_VERIFY_PARAM_set1_policies` function is called (the functionality is disabled by default)\n\nNote that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag `-policy`. For example, by running `openssl ca -policy match`. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0465",
              "name": "CVE-2023-0465",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0465"
              },
              "fullDescription": {
                "text": "The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the `X509_VERIFY_PARAM_set1_policies` function is called (the functionality is disabled by default)\n\nNote that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag `-policy`. For example, by running `openssl ca -policy match`. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security.",
                "markdown": "The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the `X509_VERIFY_PARAM_set1_policies` function is called (the functionality is disabled by default)\n\nNote that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag `-policy`. For example, by running `openssl ca -policy match`. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24534",
              "name": "CVE-2023-24534",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24534"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24537",
              "name": "CVE-2023-24537",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24537"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24538",
              "name": "CVE-2023-24538",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24538"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24539",
              "name": "CVE-2023-24539",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24539"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24540",
              "name": "CVE-2023-24540",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24540"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27533",
              "name": "CVE-2023-27533",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27533"
              },
              "fullDescription": {
                "text": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`",
                "markdown": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27536",
              "name": "CVE-2023-27536",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27536"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-28322",
              "name": "CVE-2023-28322",
              "shortDescription": {
                "text": "Scanner for CVE-2023-28322"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)",
                "markdown": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29400",
              "name": "CVE-2023-29400",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29400"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29402",
              "name": "CVE-2023-29402",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29402"
              },
              "fullDescription": {
                "text": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)",
                "markdown": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29403",
              "name": "CVE-2023-29403",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29403"
              },
              "fullDescription": {
                "text": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled",
                "markdown": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29406",
              "name": "CVE-2023-29406",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29406"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29491",
              "name": "CVE-2023-29491",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29491"
              },
              "fullDescription": {
                "text": "The scanner checks whether a **setuid** binary calls any of the following vulnerable functions -\n- `initscr` \n- `setupterm`\n- `restartterm`\n- `_nc_read_file_entry`",
                "markdown": "The scanner checks whether a **setuid** binary calls any of the following vulnerable functions -\n- `initscr` \n- `setupterm`\n- `restartterm`\n- `_nc_read_file_entry`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29409",
              "name": "CVE-2023-29409",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29409"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-3978",
              "name": "CVE-2023-3978",
              "shortDescription": {
                "text": "Scanner for CVE-2023-3978"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-22218",
              "name": "CVE-2020-22218",
              "shortDescription": {
                "text": "Scanner for CVE-2020-22218"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following `libssh2` functions are called:\n\n* `libssh2_sftp_init`\n* `libssh2_scp_send64`\n* `libssh2_scp_send_ex`\n* `libssh2_scp_send`\n* `libssh2_scp_recv`\n* `libssh2_scp_recv2`\n* `libssh2_channel_open_ex`\n* `libssh2_channel_open_session`\n* `libssh2_session_handshake`",
                "markdown": "The scanner checks whether any of the following `libssh2` functions are called:\n\n* `libssh2_sftp_init`\n* `libssh2_scp_send64`\n* `libssh2_scp_send_ex`\n* `libssh2_scp_send`\n* `libssh2_scp_recv`\n* `libssh2_scp_recv2`\n* `libssh2_channel_open_ex`\n* `libssh2_channel_open_session`\n* `libssh2_session_handshake`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-2953",
              "name": "CVE-2023-2953",
              "shortDescription": {
                "text": "Scanner for CVE-2023-2953"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are used:\n\n- `ldif_open_url`\n- `ldif_fetch_url`\n- `ldif_parse_line2`\n- `ldif_parse_line`\n- `ldap_parse_ldif_record_x`\n- `ldap_parse_ldif_record`\n- `ldif_read_record`\n- `slapi_str2entry`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are used:\n\n- `ldif_open_url`\n- `ldif_fetch_url`\n- `ldif_parse_line2`\n- `ldif_parse_line`\n- `ldap_parse_ldif_record_x`\n- `ldap_parse_ldif_record`\n- `ldif_read_record`\n- `slapi_str2entry`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-4813",
              "name": "CVE-2023-4813",
              "shortDescription": {
                "text": "Scanner for CVE-2023-4813"
              },
              "fullDescription": {
                "text": "The scanner checks whether `/etc/nsswitch.conf` is configured with a vulnerable `SUCCESS` action (the default action is not vulnerable).\n\nFor example:\n\n```\nhosts:          files [SUCCESS=merge] dns\n```\n\n- the vulnerable actions are: merge and continue.\n\nNote: The scanner does not check whether `libc`'s `getaddrinfo` is called.  To confirm the applicability, this condition should also be verified.",
                "markdown": "The scanner checks whether `/etc/nsswitch.conf` is configured with a vulnerable `SUCCESS` action (the default action is not vulnerable).\n\nFor example:\n\n```\nhosts:          files [SUCCESS=merge] dns\n```\n\n- the vulnerable actions are: merge and continue.\n\nNote: The scanner does not check whether `libc`'s `getaddrinfo` is called.  To confirm the applicability, this condition should also be verified."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29404",
              "name": "CVE-2023-29404",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29404"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23773",
              "name": "CVE-2022-23773",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23773"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45285",
              "name": "CVE-2023-45285",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45285"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction.",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-39323",
              "name": "CVE-2023-39323",
              "shortDescription": {
                "text": "Scanner for CVE-2023-39323"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29405",
              "name": "CVE-2023-29405",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29405"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45853",
              "name": "CVE-2023-45853",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45853"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following functions are called:\n\n- `zipOpenNewFileInZip`\n- `zipOpenNewFileInZip_64`\n- `zipOpenNewFileInZip2`\n- `zipOpenNewFileInZip2_64`\n- `zipOpenNewFileInZip3`\n- `zipOpenNewFileInZip3_64`\n- `zipOpenNewFileInZip4`\n- `zipOpenNewFileInZip4_64`",
                "markdown": "The scanner checks if any of the following functions are called:\n\n- `zipOpenNewFileInZip`\n- `zipOpenNewFileInZip_64`\n- `zipOpenNewFileInZip2`\n- `zipOpenNewFileInZip2_64`\n- `zipOpenNewFileInZip3`\n- `zipOpenNewFileInZip3_64`\n- `zipOpenNewFileInZip4`\n- `zipOpenNewFileInZip4_64`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41409",
              "name": "CVE-2022-41409",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41409"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable `pcre2test` binary exists on the scanned artifact.",
                "markdown": "The scanner checks whether the vulnerable `pcre2test` binary exists on the scanned artifact."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-2650",
              "name": "CVE-2023-2650",
              "shortDescription": {
                "text": "Scanner for CVE-2023-2650"
              },
              "fullDescription": {
                "text": "When checking ELF files, the scanner checks whether one of the following function is called with an external input:\n\n* Direct call to `OBJ_obj2txt()` function (for OpenSSL 1.x and OpenSSL 3.x)\n\n**Only for OpenSSL 3.x:**\n\n* OCSP: `OCSP_basic_verify()`\n\n* PKCS7/SMIME:\n`PKCS7_decrypt()`\n`PKCS7_sign()`\n`PKCS7_verify()`\n\n* CMS:\n`CMS_EncryptedData_decrypt()`\n`CMS_EncryptedData_encrypt()`\n`CMS_EnvelopedData_decrypt()`\n`CMS_final()`\n`CMS_decrypt_set1_password()`\n`CMS_RecipientInfo_decrypt()`\n`CMS_decrypt()`\n`CMS_decrypt_set1_pkey()`\n`CMS_decrypt_set1_pkey_and_peer()`\n`CMS_SignedData_verify()`\n`CMS_verify()`\n`CMS_SignerInfo_verify()`\n`CMS_compress()`\n`CMS_data_create()`\n`CMS_data_create_ex()`\n`CMS_digest_create()`\n`CMS_digest_create_ex()`\n`CMS_digest_verify()`\n`CMS_encrypt()`\n`CMS_encrypt_ex()`\n`CMS_final_digest()`\n`CMS_sign()`\n`CMS_sign_ex()`\n`CMS_add1_signer()`\n`CMS_sign_receipt()`\n`CMS_uncompress()`\n`CMS_verify_receipt()`\n\n* CMP/CRMF:\n`OSSL_CMP_get_caCerts()`\n`OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert()`\n`OSSL_CRMF_pbm_new()`\n\n* TS:\n`TS_REQ_print_bio()`\n`TS_OBJ_print_bio()`\n`TS_RESP_create_response()`\n`TS_RESP_print_bio()`\n`TS_RESP_verify_response()`\n`TS_RESP_verify_token()`\n\n* ASN1:\n`ASN1_parse()`\n`X509_NAME_print_ex()`\n`X509_NAME_print_ex_fp()`\n`d2i_AutoPrivateKey()`\n`d2i_PrivateKey()`\n`X509_STORE_CTX_print_verify_cb()`\n`x509_pubkey_ex_d2i_ex()`\n\n* EVP:\n`EVP_PKCS82PKEY()`\n`EVP_PKCS82PKEY_ex()`\n`PKCS5_v2_PBE_keyivgen()`\n`PKCS5_v2_PBE_keyivgen_ex()`\n\n* ESS:\n`OSSL_ESS_check_signing_certs()`\n\nNote that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked",
                "markdown": "When checking ELF files, the scanner checks whether one of the following function is called with an external input:\n\n* Direct call to `OBJ_obj2txt()` function (for OpenSSL 1.x and OpenSSL 3.x)\n\n**Only for OpenSSL 3.x:**\n\n* OCSP: `OCSP_basic_verify()`\n\n* PKCS7/SMIME:\n`PKCS7_decrypt()`\n`PKCS7_sign()`\n`PKCS7_verify()`\n\n* CMS:\n`CMS_EncryptedData_decrypt()`\n`CMS_EncryptedData_encrypt()`\n`CMS_EnvelopedData_decrypt()`\n`CMS_final()`\n`CMS_decrypt_set1_password()`\n`CMS_RecipientInfo_decrypt()`\n`CMS_decrypt()`\n`CMS_decrypt_set1_pkey()`\n`CMS_decrypt_set1_pkey_and_peer()`\n`CMS_SignedData_verify()`\n`CMS_verify()`\n`CMS_SignerInfo_verify()`\n`CMS_compress()`\n`CMS_data_create()`\n`CMS_data_create_ex()`\n`CMS_digest_create()`\n`CMS_digest_create_ex()`\n`CMS_digest_verify()`\n`CMS_encrypt()`\n`CMS_encrypt_ex()`\n`CMS_final_digest()`\n`CMS_sign()`\n`CMS_sign_ex()`\n`CMS_add1_signer()`\n`CMS_sign_receipt()`\n`CMS_uncompress()`\n`CMS_verify_receipt()`\n\n* CMP/CRMF:\n`OSSL_CMP_get_caCerts()`\n`OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert()`\n`OSSL_CRMF_pbm_new()`\n\n* TS:\n`TS_REQ_print_bio()`\n`TS_OBJ_print_bio()`\n`TS_RESP_create_response()`\n`TS_RESP_print_bio()`\n`TS_RESP_verify_response()`\n`TS_RESP_verify_token()`\n\n* ASN1:\n`ASN1_parse()`\n`X509_NAME_print_ex()`\n`X509_NAME_print_ex_fp()`\n`d2i_AutoPrivateKey()`\n`d2i_PrivateKey()`\n`X509_STORE_CTX_print_verify_cb()`\n`x509_pubkey_ex_d2i_ex()`\n\n* EVP:\n`EVP_PKCS82PKEY()`\n`EVP_PKCS82PKEY_ex()`\n`PKCS5_v2_PBE_keyivgen()`\n`PKCS5_v2_PBE_keyivgen_ex()`\n\n* ESS:\n`OSSL_ESS_check_signing_certs()`\n\nNote that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-38545",
              "name": "CVE-2023-38545",
              "shortDescription": {
                "text": "Scanner for CVE-2023-38545"
              },
              "fullDescription": {
                "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`",
                "markdown": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-4911",
              "name": "CVE-2023-4911",
              "shortDescription": {
                "text": "Scanner for CVE-2023-4911"
              },
              "fullDescription": {
                "text": "The scanner checks whether a SUID binary exists on the scanned artifact.",
                "markdown": "The scanner checks whether a SUID binary exists on the scanned artifact."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-39325",
              "name": "CVE-2023-39325",
              "shortDescription": {
                "text": "Scanner for CVE-2023-39325"
              },
              "fullDescription": {
                "text": "The scanner should check whether one of the functions is used:\n\n* net/http\n\n    - ListenAndServe\n    - ListenAndServeTLS\n    - Serve\n    - ServeTLS\n    - Server.ListenAndServe\n    - Server.ListenAndServeTLS\n    - Server.Serve\n    - Server.ServeTLS\n    - http2serverConn.serve\n    - http2serverConn.processHeaders\n    - http2serverConn.upgradeRequest\n    - http2serverConn.runHandler\n        \n* golang.org/x/net/http2\n\n    - Server.ServeConn\n    - serverConn.serve\n    - serverConn.processHeaders\n    - serverConn.upgradeRequest\n    - serverConn.runHandler",
                "markdown": "The scanner should check whether one of the functions is used:\n\n* net/http\n\n    - ListenAndServe\n    - ListenAndServeTLS\n    - Serve\n    - ServeTLS\n    - Server.ListenAndServe\n    - Server.ListenAndServeTLS\n    - Server.Serve\n    - Server.ServeTLS\n    - http2serverConn.serve\n    - http2serverConn.processHeaders\n    - http2serverConn.upgradeRequest\n    - http2serverConn.runHandler\n        \n* golang.org/x/net/http2\n\n    - Server.ServeConn\n    - serverConn.serve\n    - serverConn.processHeaders\n    - serverConn.upgradeRequest\n    - serverConn.runHandler"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45287",
              "name": "CVE-2023-45287",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45287"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`",
                "markdown": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-4899",
              "name": "CVE-2022-4899",
              "shortDescription": {
                "text": "Scanner for CVE-2022-4899"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the flags `--output-dir-flat` or `--output-dir-mirror` are used with the `zstd` command.",
                "markdown": "The scanner checks whether one of the flags `--output-dir-flat` or `--output-dir-mirror` are used with the `zstd` command."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0466",
              "name": "CVE-2023-0466",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0466"
              },
              "fullDescription": {
                "text": "The scanner checks whether `X509_VERIFY_PARAM_add0_policy()` is called.\n\nNote that calling `X509_VERIFY_PARAM_set_flags()` with the parameter `X509_V_FLAG_POLICY_CHECK` mitigates this vulnerability. The scanner currently does not check for that mitigation.",
                "markdown": "The scanner checks whether `X509_VERIFY_PARAM_add0_policy()` is called.\n\nNote that calling `X509_VERIFY_PARAM_set_flags()` with the parameter `X509_V_FLAG_POLICY_CHECK` mitigates this vulnerability. The scanner currently does not check for that mitigation."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27534",
              "name": "CVE-2023-27534",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27534"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following conditions are met:\n\n- The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n- A connection to an SFTP server is made using Curl.\n\nIf any of the conditions are not met, the scanner will return an inconclusive result because Curl may be executed dynamically with user-provided SFTP address.",
                "markdown": "The scanner checks if any of the following conditions are met:\n\n- The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n- A connection to an SFTP server is made using Curl.\n\nIf any of the conditions are not met, the scanner will return an inconclusive result because Curl may be executed dynamically with user-provided SFTP address."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-50387",
              "name": "CVE-2023-50387",
              "shortDescription": {
                "text": "Scanner for CVE-2023-50387"
              },
              "fullDescription": {
                "text": "The scanner checks whether DNSSEC validation is on. Currently, the supported packages are:\n\n* `bind`\n\nFor bind, the scanner checks whether `dnssec-validation` configuration option is set to `auto` or `yes` in the bind configuration file.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the attacker must be able to query the DNSSEC resolver to validate their malicious domain.",
                "markdown": "The scanner checks whether DNSSEC validation is on. Currently, the supported packages are:\n\n* `bind`\n\nFor bind, the scanner checks whether `dnssec-validation` configuration option is set to `auto` or `yes` in the bind configuration file.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the attacker must be able to query the DNSSEC resolver to validate their malicious domain."
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "applic_CVE-2023-50868",
              "name": "CVE-2023-50868",
              "shortDescription": {
                "text": "Scanner for CVE-2023-50868"
              },
              "fullDescription": {
                "text": "The scanner checks whether DNSSEC validation is on. Currently, the supported packages are `bind`, `dnsmasq`, `systemd`, `unbound`.\nFor bind, the scanner checks whether `dnssec-validation` configuration option is set to `auto` or `yes` in the bind configuration file.\n\nFor dnsmasq, the scanner checks whether the `dnssec` configuration appears in the dnsmasq configuration file.\n\nFor systemd, the scanner checks whether the `DNSSEC` configuration is set to `true` or `allow-downgrade` in the systemd-resolved configuration file.\n\nFor unbound, the scanner checks whether a `trust-anchor-file` or `auto-trust-anchor-file` file is set in the `server` configuration in the Unbound configuration file.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the attacker must be able to query the DNSSEC resolver to validate their malicious domain.",
                "markdown": "The scanner checks whether DNSSEC validation is on. Currently, the supported packages are `bind`, `dnsmasq`, `systemd`, `unbound`.\nFor bind, the scanner checks whether `dnssec-validation` configuration option is set to `auto` or `yes` in the bind configuration file.\n\nFor dnsmasq, the scanner checks whether the `dnssec` configuration appears in the dnsmasq configuration file.\n\nFor systemd, the scanner checks whether the `DNSSEC` configuration is set to `true` or `allow-downgrade` in the systemd-resolved configuration file.\n\nFor unbound, the scanner checks whether a `trust-anchor-file` or `auto-trust-anchor-file` file is set in the `server` configuration in the Unbound configuration file.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the attacker must be able to query the DNSSEC resolver to validate their malicious domain."
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "applic_CVE-2024-0553",
              "name": "CVE-2024-0553",
              "shortDescription": {
                "text": "Scanner for CVE-2024-0553"
              },
              "fullDescription": {
                "text": "The scanner checks if RSA decryption occurs by finding calls to any of the following functions:\n\n- `gnutls_privkey_decrypt_data`\n\n- `gnutls_privkey_decrypt_data2`\n\nAn additional condition (that the scanner does not currently check) is required for the CVE to be applicable: the RSA padding algorithm needs to be `PKCS#1`. `key-\u003epk_algorithm` needs to be equal to `GNUTLS_PK_RSA`.",
                "markdown": "The scanner checks if RSA decryption occurs by finding calls to any of the following functions:\n\n- `gnutls_privkey_decrypt_data`\n\n- `gnutls_privkey_decrypt_data2`\n\nAn additional condition (that the scanner does not currently check) is required for the CVE to be applicable: the RSA padding algorithm needs to be `PKCS#1`. `key-\u003epk_algorithm` needs to be equal to `GNUTLS_PK_RSA`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-0567",
              "name": "CVE-2024-0567",
              "shortDescription": {
                "text": "Scanner for CVE-2024-0567"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following vulnerable functions are called:\n\n- `gnutls_pcert_import_x509_list`\n\n- `gnutls_certificate_set_x509_key`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_mem`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_file`\n\n- `gnutls_privkey_import_url`\n\n- `gnutls_privkey_import_pkcs11_url`\n\n- `gnutls_read_key_file`\n\n- `gnutls_certificate_set_rawpk_key_file`\n\n- `gnutls_certificate_set_x509_key_file2`\n\n- `gnutls_certificate_set_x509_key_file`\n\n- `gnutls_pcert_list_import_x509_file`\n\n- `gnutls_certificate_set_x509_key_mem2`\n\n- `gnutls_certificate_set_x509_key_mem`\n\n- `gnutls_x509_crt_list_import`\n\n- `gnutls_pcert_list_import_x509_raw`\n\n- `gnutls_session_channel_binding`\n\n- `gnutls_x509_crt_list_import2`\n\n- `gnutls_x509_trust_list_add_trust_mem`\n\n- `gnutls_x509_trust_list_add_system_trust`\n\n- `gnutls_certificate_set_x509_system_trust`\n\n- `gnutls_certificate_set_x509_crl_mem`\n\n- `gnutls_certificate_set_x509_trust_mem`\n\n- `gnutls_x509_trust_list_add_trust_file`\n\n- `gnutls_certificate_set_x509_crl_file`\n\n- `gnutls_certificate_set_x509_trust_file`\n\n- `gnutls_x509_trust_list_add_trust_dir`\n\n- `gnutls_certificate_set_x509_trust_dir`\n\n- `gnutls_x509_trust_list_remove_trust_mem`\n\n- `gnutls_x509_trust_list_remove_trust_file`\n\n- `gnutls_x509_trust_list_verify_crt2`\n\n- `gnutls_x509_cert_verify_peers`\n\n- `gnutls_certificate_verify_peers`\n\n- `gnutls_certificate_verify_peers2`\n\n- `gnutls_certificate_verify_peers3`\n\n- `gnutls_pkcs7_verify`\n\n- `gnutls_ocsp_resp_verify`\n\n- `gnutls_x509_trust_list_verify_crt`",
                "markdown": "The scanner checks if any of the following vulnerable functions are called:\n\n- `gnutls_pcert_import_x509_list`\n\n- `gnutls_certificate_set_x509_key`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_mem`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_file`\n\n- `gnutls_privkey_import_url`\n\n- `gnutls_privkey_import_pkcs11_url`\n\n- `gnutls_read_key_file`\n\n- `gnutls_certificate_set_rawpk_key_file`\n\n- `gnutls_certificate_set_x509_key_file2`\n\n- `gnutls_certificate_set_x509_key_file`\n\n- `gnutls_pcert_list_import_x509_file`\n\n- `gnutls_certificate_set_x509_key_mem2`\n\n- `gnutls_certificate_set_x509_key_mem`\n\n- `gnutls_x509_crt_list_import`\n\n- `gnutls_pcert_list_import_x509_raw`\n\n- `gnutls_session_channel_binding`\n\n- `gnutls_x509_crt_list_import2`\n\n- `gnutls_x509_trust_list_add_trust_mem`\n\n- `gnutls_x509_trust_list_add_system_trust`\n\n- `gnutls_certificate_set_x509_system_trust`\n\n- `gnutls_certificate_set_x509_crl_mem`\n\n- `gnutls_certificate_set_x509_trust_mem`\n\n- `gnutls_x509_trust_list_add_trust_file`\n\n- `gnutls_certificate_set_x509_crl_file`\n\n- `gnutls_certificate_set_x509_trust_file`\n\n- `gnutls_x509_trust_list_add_trust_dir`\n\n- `gnutls_certificate_set_x509_trust_dir`\n\n- `gnutls_x509_trust_list_remove_trust_mem`\n\n- `gnutls_x509_trust_list_remove_trust_file`\n\n- `gnutls_x509_trust_list_verify_crt2`\n\n- `gnutls_x509_cert_verify_peers`\n\n- `gnutls_certificate_verify_peers`\n\n- `gnutls_certificate_verify_peers2`\n\n- `gnutls_certificate_verify_peers3`\n\n- `gnutls_pkcs7_verify`\n\n- `gnutls_ocsp_resp_verify`\n\n- `gnutls_x509_trust_list_verify_crt`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-28182",
              "name": "CVE-2024-28182",
              "shortDescription": {
                "text": "Scanner for CVE-2024-28182"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative"
              }
            },
            {
              "id": "applic_CVE-2023-47038",
              "name": "CVE-2023-47038",
              "shortDescription": {
                "text": "Scanner for CVE-2023-47038"
              },
              "fullDescription": {
                "text": "This CVE has no security impact (hence it is never applicable) as one of its prerequisites is arbitrary execution of Perl code, making any security impact of exploiting the vulnerability negligible since arbitrary code execution has already occurred.",
                "markdown": "This CVE has no security impact (hence it is never applicable) as one of its prerequisites is arbitrary execution of Perl code, making any security impact of exploiting the vulnerability negligible since arbitrary code execution has already occurred."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45288",
              "name": "CVE-2023-45288",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45288"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`.",
                "markdown": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-2961",
              "name": "CVE-2024-2961",
              "shortDescription": {
                "text": "Scanner for CVE-2024-2961"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-33599",
              "name": "CVE-2024-33599",
              "shortDescription": {
                "text": "Scanner for CVE-2024-33599"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `nscd` binary exists on the machine.",
                "markdown": "The scanner checks whether the `nscd` binary exists on the machine."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-33600",
              "name": "CVE-2024-33600",
              "shortDescription": {
                "text": "Scanner for CVE-2024-33600"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `nscd` binary exists on the machine.",
                "markdown": "The scanner checks whether the `nscd` binary exists on the machine."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-8457",
              "name": "CVE-2019-8457",
              "shortDescription": {
                "text": "Scanner for CVE-2019-8457"
              },
              "fullDescription": {
                "text": "The scanner checks for the execution of the vulnerable SQL query `rtreenode` by searching the artifact for the vulnerable command.",
                "markdown": "The scanner checks for the execution of the vulnerable SQL query `rtreenode` by searching the artifact for the vulnerable command."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-7245",
              "name": "CVE-2017-7245",
              "shortDescription": {
                "text": "Scanner for CVE-2017-7245"
              },
              "fullDescription": {
                "text": "The scanners check whether the `libpcre` package was compiled with the vulnerable 32-bit mode.",
                "markdown": "The scanners check whether the `libpcre` package was compiled with the vulnerable 32-bit mode."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-7246",
              "name": "CVE-2017-7246",
              "shortDescription": {
                "text": "Scanner for CVE-2017-7246"
              },
              "fullDescription": {
                "text": "The scanners check whether the `libpcre` package was compiled with the vulnerable 32-bit mode.",
                "markdown": "The scanners check whether the `libpcre` package was compiled with the vulnerable 32-bit mode."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-4741",
              "name": "CVE-2024-4741",
              "shortDescription": {
                "text": "Scanner for CVE-2024-4741"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `SSL_free_buffers` is called.",
                "markdown": "The scanner checks whether the vulnerable function `SSL_free_buffers` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-44487",
              "name": "CVE-2023-44487",
              "shortDescription": {
                "text": "Scanner for CVE-2023-44487"
              },
              "fullDescription": {
                "text": "The scanner checks for each vendor listed here:\n\n* Tomcat: configuration enables HTTP/2 either through the XML file or Java's `addUpgradeProtocol()` method.\n* Jetty: HTTP/2 enabled through `HTTP2CServerConnectionFactory`/`HTTP2ServerConnectionFactory` class initialization. Note: it also checks whether `jenkins` enables http/2 through its configuration.\n* Nginx: check whether one of the HTTP configurations is enabling http/2.\nNote: the following parameters should be configured properly to make the vulnerability not applicable:\n`keepalive_requests` should be kept at the default setting of 1000 requests\n`http2_max_concurrent_streams` should be kept at the default setting of 128 streams\n`limit_conn and limit_req` should be set `with a reasonable setting balancing application performance and security`. \n* Netty: check whether the `http2` codec classes are used in a java class\n* NodeJS: check whether the `http2.createSecureServer()` is used\n* NGHttp2: check whether a web server is instantiated through one of the symbols `nghttp2_session_server_new` or `listen_and_serve`.\n* Go: check whether a server is instantiated through the `net/http` or `net/http2` packages",
                "markdown": "The scanner checks for each vendor listed here:\n\n* Tomcat: configuration enables HTTP/2 either through the XML file or Java's `addUpgradeProtocol()` method.\n* Jetty: HTTP/2 enabled through `HTTP2CServerConnectionFactory`/`HTTP2ServerConnectionFactory` class initialization. Note: it also checks whether `jenkins` enables http/2 through its configuration.\n* Nginx: check whether one of the HTTP configurations is enabling http/2.\nNote: the following parameters should be configured properly to make the vulnerability not applicable:\n`keepalive_requests` should be kept at the default setting of 1000 requests\n`http2_max_concurrent_streams` should be kept at the default setting of 128 streams\n`limit_conn and limit_req` should be set `with a reasonable setting balancing application performance and security`. \n* Netty: check whether the `http2` codec classes are used in a java class\n* NodeJS: check whether the `http2.createSecureServer()` is used\n* NGHttp2: check whether a web server is instantiated through one of the symbols `nghttp2_session_server_new` or `listen_and_serve`.\n* Go: check whether a server is instantiated through the `net/http` or `net/http2` packages"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30635",
              "name": "CVE-2022-30635",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30635"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function Decoder.Decode of encoding/gob is called.",
                "markdown": "The scanner checks whether the vulnerable function Decoder.Decode of encoding/gob is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-11164",
              "name": "CVE-2017-11164",
              "shortDescription": {
                "text": "Scanner for CVE-2017-11164"
              },
              "fullDescription": {
                "text": "The scanner checks whether a binary uses the `PCRE1` vulnerable functions: `pcre_compile()` or `pcre_exec()`.",
                "markdown": "The scanner checks whether a binary uses the `PCRE1` vulnerable functions: `pcre_compile()` or `pcre_exec()`."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-20838",
              "name": "CVE-2019-20838",
              "shortDescription": {
                "text": "Scanner for CVE-2019-20838"
              },
              "fullDescription": {
                "text": "The scanner checks whether the libpcre was compiled with JIT support.\n\nThe scanner also checks whether the following vulnerable functions are called:\n\n* `pcre_compile` \n* `pcre_exec`",
                "markdown": "The scanner checks whether the libpcre was compiled with JIT support.\n\nThe scanner also checks whether the following vulnerable functions are called:\n\n* `pcre_compile` \n* `pcre_exec`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33560",
              "name": "CVE-2021-33560",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33560"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `gcry_pk_decrypt()` \n* `gcry_pk_encrypt()`\n* `gcry_pk_genkey()`\n* `gcry_pk_sign()`\n\nand if the `\"elg\"` string is found.\nNote - For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that your public key's encryption algorithm must be ElGamal.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `gcry_pk_decrypt()` \n* `gcry_pk_encrypt()`\n* `gcry_pk_genkey()`\n* `gcry_pk_sign()`\n\nand if the `\"elg\"` string is found.\nNote - For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that your public key's encryption algorithm must be ElGamal."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2016-2781",
              "name": "CVE-2016-2781",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-2781"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-19882",
              "name": "CVE-2019-19882",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-19882"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-31439",
              "name": "CVE-2023-31439",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-31439"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2010-4756",
              "name": "CVE-2010-4756",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2010-4756"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30629",
              "name": "CVE-2022-30629",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30629"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-23915",
              "name": "CVE-2023-23915",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-23915"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28320",
              "name": "CVE-2023-28320",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28320"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-4217",
              "name": "CVE-2021-4217",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-4217"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-3821",
              "name": "CVE-2022-3821",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-3821"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-0727",
              "name": "CVE-2024-0727",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-0727"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2236",
              "name": "CVE-2024-2236",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2236"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-22365",
              "name": "CVE-2024-22365",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-22365"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-31484",
              "name": "CVE-2023-31484",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-31484"
              },
              "fullDescription": {
                "text": "The scanner checks whether a script (either bash or perl) installs a package through the `CPAN.pm` module.",
                "markdown": "The scanner checks whether a script (either bash or perl) installs a package through the `CPAN.pm` module."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2013-4235",
              "name": "CVE-2013-4235",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2013-4235"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-1705",
              "name": "CVE-2022-1705",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-1705"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-4039",
              "name": "CVE-2023-4039",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-4039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1010024",
              "name": "CVE-2019-1010024",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1010024"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36086",
              "name": "CVE-2021-36086",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36086"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-50495",
              "name": "CVE-2023-50495",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-50495"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-31438",
              "name": "CVE-2023-31438",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-31438"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45284",
              "name": "CVE-2023-45284",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45284"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-14159",
              "name": "CVE-2017-14159",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-14159"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20796",
              "name": "CVE-2018-20796",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20796"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2379",
              "name": "CVE-2024-2379",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2379"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-5678",
              "name": "CVE-2023-5678",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-5678"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-1304",
              "name": "CVE-2022-1304",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-1304"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-29510",
              "name": "CVE-2020-29510",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-29510"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-31437",
              "name": "CVE-2023-31437",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-31437"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-24532",
              "name": "CVE-2023-24532",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-24532"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1010022",
              "name": "CVE-2019-1010022",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1010022"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39326",
              "name": "CVE-2023-39326",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39326"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-16231",
              "name": "CVE-2017-16231",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-16231"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39318",
              "name": "CVE-2023-39318",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39318"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-9192",
              "name": "CVE-2019-9192",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-9192"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-6829",
              "name": "CVE-2018-6829",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-6829"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39804",
              "name": "CVE-2023-39804",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39804"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36085",
              "name": "CVE-2021-36085",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36085"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1010023",
              "name": "CVE-2019-1010023",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1010023"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-3446",
              "name": "CVE-2023-3446",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-3446"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-24553",
              "name": "CVE-2020-24553",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-24553"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-34558",
              "name": "CVE-2021-34558",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-34558"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-31486",
              "name": "CVE-2023-31486",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-31486"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28367",
              "name": "CVE-2020-28367",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28367"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2398",
              "name": "CVE-2024-2398",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2398"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-26462",
              "name": "CVE-2024-26462",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-26462"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-18018",
              "name": "CVE-2017-18018",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-18018"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36087",
              "name": "CVE-2021-36087",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36087"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1010025",
              "name": "CVE-2019-1010025",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1010025"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46218",
              "name": "CVE-2023-46218",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46218"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2511",
              "name": "CVE-2024-2511",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2511"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28366",
              "name": "CVE-2020-28366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2011-4116",
              "name": "CVE-2011-4116",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2011-4116"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-15719",
              "name": "CVE-2020-15719",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-15719"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-29458",
              "name": "CVE-2022-29458",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-29458"
              },
              "fullDescription": {
                "text": "The scanner searches for execution evidence of the vulnerable tool  `tic`.",
                "markdown": "The scanner searches for execution evidence of the vulnerable tool  `tic`."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-4806",
              "name": "CVE-2023-4806",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-4806"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46219",
              "name": "CVE-2023-46219",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46219"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13529",
              "name": "CVE-2020-13529",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13529"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-36054",
              "name": "CVE-2023-36054",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-36054"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48303",
              "name": "CVE-2022-48303",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48303"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28835",
              "name": "CVE-2024-28835",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28835"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27535",
              "name": "CVE-2023-27535",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27535"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-16276",
              "name": "CVE-2019-16276",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-16276"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-26458",
              "name": "CVE-2024-26458",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-26458"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-16156",
              "name": "CVE-2020-16156",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-16156"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39319",
              "name": "CVE-2023-39319",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39319"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-3715",
              "name": "CVE-2022-3715",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-3715"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-4415",
              "name": "CVE-2022-4415",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-4415"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-29383",
              "name": "CVE-2023-29383",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-29383"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36084",
              "name": "CVE-2021-36084",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36084"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-7008",
              "name": "CVE-2023-7008",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-7008"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2013-4392",
              "name": "CVE-2013-4392",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2013-4392"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-3219",
              "name": "CVE-2022-3219",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-3219"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38546",
              "name": "CVE-2023-38546",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38546"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2015-3276",
              "name": "CVE-2015-3276",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2015-3276"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3114",
              "name": "CVE-2021-3114",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3114"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-33602",
              "name": "CVE-2024-33602",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-33602"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-5709",
              "name": "CVE-2018-5709",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-5709"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2007-5686",
              "name": "CVE-2007-5686",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2007-5686"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-29511",
              "name": "CVE-2020-29511",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-29511"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-4641",
              "name": "CVE-2023-4641",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-4641"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-5981",
              "name": "CVE-2023-5981",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-5981"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2011-3389",
              "name": "CVE-2011-3389",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2011-3389"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28834",
              "name": "CVE-2024-28834",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28834"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45918",
              "name": "CVE-2023-45918",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45918"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28085",
              "name": "CVE-2024-28085",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28085"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-17740",
              "name": "CVE-2017-17740",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-17740"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27538",
              "name": "CVE-2023-27538",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27538"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-26461",
              "name": "CVE-2024-26461",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-26461"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-15586",
              "name": "CVE-2020-15586",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-15586"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-3817",
              "name": "CVE-2023-3817",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-3817"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-33601",
              "name": "CVE-2024-33601",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-33601"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2005-2541",
              "name": "CVE-2005-2541",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2005-2541"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718769455-1946289318/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718769397-3318864731/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2011-3374",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if the vulnerable variable `ARCHIVE_KEYRING_URI` in `/usr/bin/apt-key` is not empty and not commented out. This is the URI that an attacker would need to target in a Man-in-the-Middle attack.\n\nThe below prerequisites are also crucial for exploitability but are not checked in the scanner:\n\n1. The command apt-key net-update should be executed on the affected system, or alternatively `apt.auth.net_update()` function from the `python-apt` Python module should be called. This is for the malicious keys download.\n\n2. After the execution of `apt-key net-update`, APT packages should be installed or updated on the machine."
          }
        },
        {
          "ruleId": "applic_CVE-2021-38297",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2020-14039",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-41722",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-3115",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-29804",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-30580",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-30634",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-41716",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-41720",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-0601",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-45283",
          "kind": "pass",
          "message": {
            "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
          }
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-9512",
          "message": {
            "text": "The vulnerable function http2serverConn.serve is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-9512",
          "message": {
            "text": "The vulnerable function http2serverConn.writeFrame is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-9512",
          "message": {
            "text": "The vulnerable function http2serverConn.scheduleFrameWrite is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-9514",
          "message": {
            "text": "The vulnerable function http2serverConn.serve is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-9514",
          "message": {
            "text": "The vulnerable function http2serverConn.writeFrame is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-9514",
          "message": {
            "text": "The vulnerable function http2serverConn.scheduleFrameWrite is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-22922",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-22923",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-27918",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-31525",
          "message": {
            "text": "The vulnerable function shouldClose is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-31525",
          "message": {
            "text": "The vulnerable function shouldClose is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-31525",
          "message": {
            "text": "The vulnerable function http2clientStream.writeRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-31525",
          "message": {
            "text": "The vulnerable function http2isConnectionCloseRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-31525",
          "message": {
            "text": "The vulnerable function isProtocolSwitchHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-31525",
          "message": {
            "text": "The vulnerable function shouldClose is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33194",
          "message": {
            "text": "The vulnerable function inHeadIM is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33194",
          "message": {
            "text": "The vulnerable function ParseWithOptions is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33194",
          "message": {
            "text": "The vulnerable function Parse is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33196",
          "message": {
            "text": "The vulnerable function zip.NewReader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-36221",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-33197",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-2880",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-33198",
          "message": {
            "text": "The vulnerable function Rat.SetString is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33198",
          "message": {
            "text": "The vulnerable function Rat.SetString is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-39293",
          "message": {
            "text": "The vulnerable function NewReader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-41771",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2021-41772",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-44717",
          "message": {
            "text": "The vulnerable function forkExec is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/entrypoint-demoter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-0563",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `chfs` and `chfn` CLI utilities are compiled with the vulnerable `readline` library."
          }
        },
        {
          "ruleId": "applic_CVE-2022-1962",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function responseWriterDelegator.WriteHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function responseWriterDelegator.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function flusherDelegator.Flush is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function readerFromDelegator.ReadFrom is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function Handler is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function HandlerFor is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function InstrumentMetricHandler is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function InstrumentHandlerCounter is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function sanitizeMethod is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function flusherDelegator.Flush is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21698",
          "message": {
            "text": "The vulnerable function readerFromDelegator.ReadFrom is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23772",
          "message": {
            "text": "The vulnerable function Rat.SetString is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23772",
          "message": {
            "text": "The vulnerable function Rat.SetString is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/entrypoint-demoter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/entrypoint-demoter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/entrypoint-demoter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/set-property"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/set-property"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27664",
          "message": {
            "text": "The vulnerable function net/http.ListenAndServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28131",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `Decoder.Skip` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-2879",
          "message": {
            "text": "The vulnerable function archive/tar.Reader.Next is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-29526",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-30630",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `fs.Glob` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-32148",
          "message": {
            "text": "The vulnerable function Header.Clone is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32148",
          "message": {
            "text": "The vulnerable function Header.Clone is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32148",
          "message": {
            "text": "The vulnerable function Header.Clone is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32148",
          "message": {
            "text": "The vulnerable function Header.Clone is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32148",
          "message": {
            "text": "The vulnerable function Header.Clone is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32148",
          "message": {
            "text": "The vulnerable function Header.Clone is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32189",
          "message": {
            "text": "The vulnerable function math/big.Rat.GobDecode\\math/big.Float.GobDecode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32189",
          "message": {
            "text": "The vulnerable function math/big.Rat.GobDecode\\math/big.Float.GobDecode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32189",
          "message": {
            "text": "The vulnerable function math/big.Rat.GobDecode\\math/big.Float.GobDecode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32189",
          "message": {
            "text": "The vulnerable function math/big.Rat.GobDecode\\math/big.Float.GobDecode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41715",
          "message": {
            "text": "The vulnerable function regexp/syntax.parse is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41717",
          "message": {
            "text": "The vulnerable function http2Server.ServeConn is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41717",
          "message": {
            "text": "The vulnerable function http2serverConn.canonicalHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41717",
          "message": {
            "text": "The vulnerable function Server.ListenAndServe is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41717",
          "message": {
            "text": "The vulnerable function Server.Serve is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41717",
          "message": {
            "text": "The vulnerable function Server.ServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41717",
          "message": {
            "text": "The vulnerable function Server.ListenAndServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41723",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `Decoder.DecodeFull` is called"
          }
        },
        {
          "ruleId": "applic_CVE-2022-41724",
          "kind": "pass",
          "message": {
            "text": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextRawPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.nextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextRawPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.nextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextRawPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.nextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextRawPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.nextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-42916",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2022-43551",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2023-23914",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2023-0464",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the `X509_VERIFY_PARAM_set1_policies` function is called (the functionality is disabled by default)\n\nNote that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag `-policy`. For example, by running `openssl ca -policy match`. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security."
          }
        },
        {
          "ruleId": "applic_CVE-2023-0465",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the `X509_VERIFY_PARAM_set1_policies` function is called (the functionality is disabled by default)\n\nNote that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag `-policy`. For example, by running `openssl ca -policy match`. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security."
          }
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24537",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function cssValueFilter is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function escaper.commit is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function nextJSCtx is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27533",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-27536",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option."
          }
        },
        {
          "ruleId": "applic_CVE-2023-28322",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function htmlNospaceEscaper is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29402",
          "kind": "pass",
          "message": {
            "text": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29403",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29491",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether a **setuid** binary calls any of the following vulnerable functions -\n- `initscr` \n- `setupterm`\n- `restartterm`\n- `_nc_read_file_entry`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.verifyServerCertificate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.processCertsFromClient is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.verifyServerCertificate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.processCertsFromClient is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.HandshakeContext is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.verifyServerCertificate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dialer.DialContext is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-3978",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2020-22218",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following `libssh2` functions are called:\n\n* `libssh2_sftp_init`\n* `libssh2_scp_send64`\n* `libssh2_scp_send_ex`\n* `libssh2_scp_send`\n* `libssh2_scp_recv`\n* `libssh2_scp_recv2`\n* `libssh2_channel_open_ex`\n* `libssh2_channel_open_session`\n* `libssh2_session_handshake`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-2953",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are used:\n\n- `ldif_open_url`\n- `ldif_fetch_url`\n- `ldif_parse_line2`\n- `ldif_parse_line`\n- `ldap_parse_ldif_record_x`\n- `ldap_parse_ldif_record`\n- `ldif_read_record`\n- `slapi_str2entry`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-4813",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `/etc/nsswitch.conf` is configured with a vulnerable `SUCCESS` action (the default action is not vulnerable).\n\nFor example:\n\n```\nhosts:          files [SUCCESS=merge] dns\n```\n\n- the vulnerable actions are: merge and continue.\n\nNote: The scanner does not check whether `libc`'s `getaddrinfo` is called.  To confirm the applicability, this condition should also be verified."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29404",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2022-23773",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45285",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction."
          }
        },
        {
          "ruleId": "applic_CVE-2023-39323",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29405",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45853",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following functions are called:\n\n- `zipOpenNewFileInZip`\n- `zipOpenNewFileInZip_64`\n- `zipOpenNewFileInZip2`\n- `zipOpenNewFileInZip2_64`\n- `zipOpenNewFileInZip3`\n- `zipOpenNewFileInZip3_64`\n- `zipOpenNewFileInZip4`\n- `zipOpenNewFileInZip4_64`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-41409",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable `pcre2test` binary exists on the scanned artifact."
          }
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "kind": "pass",
          "message": {
            "text": "When checking ELF files, the scanner checks whether one of the following function is called with an external input:\n\n* Direct call to `OBJ_obj2txt()` function (for OpenSSL 1.x and OpenSSL 3.x)\n\n**Only for OpenSSL 3.x:**\n\n* OCSP: `OCSP_basic_verify()`\n\n* PKCS7/SMIME:\n`PKCS7_decrypt()`\n`PKCS7_sign()`\n`PKCS7_verify()`\n\n* CMS:\n`CMS_EncryptedData_decrypt()`\n`CMS_EncryptedData_encrypt()`\n`CMS_EnvelopedData_decrypt()`\n`CMS_final()`\n`CMS_decrypt_set1_password()`\n`CMS_RecipientInfo_decrypt()`\n`CMS_decrypt()`\n`CMS_decrypt_set1_pkey()`\n`CMS_decrypt_set1_pkey_and_peer()`\n`CMS_SignedData_verify()`\n`CMS_verify()`\n`CMS_SignerInfo_verify()`\n`CMS_compress()`\n`CMS_data_create()`\n`CMS_data_create_ex()`\n`CMS_digest_create()`\n`CMS_digest_create_ex()`\n`CMS_digest_verify()`\n`CMS_encrypt()`\n`CMS_encrypt_ex()`\n`CMS_final_digest()`\n`CMS_sign()`\n`CMS_sign_ex()`\n`CMS_add1_signer()`\n`CMS_sign_receipt()`\n`CMS_uncompress()`\n`CMS_verify_receipt()`\n\n* CMP/CRMF:\n`OSSL_CMP_get_caCerts()`\n`OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert()`\n`OSSL_CRMF_pbm_new()`\n\n* TS:\n`TS_REQ_print_bio()`\n`TS_OBJ_print_bio()`\n`TS_RESP_create_response()`\n`TS_RESP_print_bio()`\n`TS_RESP_verify_response()`\n`TS_RESP_verify_token()`\n\n* ASN1:\n`ASN1_parse()`\n`X509_NAME_print_ex()`\n`X509_NAME_print_ex_fp()`\n`d2i_AutoPrivateKey()`\n`d2i_PrivateKey()`\n`X509_STORE_CTX_print_verify_cb()`\n`x509_pubkey_ex_d2i_ex()`\n\n* EVP:\n`EVP_PKCS82PKEY()`\n`EVP_PKCS82PKEY_ex()`\n`PKCS5_v2_PBE_keyivgen()`\n`PKCS5_v2_PBE_keyivgen_ex()`\n\n* ESS:\n`OSSL_ESS_check_signing_certs()`\n\nNote that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked"
          }
        },
        {
          "ruleId": "applic_CVE-2023-38545",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/mount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/su"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/umount"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chfn"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/chsh"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/gpasswd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/newgrp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-4911",
          "message": {
            "text": "SETUID binaries were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/passwd"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-39325",
          "message": {
            "text": "The vulnerable function http2Server.ServeConn is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-39325",
          "message": {
            "text": "The vulnerable function http2serverConn.serve is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-39325",
          "message": {
            "text": "The vulnerable function http2serverConn.processHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-39325",
          "message": {
            "text": "The vulnerable function http2serverConn.runHandler is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-39325",
          "message": {
            "text": "The vulnerable function Server.ListenAndServe is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-39325",
          "message": {
            "text": "The vulnerable function Server.Serve is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-39325",
          "message": {
            "text": "The vulnerable function Server.ServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-39325",
          "message": {
            "text": "The vulnerable function Server.ListenAndServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/easy-add"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/restify"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4899",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the flags `--output-dir-flat` or `--output-dir-mirror` are used with the `zstd` command."
          }
        },
        {
          "ruleId": "applic_CVE-2023-0466",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `X509_VERIFY_PARAM_add0_policy()` is called.\n\nNote that calling `X509_VERIFY_PARAM_set_flags()` with the parameter `X509_V_FLAG_POLICY_CHECK` mitigates this vulnerability. The scanner currently does not check for that mitigation."
          }
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/x86_64-linux-gnu/libcurl.so.4.7.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/x86_64-linux-gnu/libcurl.so.4.7.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-0553",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if RSA decryption occurs by finding calls to any of the following functions:\n\n- `gnutls_privkey_decrypt_data`\n\n- `gnutls_privkey_decrypt_data2`\n\nAn additional condition (that the scanner does not currently check) is required for the CVE to be applicable: the RSA padding algorithm needs to be `PKCS#1`. `key-\u003epk_algorithm` needs to be equal to `GNUTLS_PK_RSA`."
          }
        },
        {
          "ruleId": "applic_CVE-2024-0567",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following vulnerable functions are called:\n\n- `gnutls_pcert_import_x509_list`\n\n- `gnutls_certificate_set_x509_key`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_mem`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_file`\n\n- `gnutls_privkey_import_url`\n\n- `gnutls_privkey_import_pkcs11_url`\n\n- `gnutls_read_key_file`\n\n- `gnutls_certificate_set_rawpk_key_file`\n\n- `gnutls_certificate_set_x509_key_file2`\n\n- `gnutls_certificate_set_x509_key_file`\n\n- `gnutls_pcert_list_import_x509_file`\n\n- `gnutls_certificate_set_x509_key_mem2`\n\n- `gnutls_certificate_set_x509_key_mem`\n\n- `gnutls_x509_crt_list_import`\n\n- `gnutls_pcert_list_import_x509_raw`\n\n- `gnutls_session_channel_binding`\n\n- `gnutls_x509_crt_list_import2`\n\n- `gnutls_x509_trust_list_add_trust_mem`\n\n- `gnutls_x509_trust_list_add_system_trust`\n\n- `gnutls_certificate_set_x509_system_trust`\n\n- `gnutls_certificate_set_x509_crl_mem`\n\n- `gnutls_certificate_set_x509_trust_mem`\n\n- `gnutls_x509_trust_list_add_trust_file`\n\n- `gnutls_certificate_set_x509_crl_file`\n\n- `gnutls_certificate_set_x509_trust_file`\n\n- `gnutls_x509_trust_list_add_trust_dir`\n\n- `gnutls_certificate_set_x509_trust_dir`\n\n- `gnutls_x509_trust_list_remove_trust_mem`\n\n- `gnutls_x509_trust_list_remove_trust_file`\n\n- `gnutls_x509_trust_list_verify_crt2`\n\n- `gnutls_x509_cert_verify_peers`\n\n- `gnutls_certificate_verify_peers`\n\n- `gnutls_certificate_verify_peers2`\n\n- `gnutls_certificate_verify_peers3`\n\n- `gnutls_pkcs7_verify`\n\n- `gnutls_ocsp_resp_verify`\n\n- `gnutls_x509_trust_list_verify_crt`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-47038",
          "kind": "pass",
          "message": {
            "text": "This CVE has no security impact (hence it is never applicable) as one of its prerequisites is arbitrary execution of Perl code, making any security impact of exploiting the vulnerability negligible since arbitrary code execution has already occurred."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45288",
          "message": {
            "text": "The vulnerable function ServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-2961",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2024-33599",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `nscd` binary exists on the machine."
          }
        },
        {
          "ruleId": "applic_CVE-2024-33600",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `nscd` binary exists on the machine."
          }
        },
        {
          "ruleId": "applic_CVE-2019-8457",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for the execution of the vulnerable SQL query `rtreenode` by searching the artifact for the vulnerable command."
          }
        },
        {
          "ruleId": "applic_CVE-2017-7245",
          "kind": "pass",
          "message": {
            "text": "The scanners check whether the `libpcre` package was compiled with the vulnerable 32-bit mode."
          }
        },
        {
          "ruleId": "applic_CVE-2017-7246",
          "kind": "pass",
          "message": {
            "text": "The scanners check whether the `libpcre` package was compiled with the vulnerable 32-bit mode."
          }
        },
        {
          "ruleId": "applic_CVE-2024-4741",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `SSL_free_buffers` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2023-44487",
          "message": {
            "text": "The vulnerable function http2Server.ServeConn is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-44487",
          "message": {
            "text": "The vulnerable function http2serverConn.serve is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-44487",
          "message": {
            "text": "The vulnerable function http2serverConn.processHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-44487",
          "message": {
            "text": "The vulnerable function http2serverConn.runHandler is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-44487",
          "message": {
            "text": "The vulnerable function Server.ListenAndServe is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-44487",
          "message": {
            "text": "The vulnerable function Server.Serve is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-44487",
          "message": {
            "text": "The vulnerable function Server.ServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-44487",
          "message": {
            "text": "The vulnerable function Server.ListenAndServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/mc-monitor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30635",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function Decoder.Decode of encoding/gob is called."
          }
        },
        {
          "ruleId": "applic_CVE-2017-11164",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/grep"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2017-11164",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/grep"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-20838",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the libpcre was compiled with JIT support.\n\nThe scanner also checks whether the following vulnerable functions are called:\n\n* `pcre_compile` \n* `pcre_exec`"
          }
        },
        {
          "ruleId": "applic_CVE-2021-33560",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `gcry_pk_decrypt()` \n* `gcry_pk_encrypt()`\n* `gcry_pk_genkey()`\n* `gcry_pk_sign()`\n\nand if the `\"elg\"` string is found.\nNote - For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that your public key's encryption algorithm must be ElGamal."
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718769455-1946289318/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718769397-3318864731/image.tar"
          }
        }
      ],
      "results": []
    }
  ]
}
