{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2024-22860_3.17:ffmpeg-libs_5.1.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-22860] 3.17:ffmpeg-libs 5.1.3-r0"
              },
              "help": {
                "text": "Integer overflow vulnerability in FFmpeg before n6.1, allows remote attackers to execute arbitrary code via the jpegxl_anim_read_packet component in the JPEG XL Animation decoder.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [20100108-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.17:ssl_client_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.17:ssl_client 1.35.0-r29"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.17:busybox-binsh_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.17:busybox-binsh 1.35.0-r29"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2024-22860_3.17:ffmpeg_5.1.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-22860] 3.17:ffmpeg 5.1.3-r0"
              },
              "help": {
                "text": "Integer overflow vulnerability in FFmpeg before n6.1, allows remote attackers to execute arbitrary code via the jpegxl_anim_read_packet component in the JPEG XL Animation decoder.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [20100108-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.17:busybox_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.17:busybox 1.35.0-r29"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2024-22862_3.17:ffmpeg-libs_5.1.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-22862] 3.17:ffmpeg-libs 5.1.3-r0"
              },
              "help": {
                "text": "Integer overflow vulnerability in FFmpeg before n6.1, allows remote attackers to execute arbitrary code via the JJPEG XL Parser.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [20100108-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2024-22862_3.17:ffmpeg_5.1.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-22862] 3.17:ffmpeg 5.1.3-r0"
              },
              "help": {
                "text": "Integer overflow vulnerability in FFmpeg before n6.1, allows remote attackers to execute arbitrary code via the JJPEG XL Parser.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [20100108-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-50472_3.17:cjson_1.7.15-r3",
              "shortDescription": {
                "text": "[CVE-2023-50472] 3.17:cjson 1.7.15-r3"
              },
              "help": {
                "text": "cJSON v1.7.16 was discovered to contain a segmentation violation via the function cJSON_SetValuestring at cJSON.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [1.7.17-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-23775_3.17:mbedtls_2.28.5-r0",
              "shortDescription": {
                "text": "[CVE-2024-23775] 3.17:mbedtls 2.28.5-r0"
              },
              "help": {
                "text": "Integer Overflow vulnerability in Mbed TLS 2.x before 2.28.7 and 3.x before 3.5.2, allows attackers to cause a denial of service (DoS) via mbedtls_x509_set_extension().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.28.7-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-47470_3.17:ffmpeg-libs_5.1.3-r0",
              "shortDescription": {
                "text": "[CVE-2023-47470] 3.17:ffmpeg-libs 5.1.3-r0"
              },
              "help": {
                "text": "Buffer Overflow vulnerability in Ffmpeg before github commit 4565747056a11356210ed8edcecb920105e40b60 allows a remote attacker to achieve an out-of-array write, execute arbitrary code, and cause a denial of service (DoS) via the ref_pic_list_struct function in libavcodec/evc_ps.c",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [6.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-47470_3.17:ffmpeg_5.1.3-r0",
              "shortDescription": {
                "text": "[CVE-2023-47470] 3.17:ffmpeg 5.1.3-r0"
              },
              "help": {
                "text": "Buffer Overflow vulnerability in Ffmpeg before github commit 4565747056a11356210ed8edcecb920105e40b60 allows a remote attacker to achieve an out-of-array write, execute arbitrary code, and cause a denial of service (DoS) via the ref_pic_list_struct function in libavcodec/evc_ps.c",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [6.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-50471_3.17:cjson_1.7.15-r3",
              "shortDescription": {
                "text": "[CVE-2023-50471] 3.17:cjson 1.7.15-r3"
              },
              "help": {
                "text": "cJSON v1.7.16 was discovered to contain a segmentation violation via the function cJSON_InsertItemInArray at cJSON.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [1.7.17-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-22861_3.17:ffmpeg_5.1.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-22861] 3.17:ffmpeg 5.1.3-r0"
              },
              "help": {
                "text": "Integer overflow vulnerability in FFmpeg before n6.1, allows attackers to cause a denial of service (DoS) via the avcodec/osq module.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [20100108-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-22861_3.17:ffmpeg-libs_5.1.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-22861] 3.17:ffmpeg-libs 5.1.3-r0"
              },
              "help": {
                "text": "Integer overflow vulnerability in FFmpeg before n6.1, allows attackers to cause a denial of service (DoS) via the avcodec/osq module.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [20100108-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-45451_3.17:mbedtls_2.28.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-45451] 3.17:mbedtls 2.28.5-r0"
              },
              "help": {
                "text": "In Mbed TLS before 3.1.0, psa_aead_generate_nonce allows policy bypass or oracle-based decryption when the output buffer is at memory locations accessible to an untrusted application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-52353_3.17:mbedtls_2.28.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-52353] 3.17:mbedtls 2.28.5-r0"
              },
              "help": {
                "text": "An issue was discovered in Mbed TLS through 3.5.1. In mbedtls_ssl_session_reset, the maximum negotiable TLS version is mishandled. For example, if the last connection negotiated TLS 1.2, then 1.2 becomes the new maximum.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-20225_pip_23.0.1",
              "shortDescription": {
                "text": "[CVE-2018-20225] pip 23.0.1"
              },
              "help": {
                "text": "An issue was discovered in pip (all versions) because it installs the version with the highest version number, even if the user had intended to obtain a private package from a private index. This only affects use of the --extra-index-url option, and exploitation requires that the package does not already exist in the public index (and thus the attacker can put the package there with an arbitrary version number). NOTE: it has been reported that this is intended functionality and the user is responsible for using --extra-index-url securely",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-43666_3.17:mbedtls_2.28.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-43666] 3.17:mbedtls 2.28.5-r0"
              },
              "help": {
                "text": "A Denial of Service vulnerability exists in mbed TLS 3.0.0 and earlier in the mbedtls_pkcs12_derivation function when an input password's length is 0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2009-2940_3.17:python3_3.10.13-r0",
              "shortDescription": {
                "text": "[CVE-2009-2940] 3.17:python3 3.10.13-r0"
              },
              "help": {
                "text": "The pygresql module 3.8.1 and 4.0 for Python does not properly support the PQescapeStringConn function, which might allow remote attackers to leverage escaping issues involving multibyte character encodings.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-44488_3.17:libvpx_1.12.0-r2",
              "shortDescription": {
                "text": "[CVE-2023-44488] 3.17:libvpx 1.12.0-r2"
              },
              "help": {
                "text": "VP9 in libvpx before 1.13.1 mishandles widths, leading to a crash related to encoding.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-23744_3.17:mbedtls_2.28.5-r0",
              "shortDescription": {
                "text": "[CVE-2024-23744] 3.17:mbedtls 2.28.5-r0"
              },
              "help": {
                "text": "An issue was discovered in Mbed TLS 3.5.1. There is persistent handshake denial if a client sends a TLS 1.3 ClientHello without extensions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-32643_3.17:glib_2.74.7-r0",
              "shortDescription": {
                "text": "[CVE-2023-32643] 3.17:glib 2.74.7-r0"
              },
              "help": {
                "text": "A flaw was found in GLib. The GVariant deserialization code is vulnerable to a heap buffer overflow introduced by the fix for CVE-2023-32665. This bug does not affect any released version of GLib, but does affect GLib distributors who followed the guidance of GLib developers to backport the initial fix for CVE-2023-32665.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-48795_3.17:libssh2_1.10.0-r3",
              "shortDescription": {
                "text": "[CVE-2023-48795] 3.17:libssh2 1.10.0-r3"
              },
              "help": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Undetermined       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [1.11.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-48795_3.17:libssh_0.10.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-48795] 3.17:libssh 0.10.5-r0"
              },
              "help": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Undetermined       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [0.10.6-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-42365_3.17:ssl_client_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.17:ssl_client 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-5678_3.17:libcrypto3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2023-5678] 3.17:libcrypto3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-0853_3.17:curl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-0853] 3.17:curl 8.4.0-r0"
              },
              "help": {
                "text": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-36647_3.17:mbedtls_2.28.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-36647] 3.17:mbedtls 2.28.5-r0"
              },
              "help": {
                "text": "Use of a Broken or Risky Cryptographic Algorithm in the function mbedtls_mpi_exp_mod() in lignum.c in Mbed TLS Mbed TLS all versions before 3.0.0, 2.27.0 or 2.16.11 allows attackers with access to precise enough timing and memory access information (typically an untrusted operating system attacking a secure enclave such as SGX or the TrustZone secure world) to recover the private keys used in RSA.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.16.12-r0]   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2023-42363_3.17:ssl_client_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.17:ssl_client 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.17:busybox-binsh_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.17:busybox-binsh 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-46407_3.17:ffmpeg-libs_5.1.3-r0",
              "shortDescription": {
                "text": "[CVE-2023-46407] 3.17:ffmpeg-libs 5.1.3-r0"
              },
              "help": {
                "text": "FFmpeg prior to commit bf814 was discovered to contain an out of bounds read via the dist-\u003ealphabet_size variable in the read_vlc_prefix() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [6.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-5981_3.17:gnutls_3.7.8-r3",
              "shortDescription": {
                "text": "[CVE-2023-5981] 3.17:gnutls 3.7.8-r3"
              },
              "help": {
                "text": "A vulnerability was found that the response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from response times of ciphertexts with correct PKCS#1 v1.5 padding.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [3.8.3-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-42364_3.17:busybox_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.17:busybox 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-46218_3.17:curl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-46218] 3.17:curl 8.4.0-r0"
              },
              "help": {
                "text": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-4039_3.17:libgomp_12.2.1_git20220924-r4",
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.17:libgomp 12.2.1_git20220924-r4"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [13.2.1_git20231014-r0]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-52426_3.17:libexpat_2.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-52426] 3.17:libexpat 2.5.0-r0"
              },
              "help": {
                "text": "libexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-5678_3.17:libssl3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2023-5678] 3.17:libssl3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-6129_3.17:libssl3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2023-6129] 3.17:libssl3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r2]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-43785_3.17:libx11_1.8.4-r1",
              "shortDescription": {
                "text": "[CVE-2023-43785] 3.17:libx11 1.8.4-r1"
              },
              "help": {
                "text": "A vulnerability was found in libX11 due to a boundary condition within the _XkbReadKeySyms() function. This flaw allows a local user to trigger an out-of-bounds read error and read the contents of memory on the system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [1.8.7-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.17:busybox_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.17:busybox 1.35.0-r29"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r30]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-22365_3.17:linux-pam_1.5.2-r1",
              "shortDescription": {
                "text": "[CVE-2024-22365] 3.17:linux-pam 1.5.2-r1"
              },
              "help": {
                "text": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-0727_3.17:libcrypto3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2024-0727] 3.17:libcrypto3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.17:ssl_client_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.17:ssl_client 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-4039_3.17:libgcc_12.2.1_git20220924-r4",
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.17:libgcc 12.2.1_git20220924-r4"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [13.2.1_git20231014-r0]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2024-0684_3.17:coreutils_9.1-r0",
              "shortDescription": {
                "text": "[CVE-2024-0684] 3.17:coreutils 9.1-r0"
              },
              "help": {
                "text": "A flaw was found in the GNU coreutils \"split\" program. A heap overflow with user-controlled data of multiple hundred bytes in length could occur in the line_bytes_split() function, potentially leading to an application crash and denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [9.4-r2]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-50246_3.17:jq_1.6-r2",
              "shortDescription": {
                "text": "[CVE-2023-50246] 3.17:jq 1.6-r2"
              },
              "help": {
                "text": "jq is a command-line JSON processor. Version 1.7 is vulnerable to heap-based buffer overflow. Version 1.7.1 contains a patch for this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-23170_3.17:mbedtls_2.28.5-r0",
              "shortDescription": {
                "text": "[CVE-2024-23170] 3.17:mbedtls 2.28.5-r0"
              },
              "help": {
                "text": "An issue was discovered in Mbed TLS 2.x before 2.28.7 and 3.x before 3.5.2. There was a timing side channel in RSA private operations. This side channel could be sufficient for a local attacker to recover the plaintext. It requires the attacker to send a large number of messages for decryption, as described in \"Everlasting ROBOT: the Marvin Attack\" by Hubert Kario.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.28.7-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-6129_3.17:libcrypto3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2023-6129] 3.17:libcrypto3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r2]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.17:busybox_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.17:busybox 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.17:busybox-binsh_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.17:busybox-binsh 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-6918_3.17:libssh_0.10.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-6918] 3.17:libssh 0.10.5-r0"
              },
              "help": {
                "text": "A flaw was found in the libssh implements abstract layer for message digest (MD) operations implemented by different supported crypto backends. The return values from these were not properly checked, which could cause low-memory situations failures, NULL dereferences, crashes, or usage of the uninitialized memory as an input for the KDF. In this case, non-matching keys will result in decryption/integrity failures, terminating the connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [0.10.6-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-46407_3.17:ffmpeg_5.1.3-r0",
              "shortDescription": {
                "text": "[CVE-2023-46407] 3.17:ffmpeg 5.1.3-r0"
              },
              "help": {
                "text": "FFmpeg prior to commit bf814 was discovered to contain an out of bounds read via the dist-\u003ealphabet_size variable in the read_vlc_prefix() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [6.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-46219_3.17:curl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-46219] 3.17:curl 8.4.0-r0"
              },
              "help": {
                "text": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-0727_3.17:libssl3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2024-0727] 3.17:libssl3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-46218_3.17:libcurl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-46218] 3.17:libcurl 8.4.0-r0"
              },
              "help": {
                "text": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-50268_3.17:jq_1.6-r2",
              "shortDescription": {
                "text": "[CVE-2023-50268] 3.17:jq 1.6-r2"
              },
              "help": {
                "text": "jq is a command-line JSON processor. Version 1.7 is vulnerable to stack-based buffer overflow in builds using decNumber. Version 1.7.1 contains a patch for this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.17:busybox-binsh_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.17:busybox-binsh 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-4039_3.17:libstdc++_12.2.1_git20220924-r4",
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.17:libstdc++ 12.2.1_git20220924-r4"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [13.2.1_git20231014-r0]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2024-0853_3.17:libcurl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-0853] 3.17:libcurl 8.4.0-r0"
              },
              "help": {
                "text": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-46219_3.17:libcurl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-46219] 3.17:libcurl 8.4.0-r0"
              },
              "help": {
                "text": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42366_3.17:busybox-binsh_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.17:busybox-binsh 1.35.0-r29"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r30]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.17:ssl_client_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.17:ssl_client 1.35.0-r29"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r30]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.17:busybox_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.17:busybox 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-2804_3.17:libjpeg-turbo_2.1.4-r0",
              "shortDescription": {
                "text": "[CVE-2023-2804] 3.17:libjpeg-turbo 2.1.4-r0"
              },
              "help": {
                "text": "A heap-based buffer overflow issue was discovered in libjpeg-turbo in h2v2_merged_upsample_internal() function of jdmrgext.c file. The vulnerability can only be exploited with 12-bit data precision for which the range of the sample data type exceeds the valid sample range, hence, an attacker could craft a 12-bit lossless JPEG image that contains out-of-range 12-bit samples. An application attempting to decompress such image using merged upsampling would lead to segmentation fault or buffer overflows, causing an application to crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.1.5.1-r4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-43786_3.17:libx11_1.8.4-r1",
              "shortDescription": {
                "text": "[CVE-2023-43786] 3.17:libx11 1.8.4-r1"
              },
              "help": {
                "text": "A vulnerability was found in libX11 due to an infinite loop within the PutSubImage() function. This flaw allows a local user to consume all available system resources and cause a denial of service condition.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [1.8.7-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2009-3720_3.17:python3_3.10.13-r0",
              "shortDescription": {
                "text": "[CVE-2009-3720] 3.17:python3 3.10.13-r0"
              },
              "help": {
                "text": "The updatePosition function in lib/xmltok_impl.c in libexpat in Expat 2.0.1, as used in Python, PyXML, w3c-libwww, and other software, allows context-dependent attackers to cause a denial of service (application crash) via an XML document with crafted UTF-8 sequences that trigger a buffer over-read, a different vulnerability than CVE-2009-2625.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2009-3767_3.17:libcrypto3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2009-3767] 3.17:libcrypto3 3.0.11-r0"
              },
              "help": {
                "text": "libraries/libldap/tls_o.c in OpenLDAP 2.2 and 2.4, and possibly other versions, when OpenSSL is used, does not properly handle a '\\0' character in a domain name in the subject's Common Name (CN) field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-27043_3.17:python3_3.10.13-r0",
              "shortDescription": {
                "text": "[CVE-2023-27043] 3.17:python3 3.10.13-r0"
              },
              "help": {
                "text": "The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email/_parseaddr.py in recent versions of Python.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2009-3767_3.17:libssl3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2009-3767] 3.17:libssl3 3.0.11-r0"
              },
              "help": {
                "text": "libraries/libldap/tls_o.c in OpenLDAP 2.2 and 2.4, and possibly other versions, when OpenSSL is used, does not properly handle a '\\0' character in a domain name in the subject's Common Name (CN) field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-4214_3.17:libpng_1.6.39-r0",
              "shortDescription": {
                "text": "[CVE-2021-4214] 3.17:libpng 1.6.39-r0"
              },
              "help": {
                "text": "A heap overflow flaw was found in libpngs' pngimage.c program. This flaw allows an attacker with local network access to pass a specially crafted PNG file to the pngimage utility, causing an application to crash, leading to a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-32570_3.17:libdav1d_1.0.0-r2",
              "shortDescription": {
                "text": "[CVE-2023-32570] 3.17:libdav1d 1.0.0-r2"
              },
              "help": {
                "text": "VideoLAN dav1d before 1.2.0 has a thread_task.c race condition that can lead to an application crash, related to dav1d_decode_frame_exit.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2016-2781_3.17:coreutils_9.1-r0",
              "shortDescription": {
                "text": "[CVE-2016-2781] 3.17:coreutils 9.1-r0"
              },
              "help": {
                "text": "chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-4016_3.17:procps_3.3.17-r2",
              "shortDescription": {
                "text": "[CVE-2023-4016] 3.17:procps 3.3.17-r2"
              },
              "help": {
                "text": "Under some circumstances, this weakness allows a user who has access to run the “ps” utility on a machine, the ability to write almost unlimited amounts of unfiltered data into the process heap.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.3.17-r3]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-29383_3.17:shadow_4.13-r0",
              "shortDescription": {
                "text": "[CVE-2023-29383] 3.17:shadow 4.13-r0"
              },
              "help": {
                "text": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [4.13-r4]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-5752_pip_23.0.1",
              "shortDescription": {
                "text": "[CVE-2023-5752] pip 23.0.1"
              },
              "help": {
                "text": "When installing a package from a Mercurial VCS URL  (ie \"pip install \nhg+...\") with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \"hg clone\" \ncall (ie \"--config\"). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren't installing from Mercurial.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [23.3]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-4016_3.17:libproc_3.3.17-r2",
              "shortDescription": {
                "text": "[CVE-2023-4016] 3.17:libproc 3.3.17-r2"
              },
              "help": {
                "text": "Under some circumstances, this weakness allows a user who has access to run the “ps” utility on a machine, the ability to write almost unlimited amounts of unfiltered data into the process heap.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.3.17-r3]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-6237_3.17:libssl3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2023-6237] 3.17:libssl3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r3]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28960_3.17:mbedtls_2.28.5-r0",
              "shortDescription": {
                "text": "[CVE-2024-28960] 3.17:mbedtls 2.28.5-r0"
              },
              "help": {
                "text": "An issue was discovered in Mbed TLS 2.18.0 through 2.28.x before 2.28.8 and 3.x before 3.6.0, and Mbed Crypto. The PSA Crypto API mishandles shared memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.28.8-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2004_3.17:libcurl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2004] 3.17:libcurl 8.4.0-r0"
              },
              "help": {
                "text": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-34397_3.17:glib_2.74.7-r0",
              "shortDescription": {
                "text": "[CVE-2024-34397] 3.17:glib 2.74.7-r0"
              },
              "help": {
                "text": "An issue was discovered in GNOME GLib before 2.78.5, and 2.79.x and 2.80.x before 2.80.1. When a GDBus-based client subscribes to signals from a trusted system service such as NetworkManager on a shared computer, other users of the same computer can send spoofed D-Bus signals that the GDBus-based client will wrongly interpret as having been sent by the trusted system service. This could lead to the GDBus-based client behaving incorrectly, with an application-dependent impact.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.80.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2004_3.17:curl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2004] 3.17:curl 8.4.0-r0"
              },
              "help": {
                "text": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2379_3.17:curl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2379] 3.17:curl 8.4.0-r0"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-0450_3.17:python3_3.10.13-r0",
              "shortDescription": {
                "text": "[CVE-2024-0450] 3.17:python3 3.10.13-r0"
              },
              "help": {
                "text": "An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe zipfile module is vulnerable to “quoted-overlap” zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [3.10.14-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28757_3.17:libexpat_2.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-28757] 3.17:libexpat 2.5.0-r0"
              },
              "help": {
                "text": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.6.2-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2466_3.17:libcurl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2466] 3.17:libcurl 8.4.0-r0"
              },
              "help": {
                "text": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-6597_3.17:python3_3.10.13-r0",
              "shortDescription": {
                "text": "[CVE-2023-6597] 3.17:python3 3.10.13-r0"
              },
              "help": {
                "text": "An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [3.10.14-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2398_3.17:libcurl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2398] 3.17:libcurl 8.4.0-r0"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2511_3.17:libssl3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2024-2511] 3.17:libssl3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r5]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2398_3.17:curl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2398] 3.17:curl 8.4.0-r0"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2511_3.17:libcrypto3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2024-2511] 3.17:libcrypto3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r5]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-4603_3.17:libcrypto3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2024-4603] 3.17:libcrypto3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.13-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-4603_3.17:libssl3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2024-4603] 3.17:libssl3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.13-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-1580_3.17:libdav1d_1.0.0-r2",
              "shortDescription": {
                "text": "[CVE-2024-1580] 3.17:libdav1d 1.0.0-r2"
              },
              "help": {
                "text": "An integer overflow in dav1d AV1 decoder that can occur when decoding videos with large frame size. This can lead to memory corruption within the AV1 decoder. We recommend upgrading past version 1.4.0 of dav1d.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [1.3.0-r1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-5197_3.17:libvpx_1.12.0-r2",
              "shortDescription": {
                "text": "[CVE-2024-5197] 3.17:libvpx 1.12.0-r2"
              },
              "help": {
                "text": "There exists interger overflows in libvpx in versions prior to 1.14.1. Calling vpx_img_alloc() with a large value of the d_w, d_h, or align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned vpx_image_t struct may be invalid. Calling vpx_img_wrap() with a large value of the d_w, d_h, or stride_align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned vpx_image_t struct may be invalid. We recommend upgrading to version 1.14.1 or beyond",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [1.14.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2379_3.17:libcurl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2379] 3.17:libcurl 8.4.0-r0"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2466_3.17:curl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2466] 3.17:curl 8.4.0-r0"
              },
              "help": {
                "text": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_3.17:libblkid_2.38.1-r1",
              "shortDescription": {
                "text": "[CVE-2024-28085] 3.17:libblkid 2.38.1-r1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.40-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_3.17:libmount_2.38.1-r1",
              "shortDescription": {
                "text": "[CVE-2024-28085] 3.17:libmount 2.38.1-r1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.40-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-6237_3.17:libcrypto3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2023-6237] 3.17:libcrypto3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r3]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28834_3.17:gnutls_3.7.8-r3",
              "shortDescription": {
                "text": "[CVE-2024-28834] 3.17:gnutls 3.7.8-r3"
              },
              "help": {
                "text": "A flaw was found in GnuTLS. The Minerva attack is a cryptographic vulnerability that exploits deterministic behavior in systems like GnuTLS, leading to side-channel leaks. In specific scenarios, such as when using the GNUTLS_PRIVKEY_FLAG_REPRODUCIBLE flag, it can result in a noticeable step in nonce size from 513 to 512 bits, exposing a potential timing side-channel.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [3.8.5-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28835_3.17:gnutls_3.7.8-r3",
              "shortDescription": {
                "text": "[CVE-2024-28835] 3.17:gnutls 3.7.8-r3"
              },
              "help": {
                "text": "A flaw has been discovered in GnuTLS where an application crash can be induced when attempting to verify a specially crafted .pem bundle using the \"certtool --verify-chain\" command.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [3.8.5-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-52071_3.17:libcurl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-52071] 3.17:libcurl 8.4.0-r0"
              },
              "help": {
                "text": "CVE-2023-52071",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-52071_3.17:curl_8.4.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-52071] 3.17:curl 8.4.0-r0"
              },
              "help": {
                "text": "CVE-2023-52071",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-6879_3.17:aom-libs_3.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-6879] 3.17:aom-libs 3.5.0-r0"
              },
              "help": {
                "text": "Increasing the resolution of video frames, while performing a multi-threaded encode, can result in a heap overflow in av1_loop_restoration_dealloc().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-43787_3.17:libx11_1.8.4-r1",
              "shortDescription": {
                "text": "[CVE-2023-43787] 3.17:libx11 1.8.4-r1"
              },
              "help": {
                "text": "A vulnerability was found in libX11 due to an integer overflow within the XCreateImage() function. This flaw allows a local user to trigger an integer overflow and execute arbitrary code with elevated privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [1.8.7-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-52425_3.17:libexpat_2.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-52425] 3.17:libexpat 2.5.0-r0"
              },
              "help": {
                "text": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [2.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-0553_3.17:gnutls_3.7.8-r3",
              "shortDescription": {
                "text": "[CVE-2024-0553] 3.17:gnutls 3.7.8-r3"
              },
              "help": {
                "text": "A vulnerability was found in GnuTLS. The response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from the response times of ciphertexts with correct PKCS#1 v1.5 padding. This issue may allow a remote attacker to perform a timing side-channel attack in the RSA-PSK key exchange, potentially leading to the leakage of sensitive data. CVE-2024-0553 is designated as an incomplete resolution for CVE-2023-5981.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [3.8.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-5363_3.17:libcrypto3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2023-5363] 3.17:libcrypto3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-0567_3.17:gnutls_3.7.8-r3",
              "shortDescription": {
                "text": "[CVE-2024-0567] 3.17:gnutls 3.7.8-r3"
              },
              "help": {
                "text": "A vulnerability was found in GnuTLS, where a cockpit (which uses gnuTLS) rejects a certificate chain with distributed trust. This issue occurs when validating a certificate chain with cockpit-certificate-ensure. This flaw allows an unauthenticated, remote client or attacker to initiate a denial of service attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [3.8.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-5363_3.17:libssl3_3.0.11-r0",
              "shortDescription": {
                "text": "[CVE-2023-5363] 3.17:libssl3 3.0.11-r0"
              },
              "help": {
                "text": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar `       | [3.0.12-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-7104_3.17:sqlite-libs_3.40.1-r0",
              "shortDescription": {
                "text": "[CVE-2023-7104] 3.17:sqlite-libs 3.40.1-r0"
              },
              "help": {
                "text": "A vulnerability was found in SQLite SQLite3 up to 3.43.0 and classified as critical. This issue affects the function sessionReadRecord of the file ext/session/sqlite3session.c of the component make alltest Handler. The manipulation leads to heap-based buffer overflow. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-248999.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [3.40.1-r1]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-2004_3.17:freetype_2.12.1-r0",
              "shortDescription": {
                "text": "[CVE-2023-2004] 3.17:freetype 2.12.1-r0"
              },
              "help": {
                "text": "An integer overflow vulnerability was discovered in Freetype in tt_hvadvance_adjust() function in src/truetype/ttgxvar.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39616_3.17:aom-libs_3.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-39616] 3.17:aom-libs 3.5.0-r0"
              },
              "help": {
                "text": "AOMedia v3.0.0 to v3.5.0 was discovered to contain an invalid read memory access via the component assign_frame_buffer_p in av1/common/av1_common_int.h.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-36632_3.17:python3_3.10.13-r0",
              "shortDescription": {
                "text": "[CVE-2023-36632] 3.17:python3 3.10.13-r0"
              },
              "help": {
                "text": "The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger \"RecursionError: maximum recursion depth exceeded while calling a Python object\" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-6004_3.17:libssh_0.10.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-6004] 3.17:libssh 0.10.5-r0"
              },
              "help": {
                "text": "A flaw was found in libssh. By utilizing the ProxyCommand or ProxyJump feature, users can exploit unchecked hostname syntax on the client. This issue may allow an attacker to inject malicious code into the command of the features mentioned through the hostname parameter.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [0.10.6-r0]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2022-40897_setuptools_65.5.0",
              "shortDescription": {
                "text": "[CVE-2022-40897] setuptools 65.5.0"
              },
              "help": {
                "text": "Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar `       | [65.5.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2024-22860_3.17:ffmpeg-libs_5.1.3-r0",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2024-22860] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.17:ssl_client_1.35.0-r29",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.17:busybox-binsh_1.35.0-r29",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22860_3.17:ffmpeg_5.1.3-r0",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2024-22860] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.17:busybox_1.35.0-r29",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22862_3.17:ffmpeg-libs_5.1.3-r0",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2024-22862] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22862_3.17:ffmpeg_5.1.3-r0",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2024-22862] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50472_3.17:cjson_1.7.15-r3",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2023-50472] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-23775_3.17:mbedtls_2.28.5-r0",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2024-23775] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-47470_3.17:ffmpeg-libs_5.1.3-r0",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2023-47470] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-47470_3.17:ffmpeg_5.1.3-r0",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2023-47470] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50471_3.17:cjson_1.7.15-r3",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2023-50471] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22861_3.17:ffmpeg_5.1.3-r0",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[CVE-2024-22861] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22861_3.17:ffmpeg-libs_5.1.3-r0",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2024-22861] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-45451_3.17:mbedtls_2.28.5-r0",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2021-45451] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52353_3.17:mbedtls_2.28.5-r0",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2023-52353] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20225_pip_23.0.1",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20225] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43666_3.17:mbedtls_2.28.5-r0",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2021-43666] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-2940_3.17:python3_3.10.13-r0",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2009-2940] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44488_3.17:libvpx_1.12.0-r2",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2023-44488] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-23744_3.17:mbedtls_2.28.5-r0",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2024-23744] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32643_3.17:glib_2.74.7-r0",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "[CVE-2023-32643] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795_3.17:libssh2_1.10.0-r3",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-48795] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795_3.17:libssh_0.10.5-r0",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-48795] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.17:ssl_client_1.35.0-r29",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678_3.17:libcrypto3_3.0.11-r0",
          "ruleIndex": 25,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-5678] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0853_3.17:curl_8.4.0-r0",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0853] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36647_3.17:mbedtls_2.28.5-r0",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36647] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.17:ssl_client_1.35.0-r29",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.17:busybox-binsh_1.35.0-r29",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46407_3.17:ffmpeg-libs_5.1.3-r0",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46407] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5981_3.17:gnutls_3.7.8-r3",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-5981] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.17:busybox_1.35.0-r29",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218_3.17:curl_8.4.0-r0",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46218] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_3.17:libgomp_12.2.1_git20220924-r4",
          "ruleIndex": 34,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52426_3.17:libexpat_2.5.0-r0",
          "ruleIndex": 35,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-52426] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678_3.17:libssl3_3.0.11-r0",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-5678] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6129_3.17:libssl3_3.0.11-r0",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-6129] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-43785_3.17:libx11_1.8.4-r1",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-43785] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.17:busybox_1.35.0-r29",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22365_3.17:linux-pam_1.5.2-r1",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-22365] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0727_3.17:libcrypto3_3.0.11-r0",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0727] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.17:ssl_client_1.35.0-r29",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_3.17:libgcc_12.2.1_git20220924-r4",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0684_3.17:coreutils_9.1-r0",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0684] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50246_3.17:jq_1.6-r2",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-50246] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-23170_3.17:mbedtls_2.28.5-r0",
          "ruleIndex": 46,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-23170] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6129_3.17:libcrypto3_3.0.11-r0",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-6129] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.17:busybox_1.35.0-r29",
          "ruleIndex": 48,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.17:busybox-binsh_1.35.0-r29",
          "ruleIndex": 49,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6918_3.17:libssh_0.10.5-r0",
          "ruleIndex": 50,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-6918] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46407_3.17:ffmpeg_5.1.3-r0",
          "ruleIndex": 51,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46407] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219_3.17:curl_8.4.0-r0",
          "ruleIndex": 52,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46219] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0727_3.17:libssl3_3.0.11-r0",
          "ruleIndex": 53,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0727] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218_3.17:libcurl_8.4.0-r0",
          "ruleIndex": 54,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46218] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50268_3.17:jq_1.6-r2",
          "ruleIndex": 55,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-50268] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.17:busybox-binsh_1.35.0-r29",
          "ruleIndex": 56,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_3.17:libstdc++_12.2.1_git20220924-r4",
          "ruleIndex": 57,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0853_3.17:libcurl_8.4.0-r0",
          "ruleIndex": 58,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0853] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219_3.17:libcurl_8.4.0-r0",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46219] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.17:busybox-binsh_1.35.0-r29",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.17:ssl_client_1.35.0-r29",
          "ruleIndex": 61,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.17:busybox_1.35.0-r29",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2804_3.17:libjpeg-turbo_2.1.4-r0",
          "ruleIndex": 63,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2804] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-43786_3.17:libx11_1.8.4-r1",
          "ruleIndex": 64,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-43786] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-3720_3.17:python3_3.10.13-r0",
          "ruleIndex": 65,
          "level": "warning",
          "message": {
            "text": "[CVE-2009-3720] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-3767_3.17:libcrypto3_3.0.11-r0",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "[CVE-2009-3767] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27043_3.17:python3_3.10.13-r0",
          "ruleIndex": 67,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27043] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-3767_3.17:libssl3_3.0.11-r0",
          "ruleIndex": 68,
          "level": "warning",
          "message": {
            "text": "[CVE-2009-3767] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-4214_3.17:libpng_1.6.39-r0",
          "ruleIndex": 69,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-4214] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32570_3.17:libdav1d_1.0.0-r2",
          "ruleIndex": 70,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-32570] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-2781_3.17:coreutils_9.1-r0",
          "ruleIndex": 71,
          "level": "warning",
          "message": {
            "text": "[CVE-2016-2781] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4016_3.17:procps_3.3.17-r2",
          "ruleIndex": 72,
          "level": "note",
          "message": {
            "text": "[CVE-2023-4016] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29383_3.17:shadow_4.13-r0",
          "ruleIndex": 73,
          "level": "note",
          "message": {
            "text": "[CVE-2023-29383] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5752_pip_23.0.1",
          "ruleIndex": 74,
          "level": "note",
          "message": {
            "text": "[CVE-2023-5752] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4016_3.17:libproc_3.3.17-r2",
          "ruleIndex": 75,
          "level": "note",
          "message": {
            "text": "[CVE-2023-4016] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6237_3.17:libssl3_3.0.11-r0",
          "ruleIndex": 76,
          "level": "none",
          "message": {
            "text": "[CVE-2023-6237] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28960_3.17:mbedtls_2.28.5-r0",
          "ruleIndex": 77,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28960] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2004_3.17:libcurl_8.4.0-r0",
          "ruleIndex": 78,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2004] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34397_3.17:glib_2.74.7-r0",
          "ruleIndex": 79,
          "level": "none",
          "message": {
            "text": "[CVE-2024-34397] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2004_3.17:curl_8.4.0-r0",
          "ruleIndex": 80,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2004] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_3.17:curl_8.4.0-r0",
          "ruleIndex": 81,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2379] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0450_3.17:python3_3.10.13-r0",
          "ruleIndex": 82,
          "level": "none",
          "message": {
            "text": "[CVE-2024-0450] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28757_3.17:libexpat_2.5.0-r0",
          "ruleIndex": 83,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28757] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2466_3.17:libcurl_8.4.0-r0",
          "ruleIndex": 84,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2466] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6597_3.17:python3_3.10.13-r0",
          "ruleIndex": 85,
          "level": "none",
          "message": {
            "text": "[CVE-2023-6597] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_3.17:libcurl_8.4.0-r0",
          "ruleIndex": 86,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_3.17:libssl3_3.0.11-r0",
          "ruleIndex": 87,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2511] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_3.17:curl_8.4.0-r0",
          "ruleIndex": 88,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_3.17:libcrypto3_3.0.11-r0",
          "ruleIndex": 89,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2511] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603_3.17:libcrypto3_3.0.11-r0",
          "ruleIndex": 90,
          "level": "none",
          "message": {
            "text": "[CVE-2024-4603] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603_3.17:libssl3_3.0.11-r0",
          "ruleIndex": 91,
          "level": "none",
          "message": {
            "text": "[CVE-2024-4603] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-1580_3.17:libdav1d_1.0.0-r2",
          "ruleIndex": 92,
          "level": "none",
          "message": {
            "text": "[CVE-2024-1580] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-5197_3.17:libvpx_1.12.0-r2",
          "ruleIndex": 93,
          "level": "none",
          "message": {
            "text": "[CVE-2024-5197] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_3.17:libcurl_8.4.0-r0",
          "ruleIndex": 94,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2379] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2466_3.17:curl_8.4.0-r0",
          "ruleIndex": 95,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2466] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_3.17:libblkid_2.38.1-r1",
          "ruleIndex": 96,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_3.17:libmount_2.38.1-r1",
          "ruleIndex": 97,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6237_3.17:libcrypto3_3.0.11-r0",
          "ruleIndex": 98,
          "level": "none",
          "message": {
            "text": "[CVE-2023-6237] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28834_3.17:gnutls_3.7.8-r3",
          "ruleIndex": 99,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28834] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28835_3.17:gnutls_3.7.8-r3",
          "ruleIndex": 100,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28835] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52071_3.17:libcurl_8.4.0-r0",
          "ruleIndex": 101,
          "level": "none",
          "message": {
            "text": "[CVE-2023-52071] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52071_3.17:curl_8.4.0-r0",
          "ruleIndex": 102,
          "level": "none",
          "message": {
            "text": "[CVE-2023-52071] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6879_3.17:aom-libs_3.5.0-r0",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "[CVE-2023-6879] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-43787_3.17:libx11_1.8.4-r1",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "[CVE-2023-43787] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52425_3.17:libexpat_2.5.0-r0",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "[CVE-2023-52425] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0553_3.17:gnutls_3.7.8-r3",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "[CVE-2024-0553] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5363_3.17:libcrypto3_3.0.11-r0",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "[CVE-2023-5363] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0567_3.17:gnutls_3.7.8-r3",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "[CVE-2024-0567] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5363_3.17:libssl3_3.0.11-r0",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "[CVE-2023-5363] sha256__b7ee09d4740ce4e0020b4137e22d6621fcf860e36c8621567f3d4f158194ce78.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7104_3.17:sqlite-libs_3.40.1-r0",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "[CVE-2023-7104] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2004_3.17:freetype_2.12.1-r0",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "[CVE-2023-2004] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39616_3.17:aom-libs_3.5.0-r0",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39616] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-36632_3.17:python3_3.10.13-r0",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "[CVE-2023-36632] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6004_3.17:libssh_0.10.5-r0",
          "ruleIndex": 114,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-6004] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40897_setuptools_65.5.0",
          "ruleIndex": 115,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-40897] sha256__99b86d1c115783fe35e2cf3759873f0793038c9307235c55f25c0e066fa4d372.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2023-36632",
              "name": "CVE-2023-36632",
              "shortDescription": {
                "text": "Scanner for CVE-2023-36632"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `parseaddr` is called with external input to its 1st (`address`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `parseaddr` is called with external input to its 1st (`address`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-52425",
              "name": "CVE-2023-52425",
              "shortDescription": {
                "text": "Scanner for CVE-2023-52425"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks.",
                "markdown": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-40897",
              "name": "CVE-2022-40897",
              "shortDescription": {
                "text": "Scanner for CVE-2022-40897"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `find_external_links` is called.\n\nNote that the scanner does not check for an additional vulnerable case in which the `pip` CLI tool is executed with the  `--editable` flag. In this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal security impact.",
                "markdown": "The scanner checks whether the vulnerable function `find_external_links` is called.\n\nNote that the scanner does not check for an additional vulnerable case in which the `pip` CLI tool is executed with the  `--editable` flag. In this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal security impact."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-2004",
              "name": "CVE-2023-2004",
              "shortDescription": {
                "text": "Scanner for CVE-2023-2004"
              },
              "fullDescription": {
                "text": "The scanner checks whether the following vulnerable functions are called:\n\n- `FT_Get_Advance`\n- `FT_Get_Advances`\n- `FT_Get_PFR_Metrics`\n- `FT_Get_PFR_Advance`\n- `FT_Load_Glyph`\n- `FT_Load_Char`",
                "markdown": "The scanner checks whether the following vulnerable functions are called:\n\n- `FT_Get_Advance`\n- `FT_Get_Advances`\n- `FT_Get_PFR_Metrics`\n- `FT_Get_PFR_Advance`\n- `FT_Load_Glyph`\n- `FT_Load_Char`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-43787",
              "name": "CVE-2023-43787",
              "shortDescription": {
                "text": "Scanner for CVE-2023-43787"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XCreateImage`\n* `XpmCreateImageFromXpmImage`\n* `XpmCreateImageFromBuffer`\n* `XpmCreateImageFromData`\n* `XpmCreatePixmapFromXpmImage`\n* `XpmCreatePixmapFromBuffer`\n* `XpmCreatePixmapFromData`\n* `XpmReadFileToImage`\n* `XpmReadFileToPixmap`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XCreateImage`\n* `XpmCreateImageFromXpmImage`\n* `XpmCreateImageFromBuffer`\n* `XpmCreateImageFromData`\n* `XpmCreatePixmapFromXpmImage`\n* `XpmCreatePixmapFromBuffer`\n* `XpmCreatePixmapFromData`\n* `XpmReadFileToImage`\n* `XpmReadFileToPixmap`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-39616",
              "name": "CVE-2023-39616",
              "shortDescription": {
                "text": "Scanner for CVE-2023-39616"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `aom_codec_encode` is called.\n\nIn order for the vulnerability to be fully applicable, the vulnerable code must also call the `aom_codec_enc_init` function with the 3rd argument struct (`config`) being set with `dropframe_thresh` == 1. This additional condition is currently not checked by the scanner.\n\nNote that the vulnerability is also exploitable through the CLI tool `aomenc` under rare conditions. However - exploitation of the CLI tool will cause it to simply crash, which has no security impact (crashing of a forked client process).",
                "markdown": "The scanner checks whether the vulnerable function `aom_codec_encode` is called.\n\nIn order for the vulnerability to be fully applicable, the vulnerable code must also call the `aom_codec_enc_init` function with the 3rd argument struct (`config`) being set with `dropframe_thresh` == 1. This additional condition is currently not checked by the scanner.\n\nNote that the vulnerability is also exploitable through the CLI tool `aomenc` under rare conditions. However - exploitation of the CLI tool will cause it to simply crash, which has no security impact (crashing of a forked client process)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-5363",
              "name": "CVE-2023-5363",
              "shortDescription": {
                "text": "Scanner for CVE-2023-5363"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following vulnerable functions are called:\n\n- `EVP_EncryptInit_ex2`\n- `EVP_DecryptInit_ex2`\n- `EVP_CipherInit_ex2`",
                "markdown": "The scanner checks if any of the following vulnerable functions are called:\n\n- `EVP_EncryptInit_ex2`\n- `EVP_DecryptInit_ex2`\n- `EVP_CipherInit_ex2`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-48795",
              "name": "CVE-2023-48795",
              "shortDescription": {
                "text": "Scanner for CVE-2023-48795"
              },
              "fullDescription": {
                "text": "The scanner looks for the OpenSSH/libssh server and client configurations in the following locations:\n\n* `/etc/ssh/sshd_config`\n* `/etc/ssh/ssh_config`\n* `~/.ssh/config`\n* `/root/.ssh/config`\n\nAnd checks if all of the following steps were taken to mitigate the vulnerability:\n\n1. Disabling/overriding the vulnerable `chacha20-poly1305` cipher, which is enabled by default.\n\n2. Turning off `AES-CBC`, unless you combine it with case 3.\n\n3. Disabling/overriding the vulnerable Message Authentication Code (MAC) algorithms, some of which are enabled by default. This is only relevant when `AES-CBC` is enabled.\n\nThe scanner currently only checks for libssh and OpenSSH attack prerequisites, even though other SSH programs may be vulnerable with different prerequisites. Therefore - the scanner either returns an Applicable result (libssh or OpenSSH are applicable) or an Undetermined result (libssh or OpenSSH are not applicable, other SSH programs may be applicable).",
                "markdown": "The scanner looks for the OpenSSH/libssh server and client configurations in the following locations:\n\n* `/etc/ssh/sshd_config`\n* `/etc/ssh/ssh_config`\n* `~/.ssh/config`\n* `/root/.ssh/config`\n\nAnd checks if all of the following steps were taken to mitigate the vulnerability:\n\n1. Disabling/overriding the vulnerable `chacha20-poly1305` cipher, which is enabled by default.\n\n2. Turning off `AES-CBC`, unless you combine it with case 3.\n\n3. Disabling/overriding the vulnerable Message Authentication Code (MAC) algorithms, some of which are enabled by default. This is only relevant when `AES-CBC` is enabled.\n\nThe scanner currently only checks for libssh and OpenSSH attack prerequisites, even though other SSH programs may be vulnerable with different prerequisites. Therefore - the scanner either returns an Applicable result (libssh or OpenSSH are applicable) or an Undetermined result (libssh or OpenSSH are not applicable, other SSH programs may be applicable)."
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "applic_CVE-2023-7104",
              "name": "CVE-2023-7104",
              "shortDescription": {
                "text": "Scanner for CVE-2023-7104"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the vulnerable functions are called -\n\n- `sqlite3_open()`\n- `sqlite3_open16()` \n- `sqlite3_open_v2()`\n\nNote that vulnerability can also be exploited for DoS when opening a database with the `sqlite3` command line utility, but in that case it would have no security impact (crashing a forked client process)",
                "markdown": "The scanner checks whether any of the vulnerable functions are called -\n\n- `sqlite3_open()`\n- `sqlite3_open16()` \n- `sqlite3_open_v2()`\n\nNote that vulnerability can also be exploited for DoS when opening a database with the `sqlite3` command line utility, but in that case it would have no security impact (crashing a forked client process)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-6004",
              "name": "CVE-2023-6004",
              "shortDescription": {
                "text": "Scanner for CVE-2023-6004"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `ProxyCommand` configuration is set with the tokens `%h` or `%r` in the ssh configuration files: `/etc/ssh/ssh_config` or `~/.ssh/config`.",
                "markdown": "The scanner checks whether the `ProxyCommand` configuration is set with the tokens `%h` or `%r` in the ssh configuration files: `/etc/ssh/ssh_config` or `~/.ssh/config`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-0553",
              "name": "CVE-2024-0553",
              "shortDescription": {
                "text": "Scanner for CVE-2024-0553"
              },
              "fullDescription": {
                "text": "The scanner checks if RSA decryption occurs by finding calls to any of the following functions:\n\n- `gnutls_privkey_decrypt_data`\n\n- `gnutls_privkey_decrypt_data2`\n\nAn additional condition (that the scanner does not currently check) is required for the CVE to be applicable: the RSA padding algorithm needs to be `PKCS#1`. `key-\u003epk_algorithm` needs to be equal to `GNUTLS_PK_RSA`.",
                "markdown": "The scanner checks if RSA decryption occurs by finding calls to any of the following functions:\n\n- `gnutls_privkey_decrypt_data`\n\n- `gnutls_privkey_decrypt_data2`\n\nAn additional condition (that the scanner does not currently check) is required for the CVE to be applicable: the RSA padding algorithm needs to be `PKCS#1`. `key-\u003epk_algorithm` needs to be equal to `GNUTLS_PK_RSA`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-0567",
              "name": "CVE-2024-0567",
              "shortDescription": {
                "text": "Scanner for CVE-2024-0567"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following vulnerable functions are called:\n\n- `gnutls_pcert_import_x509_list`\n\n- `gnutls_certificate_set_x509_key`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_mem`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_file`\n\n- `gnutls_privkey_import_url`\n\n- `gnutls_privkey_import_pkcs11_url`\n\n- `gnutls_read_key_file`\n\n- `gnutls_certificate_set_rawpk_key_file`\n\n- `gnutls_certificate_set_x509_key_file2`\n\n- `gnutls_certificate_set_x509_key_file`\n\n- `gnutls_pcert_list_import_x509_file`\n\n- `gnutls_certificate_set_x509_key_mem2`\n\n- `gnutls_certificate_set_x509_key_mem`\n\n- `gnutls_x509_crt_list_import`\n\n- `gnutls_pcert_list_import_x509_raw`\n\n- `gnutls_session_channel_binding`\n\n- `gnutls_x509_crt_list_import2`\n\n- `gnutls_x509_trust_list_add_trust_mem`\n\n- `gnutls_x509_trust_list_add_system_trust`\n\n- `gnutls_certificate_set_x509_system_trust`\n\n- `gnutls_certificate_set_x509_crl_mem`\n\n- `gnutls_certificate_set_x509_trust_mem`\n\n- `gnutls_x509_trust_list_add_trust_file`\n\n- `gnutls_certificate_set_x509_crl_file`\n\n- `gnutls_certificate_set_x509_trust_file`\n\n- `gnutls_x509_trust_list_add_trust_dir`\n\n- `gnutls_certificate_set_x509_trust_dir`\n\n- `gnutls_x509_trust_list_remove_trust_mem`\n\n- `gnutls_x509_trust_list_remove_trust_file`\n\n- `gnutls_x509_trust_list_verify_crt2`\n\n- `gnutls_x509_cert_verify_peers`\n\n- `gnutls_certificate_verify_peers`\n\n- `gnutls_certificate_verify_peers2`\n\n- `gnutls_certificate_verify_peers3`\n\n- `gnutls_pkcs7_verify`\n\n- `gnutls_ocsp_resp_verify`\n\n- `gnutls_x509_trust_list_verify_crt`",
                "markdown": "The scanner checks if any of the following vulnerable functions are called:\n\n- `gnutls_pcert_import_x509_list`\n\n- `gnutls_certificate_set_x509_key`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_mem`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_file`\n\n- `gnutls_privkey_import_url`\n\n- `gnutls_privkey_import_pkcs11_url`\n\n- `gnutls_read_key_file`\n\n- `gnutls_certificate_set_rawpk_key_file`\n\n- `gnutls_certificate_set_x509_key_file2`\n\n- `gnutls_certificate_set_x509_key_file`\n\n- `gnutls_pcert_list_import_x509_file`\n\n- `gnutls_certificate_set_x509_key_mem2`\n\n- `gnutls_certificate_set_x509_key_mem`\n\n- `gnutls_x509_crt_list_import`\n\n- `gnutls_pcert_list_import_x509_raw`\n\n- `gnutls_session_channel_binding`\n\n- `gnutls_x509_crt_list_import2`\n\n- `gnutls_x509_trust_list_add_trust_mem`\n\n- `gnutls_x509_trust_list_add_system_trust`\n\n- `gnutls_certificate_set_x509_system_trust`\n\n- `gnutls_certificate_set_x509_crl_mem`\n\n- `gnutls_certificate_set_x509_trust_mem`\n\n- `gnutls_x509_trust_list_add_trust_file`\n\n- `gnutls_certificate_set_x509_crl_file`\n\n- `gnutls_certificate_set_x509_trust_file`\n\n- `gnutls_x509_trust_list_add_trust_dir`\n\n- `gnutls_certificate_set_x509_trust_dir`\n\n- `gnutls_x509_trust_list_remove_trust_mem`\n\n- `gnutls_x509_trust_list_remove_trust_file`\n\n- `gnutls_x509_trust_list_verify_crt2`\n\n- `gnutls_x509_cert_verify_peers`\n\n- `gnutls_certificate_verify_peers`\n\n- `gnutls_certificate_verify_peers2`\n\n- `gnutls_certificate_verify_peers3`\n\n- `gnutls_pkcs7_verify`\n\n- `gnutls_ocsp_resp_verify`\n\n- `gnutls_x509_trust_list_verify_crt`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-6879",
              "name": "CVE-2023-6879",
              "shortDescription": {
                "text": "Scanner for CVE-2023-6879"
              },
              "fullDescription": {
                "text": "The scanner checks whether an encoding process is performed with the following requirements:\n\n* Using AV1 codec (`aom_codec_av1_cx()`).\n* Encoding (`aom_codec_encode()`)\n* Cleaning the memory at the end of the encoding process (`aom_codec_destroy()`).\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `aom` is configured to use more than 1 thread. For example:\n```\naom_codec_enc_cfg_t cfg;\naom_codec_enc_config_default(iface, \u0026cfg, AOM_USAGE_GOOD_QUALITY));\ncfg.g_threads = 4;\n```",
                "markdown": "The scanner checks whether an encoding process is performed with the following requirements:\n\n* Using AV1 codec (`aom_codec_av1_cx()`).\n* Encoding (`aom_codec_encode()`)\n* Cleaning the memory at the end of the encoding process (`aom_codec_destroy()`).\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `aom` is configured to use more than 1 thread. For example:\n```\naom_codec_enc_cfg_t cfg;\naom_codec_enc_config_default(iface, \u0026cfg, AOM_USAGE_GOOD_QUALITY));\ncfg.g_threads = 4;\n```"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2009-2940",
              "name": "CVE-2009-2940",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2009-2940"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-43785",
              "name": "CVE-2023-43785",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-43785"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-29383",
              "name": "CVE-2023-29383",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-29383"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-6129",
              "name": "CVE-2023-6129",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-6129"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-50471",
              "name": "CVE-2023-50471",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-50471"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28757",
              "name": "CVE-2024-28757",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28757"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-5752",
              "name": "CVE-2023-5752",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-5752"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-23744",
              "name": "CVE-2024-23744",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-23744"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-47470",
              "name": "CVE-2023-47470",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-47470"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27043",
              "name": "CVE-2023-27043",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27043"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36647",
              "name": "CVE-2021-36647",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36647"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-1580",
              "name": "CVE-2024-1580",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-1580"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20225",
              "name": "CVE-2018-20225",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20225"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-22862",
              "name": "CVE-2024-22862",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-22862"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2379",
              "name": "CVE-2024-2379",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2379"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28834",
              "name": "CVE-2024-28834",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28834"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-6237",
              "name": "CVE-2023-6237",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-6237"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28835",
              "name": "CVE-2024-28835",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28835"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-5197",
              "name": "CVE-2024-5197",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-5197"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28960",
              "name": "CVE-2024-28960",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28960"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-6597",
              "name": "CVE-2023-6597",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-6597"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-2781",
              "name": "CVE-2016-2781",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-2781"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28085",
              "name": "CVE-2024-28085",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28085"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2009-3767",
              "name": "CVE-2009-3767",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2009-3767"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-44488",
              "name": "CVE-2023-44488",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-44488"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-0684",
              "name": "CVE-2024-0684",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-0684"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-5981",
              "name": "CVE-2023-5981",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-5981"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42364",
              "name": "CVE-2023-42364",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42364"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46218",
              "name": "CVE-2023-46218",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46218"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2398",
              "name": "CVE-2024-2398",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2398"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-23170",
              "name": "CVE-2024-23170",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-23170"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-32570",
              "name": "CVE-2023-32570",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-32570"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-43666",
              "name": "CVE-2021-43666",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-43666"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2004",
              "name": "CVE-2024-2004",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2004"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-52426",
              "name": "CVE-2023-52426",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-52426"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42363",
              "name": "CVE-2023-42363",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42363"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48174",
              "name": "CVE-2022-48174",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48174"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-4603",
              "name": "CVE-2024-4603",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-4603"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-22860",
              "name": "CVE-2024-22860",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-22860"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-4016",
              "name": "CVE-2023-4016",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-4016"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-52071",
              "name": "CVE-2023-52071",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-52071"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-4214",
              "name": "CVE-2021-4214",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-4214"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46407",
              "name": "CVE-2023-46407",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46407"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-6918",
              "name": "CVE-2023-6918",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-6918"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-0853",
              "name": "CVE-2024-0853",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-0853"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-0450",
              "name": "CVE-2024-0450",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-0450"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-0727",
              "name": "CVE-2024-0727",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-0727"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-23775",
              "name": "CVE-2024-23775",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-23775"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42365",
              "name": "CVE-2023-42365",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42365"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-50268",
              "name": "CVE-2023-50268",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-50268"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-2804",
              "name": "CVE-2023-2804",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-2804"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-32643",
              "name": "CVE-2023-32643",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-32643"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-52353",
              "name": "CVE-2023-52353",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-52353"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-4039",
              "name": "CVE-2023-4039",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-4039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-45451",
              "name": "CVE-2021-45451",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-45451"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-34397",
              "name": "CVE-2024-34397",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-34397"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-43786",
              "name": "CVE-2023-43786",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-43786"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-5678",
              "name": "CVE-2023-5678",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-5678"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-22861",
              "name": "CVE-2024-22861",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-22861"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46219",
              "name": "CVE-2023-46219",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46219"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2466",
              "name": "CVE-2024-2466",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2466"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42366",
              "name": "CVE-2023-42366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-50246",
              "name": "CVE-2023-50246",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-50246"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2009-3720",
              "name": "CVE-2009-3720",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2009-3720"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-22365",
              "name": "CVE-2024-22365",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-22365"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-50472",
              "name": "CVE-2023-50472",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-50472"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2511",
              "name": "CVE-2024-2511",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2511"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718703619-715048585/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718703580-1426189352/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2023-36632",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `parseaddr` is called with external input to its 1st (`address`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2023-52425",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks."
          }
        },
        {
          "ruleId": "applic_CVE-2022-40897",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `find_external_links` is called.\n\nNote that the scanner does not check for an additional vulnerable case in which the `pip` CLI tool is executed with the  `--editable` flag. In this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal security impact."
          }
        },
        {
          "ruleId": "applic_CVE-2023-2004",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the following vulnerable functions are called:\n\n- `FT_Get_Advance`\n- `FT_Get_Advances`\n- `FT_Get_PFR_Metrics`\n- `FT_Get_PFR_Advance`\n- `FT_Load_Glyph`\n- `FT_Load_Char`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-43787",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XCreateImage`\n* `XpmCreateImageFromXpmImage`\n* `XpmCreateImageFromBuffer`\n* `XpmCreateImageFromData`\n* `XpmCreatePixmapFromXpmImage`\n* `XpmCreatePixmapFromBuffer`\n* `XpmCreatePixmapFromData`\n* `XpmReadFileToImage`\n* `XpmReadFileToPixmap`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-39616",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `aom_codec_encode` is called.\n\nIn order for the vulnerability to be fully applicable, the vulnerable code must also call the `aom_codec_enc_init` function with the 3rd argument struct (`config`) being set with `dropframe_thresh` == 1. This additional condition is currently not checked by the scanner.\n\nNote that the vulnerability is also exploitable through the CLI tool `aomenc` under rare conditions. However - exploitation of the CLI tool will cause it to simply crash, which has no security impact (crashing of a forked client process)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-5363",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following vulnerable functions are called:\n\n- `EVP_EncryptInit_ex2`\n- `EVP_DecryptInit_ex2`\n- `EVP_CipherInit_ex2`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-7104",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the vulnerable functions are called -\n\n- `sqlite3_open()`\n- `sqlite3_open16()` \n- `sqlite3_open_v2()`\n\nNote that vulnerability can also be exploited for DoS when opening a database with the `sqlite3` command line utility, but in that case it would have no security impact (crashing a forked client process)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-6004",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `ProxyCommand` configuration is set with the tokens `%h` or `%r` in the ssh configuration files: `/etc/ssh/ssh_config` or `~/.ssh/config`."
          }
        },
        {
          "ruleId": "applic_CVE-2024-0553",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if RSA decryption occurs by finding calls to any of the following functions:\n\n- `gnutls_privkey_decrypt_data`\n\n- `gnutls_privkey_decrypt_data2`\n\nAn additional condition (that the scanner does not currently check) is required for the CVE to be applicable: the RSA padding algorithm needs to be `PKCS#1`. `key-\u003epk_algorithm` needs to be equal to `GNUTLS_PK_RSA`."
          }
        },
        {
          "ruleId": "applic_CVE-2024-0567",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following vulnerable functions are called:\n\n- `gnutls_pcert_import_x509_list`\n\n- `gnutls_certificate_set_x509_key`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_mem`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_file`\n\n- `gnutls_privkey_import_url`\n\n- `gnutls_privkey_import_pkcs11_url`\n\n- `gnutls_read_key_file`\n\n- `gnutls_certificate_set_rawpk_key_file`\n\n- `gnutls_certificate_set_x509_key_file2`\n\n- `gnutls_certificate_set_x509_key_file`\n\n- `gnutls_pcert_list_import_x509_file`\n\n- `gnutls_certificate_set_x509_key_mem2`\n\n- `gnutls_certificate_set_x509_key_mem`\n\n- `gnutls_x509_crt_list_import`\n\n- `gnutls_pcert_list_import_x509_raw`\n\n- `gnutls_session_channel_binding`\n\n- `gnutls_x509_crt_list_import2`\n\n- `gnutls_x509_trust_list_add_trust_mem`\n\n- `gnutls_x509_trust_list_add_system_trust`\n\n- `gnutls_certificate_set_x509_system_trust`\n\n- `gnutls_certificate_set_x509_crl_mem`\n\n- `gnutls_certificate_set_x509_trust_mem`\n\n- `gnutls_x509_trust_list_add_trust_file`\n\n- `gnutls_certificate_set_x509_crl_file`\n\n- `gnutls_certificate_set_x509_trust_file`\n\n- `gnutls_x509_trust_list_add_trust_dir`\n\n- `gnutls_certificate_set_x509_trust_dir`\n\n- `gnutls_x509_trust_list_remove_trust_mem`\n\n- `gnutls_x509_trust_list_remove_trust_file`\n\n- `gnutls_x509_trust_list_verify_crt2`\n\n- `gnutls_x509_cert_verify_peers`\n\n- `gnutls_certificate_verify_peers`\n\n- `gnutls_certificate_verify_peers2`\n\n- `gnutls_certificate_verify_peers3`\n\n- `gnutls_pkcs7_verify`\n\n- `gnutls_ocsp_resp_verify`\n\n- `gnutls_x509_trust_list_verify_crt`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-6879",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether an encoding process is performed with the following requirements:\n\n* Using AV1 codec (`aom_codec_av1_cx()`).\n* Encoding (`aom_codec_encode()`)\n* Cleaning the memory at the end of the encoding process (`aom_codec_destroy()`).\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `aom` is configured to use more than 1 thread. For example:\n```\naom_codec_enc_cfg_t cfg;\naom_codec_enc_config_default(iface, \u0026cfg, AOM_USAGE_GOOD_QUALITY));\ncfg.g_threads = 4;\n```"
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718703619-715048585/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718703580-1426189352/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/defaults/config.ini"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 0,
                  "endLine": 205,
                  "endColumn": 0,
                  "snippet": {
                    "text": "son************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/headphones/cache.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 0,
                  "endLine": 22,
                  "endColumn": 0,
                  "snippet": {
                    "text": "LAS************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/headphones/lastfm.py"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 0,
                  "endLine": 26,
                  "endColumn": 0,
                  "snippet": {
                    "text": "APP************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/headphones/notifiers.py"
                },
                "region": {
                  "startLine": 675,
                  "startColumn": 17,
                  "endLine": 675,
                  "endColumn": 17,
                  "snippet": {
                    "text": "app************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/headphones/notifiers.py"
                },
                "region": {
                  "startLine": 724,
                  "startColumn": 13,
                  "endLine": 724,
                  "endColumn": 13,
                  "snippet": {
                    "text": "con************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/headphones/searcher.py"
                },
                "region": {
                  "startLine": 579,
                  "startColumn": 13,
                  "endLine": 579,
                  "endColumn": 13,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/headphones/webserve.py"
                },
                "region": {
                  "startLine": 1521,
                  "startColumn": 16,
                  "endLine": 1521,
                  "endColumn": 16,
                  "snippet": {
                    "text": "new************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/headphones/webserve.py"
                },
                "region": {
                  "startLine": 1536,
                  "startColumn": 16,
                  "endLine": 1536,
                  "endColumn": 16,
                  "snippet": {
                    "text": "tor************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/beetsplug/beatport.py"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 13,
                  "endLine": 274,
                  "endColumn": 13,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/beetsplug/beatport.py"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 13,
                  "endLine": 275,
                  "endColumn": 13,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/beetsplug/chroma.py"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 0,
                  "endLine": 30,
                  "endColumn": 0,
                  "snippet": {
                    "text": "API************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/beetsplug/discogs.py"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 0,
                  "endLine": 39,
                  "endColumn": 0,
                  "snippet": {
                    "text": "API************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/beetsplug/discogs.py"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 0,
                  "endLine": 40,
                  "endColumn": 0,
                  "snippet": {
                    "text": "API************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/beetsplug/spotify.py"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 17,
                  "endLine": 65,
                  "endColumn": 17,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/oauthlib/oauth1/rfc5849/parameters.py"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 12,
                  "endLine": 30,
                  "endColumn": 12,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/oauthlib/oauth1/rfc5849/parameters.py"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 12,
                  "endLine": 31,
                  "endColumn": 12,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/oauthlib/oauth2/rfc6749/clients/mobile_application.py"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 17,
                  "endLine": 148,
                  "endColumn": 17,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/oauthlib/oauth2/rfc6749/parameters.py"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 13,
                  "endLine": 390,
                  "endColumn": 13,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/oauthlib/oauth2/rfc6749/parameters.py"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 13,
                  "endLine": 393,
                  "endColumn": 13,
                  "snippet": {
                    "text": "ref************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/oauthlib/oauth2/rfc6749/request_validator.py"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 17,
                  "endLine": 331,
                  "endColumn": 17,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/oauthlib/oauth2/rfc6749/request_validator.py"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 17,
                  "endLine": 334,
                  "endColumn": 17,
                  "snippet": {
                    "text": "ref************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 13,
                  "endLine": 235,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 13,
                  "endLine": 236,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 13,
                  "endLine": 250,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 13,
                  "endLine": 251,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 13,
                  "endLine": 282,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 13,
                  "endLine": 283,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 13,
                  "endLine": 309,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 13,
                  "endLine": 310,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 13,
                  "endLine": 315,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 13,
                  "endLine": 316,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 13,
                  "endLine": 339,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 13,
                  "endLine": 340,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 9,
                  "endLine": 79,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 9,
                  "endLine": 80,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 9,
                  "endLine": 91,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 9,
                  "endLine": 92,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 9,
                  "endLine": 97,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 9,
                  "endLine": 98,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 9,
                  "endLine": 239,
                  "endColumn": 9,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 9,
                  "endLine": 241,
                  "endColumn": 9,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 9,
                  "endLine": 254,
                  "endColumn": 9,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp6p_1axas/unpacked/filesystem/blobs/sha256/ca12d86ec93b008126c367040fe389444cf26867873ec64212182fcbee9963a5/app/headphones/lib/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 5,
                  "endLine": 85,
                  "endColumn": 5,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
