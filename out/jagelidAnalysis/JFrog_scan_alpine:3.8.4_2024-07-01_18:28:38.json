{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2018-1000517_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2018-1000517] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "BusyBox project BusyBox wget version prior to commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e contains a Buffer Overflow vulnerability in Busybox wget that can result in heap buffer overflow. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in after commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-1000517_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2018-1000517] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "BusyBox project BusyBox wget version prior to commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e contains a Buffer Overflow vulnerability in Busybox wget that can result in heap buffer overflow. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in after commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-46880_3.8:libressl2.7-libcrypto_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-46880] 3.8:libressl2.7-libcrypto 2.7.5-r0"
              },
              "help": {
                "text": "x509/x509_verify.c in LibreSSL before 3.4.2, and OpenBSD before 7.0 errata 006, allows authentication bypass because an error for an unverified certificate chain is sometimes discarded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-35784_3.8:libressl2.7-libssl_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-35784] 3.8:libressl2.7-libssl 2.7.5-r0"
              },
              "help": {
                "text": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-46880_3.8:libressl2.7-libtls_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-46880] 3.8:libressl2.7-libtls 2.7.5-r0"
              },
              "help": {
                "text": "x509/x509_verify.c in LibreSSL before 3.4.2, and OpenBSD before 7.0 errata 006, allows authentication bypass because an error for an unverified certificate chain is sometimes discarded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-35784_3.8:libressl2.7-libtls_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-35784] 3.8:libressl2.7-libtls 2.7.5-r0"
              },
              "help": {
                "text": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-46880_3.8:libressl2.7-libssl_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-46880] 3.8:libressl2.7-libssl 2.7.5-r0"
              },
              "help": {
                "text": "x509/x509_verify.c in LibreSSL before 3.4.2, and OpenBSD before 7.0 errata 006, allows authentication bypass because an error for an unverified certificate chain is sometimes discarded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-35784_3.8:libressl2.7-libcrypto_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-35784] 3.8:libressl2.7-libcrypto 2.7.5-r0"
              },
              "help": {
                "text": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-36159_3.8:apk-tools_2.10.1-r0",
              "shortDescription": {
                "text": "[CVE-2021-36159] 3.8:apk-tools 2.10.1-r0"
              },
              "help": {
                "text": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [2.12.6-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-14697_3.8:musl_1.1.19-r10",
              "shortDescription": {
                "text": "[CVE-2019-14697] 3.8:musl 1.1.19-r10"
              },
              "help": {
                "text": "musl libc through 1.1.23 has an x87 floating-point stack adjustment imbalance, related to the math/i386/ directory. In some cases, use of this library could introduce out-of-bounds writes that are not present in an application's source code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.1.19-r11]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14697_3.8:musl-utils_1.1.19-r10",
              "shortDescription": {
                "text": "[CVE-2019-14697] 3.8:musl-utils 1.1.19-r10"
              },
              "help": {
                "text": "musl libc through 1.1.23 has an x87 floating-point stack adjustment imbalance, related to the math/i386/ directory. In some cases, use of this library could introduce out-of-bounds writes that are not present in an application's source code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.1.19-r11]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-42383_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42383] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42383_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42383] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-28391_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-28391] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.35.0-r7]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-42380_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42380] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-30139_3.8:apk-tools_2.10.1-r0",
              "shortDescription": {
                "text": "[CVE-2021-30139] 3.8:apk-tools 2.10.1-r0"
              },
              "help": {
                "text": "In Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [2.12.5-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42380_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42380] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-0778_3.8:libressl2.7-libcrypto_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.8:libressl2.7-libcrypto 2.7.5-r0"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [3.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-20679_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2018-20679] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "An issue was discovered in BusyBox before 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP server, client, and relay) allows a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to verification in udhcp_get_option() in networking/udhcp/common.c that 4-byte options are indeed 4 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.29.3-r10]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42381_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42381] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-30065_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-30065] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.35.0-r17]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-42384_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42384] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42385_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42385] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-30065_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-30065] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.35.0-r17]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-42382_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42382] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42385_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42385] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42386_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42386] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2019-5747_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2019-5747] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "An issue was discovered in BusyBox through 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP client, server, and/or relay) might allow a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to assurance of a 4-byte length when decoding DHCP_SUBNET. NOTE: this issue exists because of an incomplete fix for CVE-2018-20679.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.30.1-r2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42382_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42382] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42378_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42378] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42381_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42381] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42386_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42386] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42379_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42379] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42384_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42384] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-0778_3.8:libressl2.7-libtls_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.8:libressl2.7-libtls 2.7.5-r0"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [3.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28391_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2022-28391] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.35.0-r7]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-0778_3.8:libressl2.7-libssl_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.8:libressl2.7-libssl 2.7.5-r0"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [3.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-5747_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2019-5747] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "An issue was discovered in BusyBox through 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP client, server, and/or relay) might allow a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to assurance of a 4-byte length when decoding DHCP_SUBNET. NOTE: this issue exists because of an incomplete fix for CVE-2018-20679.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.30.1-r2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42378_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42378] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-28831_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-28831] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.33.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-28831_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-28831] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.33.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42379_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42379] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2018-20679_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2018-20679] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "An issue was discovered in BusyBox before 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP server, client, and relay) allows a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to verification in udhcp_get_option() in networking/udhcp/common.c that 4-byte options are indeed 4 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.29.3-r10]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42374_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42374] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42366_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.36.1-r25]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42374_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42374] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-28928_3.8:musl_1.1.19-r10",
              "shortDescription": {
                "text": "[CVE-2020-28928] 3.8:musl 1.1.19-r10"
              },
              "help": {
                "text": "In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and source character limit, as demonstrated by an invalid write access (buffer overflow).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.2.2_pre2-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42375_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42375] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42375_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42375] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-28928_3.8:musl-utils_1.1.19-r10",
              "shortDescription": {
                "text": "[CVE-2020-28928] 3.8:musl-utils 1.1.19-r10"
              },
              "help": {
                "text": "In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and source character limit, as demonstrated by an invalid write access (buffer overflow).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.2.2_pre2-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.36.1-r27]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.36.1-r27]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.36.1-r25]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-1971_3.8:libressl2.7-libtls_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.8:libressl2.7-libtls 2.7.5-r0"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-1971_3.8:libressl2.7-libcrypto_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.8:libressl2.7-libcrypto 2.7.5-r0"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-42365_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-1971_3.8:libressl2.7-libssl_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.8:libressl2.7-libssl 2.7.5-r0"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-41581_3.8:libressl2.7-libssl_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-41581] 3.8:libressl2.7-libssl 2.7.5-r0"
              },
              "help": {
                "text": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-48437_3.8:libressl2.7-libtls_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-48437] 3.8:libressl2.7-libtls 2.7.5-r0"
              },
              "help": {
                "text": "An issue was discovered in x509/x509_verify.c in LibreSSL before 3.6.1, and in OpenBSD before 7.2 errata 001. x509_verify_ctx_add_chain does not store errors that occur during leaf certificate verification, and therefore an incorrect error is returned. This behavior occurs when there is an installed verification callback that instructs the verifier to continue upon detecting an invalid certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-41581_3.8:libressl2.7-libtls_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-41581] 3.8:libressl2.7-libtls 2.7.5-r0"
              },
              "help": {
                "text": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-41581_3.8:libressl2.7-libcrypto_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-41581] 3.8:libressl2.7-libcrypto 2.7.5-r0"
              },
              "help": {
                "text": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-48437_3.8:libressl2.7-libssl_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-48437] 3.8:libressl2.7-libssl 2.7.5-r0"
              },
              "help": {
                "text": "An issue was discovered in x509/x509_verify.c in LibreSSL before 3.6.1, and in OpenBSD before 7.2 errata 001. x509_verify_ctx_add_chain does not store errors that occur during leaf certificate verification, and therefore an incorrect error is returned. This behavior occurs when there is an installed verification callback that instructs the verifier to continue upon detecting an invalid certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-42376_3.8:busybox_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42376] 3.8:busybox 1.28.4-r3"
              },
              "help": {
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42376_3.8:ssl_client_1.28.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-42376] 3.8:ssl_client 1.28.4-r3"
              },
              "help": {
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-48437_3.8:libressl2.7-libcrypto_2.7.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-48437] 3.8:libressl2.7-libcrypto 2.7.5-r0"
              },
              "help": {
                "text": "An issue was discovered in x509/x509_verify.c in LibreSSL before 3.6.1, and in OpenBSD before 7.2 errata 001. x509_verify_ctx_add_chain does not store errors that occur during leaf certificate verification, and therefore an incorrect error is returned. This behavior occurs when there is an installed verification callback that instructs the verifier to continue upon detecting an invalid certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-37434_3.8:zlib_1.2.11-r1",
              "shortDescription": {
                "text": "[CVE-2022-37434] 3.8:zlib 1.2.11-r1"
              },
              "help": {
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.2.12-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-25032_3.8:zlib_1.2.11-r1",
              "shortDescription": {
                "text": "[CVE-2018-25032] 3.8:zlib 1.2.11-r1"
              },
              "help": {
                "text": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar `       | [1.2.11-r4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            }
          ],
          "version": "3.97.3"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2018-1000517_3.8:busybox_1.28.4-r3",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000517] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000517_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000517] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46880_3.8:libressl2.7-libcrypto_2.7.5-r0",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46880] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.8:busybox_1.28.4-r3",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35784_3.8:libressl2.7-libssl_2.7.5-r0",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35784] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46880_3.8:libressl2.7-libtls_2.7.5-r0",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46880] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35784_3.8:libressl2.7-libtls_2.7.5-r0",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35784] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46880_3.8:libressl2.7-libssl_2.7.5-r0",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46880] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35784_3.8:libressl2.7-libcrypto_2.7.5-r0",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35784] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36159_3.8:apk-tools_2.10.1-r0",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2021-36159] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14697_3.8:musl_1.1.19-r10",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14697] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14697_3.8:musl-utils_1.1.19-r10",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14697] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42383_3.8:busybox_1.28.4-r3",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42383] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42383_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42383] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28391_3.8:busybox_1.28.4-r3",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28391] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42380_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42380] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-30139_3.8:apk-tools_2.10.1-r0",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2021-30139] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42380_3.8:busybox_1.28.4-r3",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42380] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.8:libressl2.7-libcrypto_2.7.5-r0",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20679_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20679] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42381_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42381] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30065] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42384_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42384] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42385_3.8:busybox_1.28.4-r3",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42385] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065_3.8:busybox_1.28.4-r3",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30065] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42382_3.8:busybox_1.28.4-r3",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42382] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42385_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42385] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42386_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42386] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5747_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5747] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42382_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42382] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42378_3.8:busybox_1.28.4-r3",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42378] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42381_3.8:busybox_1.28.4-r3",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42381] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42386_3.8:busybox_1.28.4-r3",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42386] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42379_3.8:busybox_1.28.4-r3",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42379] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42384_3.8:busybox_1.28.4-r3",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42384] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.8:libressl2.7-libtls_2.7.5-r0",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28391_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28391] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.8:libressl2.7-libssl_2.7.5-r0",
          "ruleIndex": 38,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5747_3.8:busybox_1.28.4-r3",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5747] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42378_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42378] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28831_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 41,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28831] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28831_3.8:busybox_1.28.4-r3",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28831] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42379_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 43,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42379] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20679_3.8:busybox_1.28.4-r3",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20679] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42374_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 46,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42374] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42374_3.8:busybox_1.28.4-r3",
          "ruleIndex": 48,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42374] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28928_3.8:musl_1.1.19-r10",
          "ruleIndex": 49,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-28928] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42375_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 50,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42375] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42375_3.8:busybox_1.28.4-r3",
          "ruleIndex": 51,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42375] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28928_3.8:musl-utils_1.1.19-r10",
          "ruleIndex": 52,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-28928] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 53,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.8:busybox_1.28.4-r3",
          "ruleIndex": 54,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.8:busybox_1.28.4-r3",
          "ruleIndex": 55,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.8:libressl2.7-libtls_2.7.5-r0",
          "ruleIndex": 56,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.8:libressl2.7-libcrypto_2.7.5-r0",
          "ruleIndex": 57,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.8:busybox_1.28.4-r3",
          "ruleIndex": 58,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.8:busybox_1.28.4-r3",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.8:libressl2.7-libssl_2.7.5-r0",
          "ruleIndex": 61,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41581_3.8:libressl2.7-libssl_2.7.5-r0",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-41581] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48437_3.8:libressl2.7-libtls_2.7.5-r0",
          "ruleIndex": 63,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48437] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41581_3.8:libressl2.7-libtls_2.7.5-r0",
          "ruleIndex": 64,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-41581] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41581_3.8:libressl2.7-libcrypto_2.7.5-r0",
          "ruleIndex": 65,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-41581] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48437_3.8:libressl2.7-libssl_2.7.5-r0",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48437] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42376_3.8:busybox_1.28.4-r3",
          "ruleIndex": 67,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42376] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42376_3.8:ssl_client_1.28.4-r3",
          "ruleIndex": 68,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42376] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48437_3.8:libressl2.7-libcrypto_2.7.5-r0",
          "ruleIndex": 69,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48437] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37434_3.8:zlib_1.2.11-r1",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "[CVE-2022-37434] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-25032_3.8:zlib_1.2.11-r1",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "[CVE-2018-25032] sha256__d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2018-1000517",
              "name": "CVE-2018-1000517",
              "shortDescription": {
                "text": "Scanner for CVE-2018-1000517"
              },
              "fullDescription": {
                "text": "The scanner checks whether the BusyBox binary supports `wget`.\n\nNote: The scanner does not check whether busybox's `wget` is executed in the image. To confirm the applicability, this should also be verified.",
                "markdown": "The scanner checks whether the BusyBox binary supports `wget`.\n\nNote: The scanner does not check whether busybox's `wget` is executed in the image. To confirm the applicability, this should also be verified."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-25032",
              "name": "CVE-2018-25032",
              "shortDescription": {
                "text": "Scanner for CVE-2018-25032"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `deflateInit2` is called.",
                "markdown": "The scanner checks whether the vulnerable function `deflateInit2` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-37434",
              "name": "CVE-2022-37434",
              "shortDescription": {
                "text": "Scanner for CVE-2022-37434"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14697",
              "name": "CVE-2019-14697",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-14697"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5747",
              "name": "CVE-2019-5747",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5747"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-28831",
              "name": "CVE-2021-28831",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-28831"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42378",
              "name": "CVE-2021-42378",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42378"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20679",
              "name": "CVE-2018-20679",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20679"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30065",
              "name": "CVE-2022-30065",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30065"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36159",
              "name": "CVE-2021-36159",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36159"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-46880",
              "name": "CVE-2021-46880",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-46880"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42366",
              "name": "CVE-2023-42366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-30139",
              "name": "CVE-2021-30139",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-30139"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-1971",
              "name": "CVE-2020-1971",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-1971"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42383",
              "name": "CVE-2021-42383",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42383"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-28391",
              "name": "CVE-2022-28391",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-28391"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42385",
              "name": "CVE-2021-42385",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42385"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42376",
              "name": "CVE-2021-42376",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42376"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42386",
              "name": "CVE-2021-42386",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42386"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42365",
              "name": "CVE-2023-42365",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42365"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42374",
              "name": "CVE-2021-42374",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42374"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-0778",
              "name": "CVE-2022-0778",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0778"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42375",
              "name": "CVE-2021-42375",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42375"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42381",
              "name": "CVE-2021-42381",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42381"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42363",
              "name": "CVE-2023-42363",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42363"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-35784",
              "name": "CVE-2023-35784",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-35784"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42380",
              "name": "CVE-2021-42380",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42380"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42364",
              "name": "CVE-2023-42364",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42364"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42379",
              "name": "CVE-2021-42379",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42379"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28928",
              "name": "CVE-2020-28928",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28928"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42382",
              "name": "CVE-2021-42382",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42382"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-41581",
              "name": "CVE-2021-41581",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-41581"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42384",
              "name": "CVE-2021-42384",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42384"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48174",
              "name": "CVE-2022-48174",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48174"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48437",
              "name": "CVE-2022-48437",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48437"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1719858540-1655093516/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1719858518-2137129313/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2018-1000517",
          "message": {
            "text": "The vulnerable `BusyBox` containing `wget` tool is present"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/busybox"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-25032",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `deflateInit2` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called."
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1719858540-1655093516/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1719858518-2137129313/image.tar"
          }
        }
      ],
      "results": []
    }
  ]
}
