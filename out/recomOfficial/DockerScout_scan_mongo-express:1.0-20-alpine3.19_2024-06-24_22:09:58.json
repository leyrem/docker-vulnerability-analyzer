{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Docker Scout",
          "informationUri": "https://docker.com/products/docker-scout",
          "name": "docker scout",
          "rules": [
            {
              "id": "CVE-2024-27088",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-27088: Inefficient Regular Expression Complexity"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-27088?s=github&n=es5-ext&t=npm&vr=%3E%3D0.10.0%2C%3C0.10.63",
              "help": {
                "text": "### Impact\n\nPassing functions with very long names or complex default argument names into `function#copy` or`function#toStringTokens` may put script to stall\n\n### Patches\nFixed with https://github.com/medikoo/es5-ext/commit/3551cdd7b2db08b1632841f819d008757d28e8e2 and https://github.com/medikoo/es5-ext/commit/a52e95736690ad1d465ebcd9791d54570e294602\nPublished with v0.10.63\n\n### Workarounds\nNo real workaround aside of refraining from using above utilities.\n\n### References\nhttps://github.com/medikoo/es5-ext/issues/201\n\n",
                "markdown": "> ### Impact\n\nPassing functions with very long names or complex default argument names into `function#copy` or`function#toStringTokens` may put script to stall\n\n### Patches\nFixed with https://github.com/medikoo/es5-ext/commit/3551cdd7b2db08b1632841f819d008757d28e8e2 and https://github.com/medikoo/es5-ext/commit/a52e95736690ad1d465ebcd9791d54570e294602\nPublished with v0.10.63\n\n### Workarounds\nNo real workaround aside of refraining from using above utilities.\n\n### References\nhttps://github.com/medikoo/es5-ext/issues/201\n\n\n|                |                         |\n|----------------|-------------------------|\n| Package        | pkg:npm/es5-ext@0.10.62 |\n| Affected range | >=0.10.0,<0.10.63       |\n| Fixed version  | 0.10.63                 |\n"
              },
              "properties": {
                "affected_version": ">=0.10.0,<0.10.63",
                "cvssV3_severity": "LOW",
                "fixed_version": "0.10.63",
                "purls": [
                  "pkg:npm/es5-ext@0.10.62"
                ],
                "security-severity": "3.1",
                "tags": [
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-42282",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-42282: Server-Side Request Forgery (SSRF)"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-42282?s=github&n=ip&t=npm&vr=%3E%3D2.0.0%2C%3C2.0.1",
              "help": {
                "text": "The `isPublic()` function in the NPM package `ip` doesn't correctly identify certain private IP addresses in uncommon formats such as `0x7F.1` as private. Instead, it reports them as public by returning `true`. This can lead to security issues such as Server-Side Request Forgery (SSRF) if `isPublic()` is used to protect sensitive code paths when passed user input. Versions 1.1.9 and 2.0.1 fix the issue.\n",
                "markdown": "> The `isPublic()` function in the NPM package `ip` doesn't correctly identify certain private IP addresses in uncommon formats such as `0x7F.1` as private. Instead, it reports them as public by returning `true`. This can lead to security issues such as Server-Side Request Forgery (SSRF) if `isPublic()` is used to protect sensitive code paths when passed user input. Versions 1.1.9 and 2.0.1 fix the issue.\n\n|                |                  |\n|----------------|------------------|\n| Package        | pkg:npm/ip@2.0.0 |\n| Affected range | >=2.0.0,<2.0.1   |\n| Fixed version  | 2.0.1            |\n"
              },
              "properties": {
                "affected_version": ">=2.0.0,<2.0.1",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "2.0.1",
                "purls": [
                  "pkg:npm/ip@2.0.0"
                ],
                "security-severity": "4.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-52555",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-52555: Cross-Site Request Forgery (CSRF)"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-52555?s=github&n=mongo-express&t=npm&vr=%3C%3D1.0.2",
              "help": {
                "text": "In mongo-express 1.0.2, /admin allows CSRF, as demonstrated by deletion of a Collection.\n",
                "markdown": "> In mongo-express 1.0.2, /admin allows CSRF, as demonstrated by deletion of a Collection.\n\n|                |                             |\n|----------------|-----------------------------|\n| Package        | pkg:npm/mongo-express@1.0.2 |\n| Affected range | <=1.0.2                     |\n| Fixed version  | not fixed                   |\n"
              },
              "properties": {
                "affected_version": "<=1.0.2",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:npm/mongo-express@1.0.2"
                ],
                "security-severity": "4.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-32050",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-32050: Exposure of Sensitive Information to an Unauthorized Actor"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-32050?s=github&n=mongodb&t=npm&vr=%3E%3D4.0.0%2C%3C4.17.0",
              "help": {
                "text": "Some MongoDB Drivers may erroneously publish events containing authentication-related data to a command listener configured by an application. The published events may contain security-sensitive data when specific authentication-related commands are executed.\n\nWithout due care, an application may inadvertently expose this sensitive information, e.g., by writing it to a log file. This issue only arises if an application enables the command listener feature (this is not enabled by default).\n\nThis issue affects the MongoDB C Driver 1.0.0 prior to 1.17.7, MongoDB PHP Driver 1.0.0 prior to 1.9.2, MongoDB Swift Driver 1.0.0 prior to 1.1.1, MongoDB Node.js Driver 3.6 prior to 3.6.10, MongoDB Node.js Driver 4.0 prior to 4.17.0 and MongoDB Node.js Driver 5.0 prior to 5.8.0. This issue also affects users of the MongoDB C++ Driver dependent on the C driver 1.0.0 prior to 1.17.7 (C++ driver prior to 3.7.0).\n\n\n",
                "markdown": "> Some MongoDB Drivers may erroneously publish events containing authentication-related data to a command listener configured by an application. The published events may contain security-sensitive data when specific authentication-related commands are executed.\n\nWithout due care, an application may inadvertently expose this sensitive information, e.g., by writing it to a log file. This issue only arises if an application enables the command listener feature (this is not enabled by default).\n\nThis issue affects the MongoDB C Driver 1.0.0 prior to 1.17.7, MongoDB PHP Driver 1.0.0 prior to 1.9.2, MongoDB Swift Driver 1.0.0 prior to 1.1.1, MongoDB Node.js Driver 3.6 prior to 3.6.10, MongoDB Node.js Driver 4.0 prior to 4.17.0 and MongoDB Node.js Driver 5.0 prior to 5.8.0. This issue also affects users of the MongoDB C++ Driver dependent on the C driver 1.0.0 prior to 1.17.7 (C++ driver prior to 3.7.0).\n\n\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/mongodb@4.13.0                       |\n| Affected range | >=4.0.0,<4.17.0                              |\n| Fixed version  | 4.17.0                                       |\n| CVSS Score     |                                          4.2 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:N/A:N |\n"
              },
              "properties": {
                "affected_version": ">=4.0.0,<4.17.0",
                "cvssV3": 4.2,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:N/A:N",
                "fixed_version": "4.17.0",
                "purls": [
                  "pkg:npm/mongodb@4.13.0"
                ],
                "security-severity": "4.2",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-25883",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-25883: Inefficient Regular Expression Complexity"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-25883?s=github&n=semver&t=npm&vr=%3E%3D6.0.0%2C%3C6.3.1",
              "help": {
                "text": "Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\n",
                "markdown": "> Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/semver@6.3.0                         |\n| Affected range | >=6.0.0,<6.3.1                               |\n| Fixed version  | 6.3.1                                        |\n| CVSS Score     |                                          5.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L |\n"
              },
              "properties": {
                "affected_version": ">=6.0.0,<6.3.1",
                "cvssV3": 5.3,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                "fixed_version": "6.3.1",
                "purls": [
                  "pkg:npm/semver@6.3.0"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-29041",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-29041: Improper Validation of Syntactic Correctness of Input"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-29041?s=github&n=express&t=npm&vr=%3C4.19.2",
              "help": {
                "text": "### Impact\n\nVersions of Express.js prior to 4.19.2 and pre-release alpha and beta versions before 5.0.0-beta.3 are affected by an open redirect vulnerability using malformed URLs.\n\nWhen a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list.\n\nThe main method impacted is `res.location()` but this is also called from within `res.redirect()`.\n\n### Patches\n\nhttps://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd\nhttps://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94\n\nAn initial fix went out with `express@4.19.0`, we then patched a feature regression in `4.19.1` and added improved handling for the bypass in `4.19.2`.\n\n### Workarounds\n\nThe fix for this involves pre-parsing the url string with either `require('node:url').parse` or `new URL`. These are steps you can take on your own before passing the user input string to `res.location` or `res.redirect`.\n\n### References\n\nhttps://github.com/expressjs/express/pull/5539\nhttps://github.com/koajs/koa/issues/1800\nhttps://expressjs.com/en/4x/api.html#res.location\n",
                "markdown": "> ### Impact\n\nVersions of Express.js prior to 4.19.2 and pre-release alpha and beta versions before 5.0.0-beta.3 are affected by an open redirect vulnerability using malformed URLs.\n\nWhen a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list.\n\nThe main method impacted is `res.location()` but this is also called from within `res.redirect()`.\n\n### Patches\n\nhttps://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd\nhttps://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94\n\nAn initial fix went out with `express@4.19.0`, we then patched a feature regression in `4.19.1` and added improved handling for the bypass in `4.19.2`.\n\n### Workarounds\n\nThe fix for this involves pre-parsing the url string with either `require('node:url').parse` or `new URL`. These are steps you can take on your own before passing the user input string to `res.location` or `res.redirect`.\n\n### References\n\nhttps://github.com/expressjs/express/pull/5539\nhttps://github.com/koajs/koa/issues/1800\nhttps://expressjs.com/en/4x/api.html#res.location\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/express@4.18.2                       |\n| Affected range | <4.19.2                                      |\n| Fixed version  | 4.19.2                                       |\n| CVSS Score     |                                          6.1 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N |\n"
              },
              "properties": {
                "affected_version": "<4.19.2",
                "cvssV3": 6.1,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "fixed_version": "4.19.2",
                "purls": [
                  "pkg:npm/express@4.18.2"
                ],
                "security-severity": "6.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-26920",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-26920: Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-26920?s=github&n=fast-xml-parser&t=npm&vr=%3C4.1.2",
              "help": {
                "text": "### Impact\nAs a part of this vulnerability, user was able to se code using `__proto__` as a tag or attribute name.\n\n```js\nconst { XMLParser, XMLBuilder, XMLValidator} = require(\"fast-xml-parser\");\n\nlet XMLdata = \"<__proto__><polluted>hacked</polluted></__proto__>\"\n\nconst parser = new XMLParser();\nlet jObj = parser.parse(XMLdata);\n\nconsole.log(jObj.polluted) // should return hacked\n``` \n\n### Patches\nThe problem has been patched in v4.1.2\n\n### Workarounds\nUser can check for \"__proto__\" in the XML string before parsing it to the parser.\n\n### References\nhttps://gist.github.com/Sudistark/a5a45bd0804d522a1392cb5023aa7ef7\n\n",
                "markdown": "> ### Impact\nAs a part of this vulnerability, user was able to se code using `__proto__` as a tag or attribute name.\n\n```js\nconst { XMLParser, XMLBuilder, XMLValidator} = require(\"fast-xml-parser\");\n\nlet XMLdata = \"<__proto__><polluted>hacked</polluted></__proto__>\"\n\nconst parser = new XMLParser();\nlet jObj = parser.parse(XMLdata);\n\nconsole.log(jObj.polluted) // should return hacked\n``` \n\n### Patches\nThe problem has been patched in v4.1.2\n\n### Workarounds\nUser can check for \"__proto__\" in the XML string before parsing it to the parser.\n\n### References\nhttps://gist.github.com/Sudistark/a5a45bd0804d522a1392cb5023aa7ef7\n\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/fast-xml-parser@4.0.11               |\n| Affected range | <4.1.2                                       |\n| Fixed version  | 4.1.2                                        |\n| CVSS Score     |                                          6.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N |\n"
              },
              "properties": {
                "affected_version": "<4.1.2",
                "cvssV3": 6.5,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
                "fixed_version": "4.1.2",
                "purls": [
                  "pkg:npm/fast-xml-parser@4.0.11"
                ],
                "security-severity": "6.5",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-29415",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-29415: Server-Side Request Forgery (SSRF)"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-29415?s=github&n=ip&t=npm&vr=%3C%3D2.0.1",
              "help": {
                "text": "The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.\n",
                "markdown": "> The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.\n\n|                |                  |\n|----------------|------------------|\n| Package        | pkg:npm/ip@2.0.0 |\n| Affected range | <=2.0.1          |\n| Fixed version  | not fixed        |\n"
              },
              "properties": {
                "affected_version": "<=2.0.1",
                "cvssV3_severity": "HIGH",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:npm/ip@2.0.0"
                ],
                "security-severity": "7.1",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-46175",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-46175: Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-46175?s=github&n=json5&t=npm&vr=%3E%3D2.0.0%2C%3C2.2.2",
              "help": {
                "text": "The `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\n \nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n \n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) => {\n    if (searchKeys.indexOf(key) > -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n```\n \nIf the user attempts to set the `isAdmin` key, their request will be rejected:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n \nHowever, users can instead set the `__proto__` key to `{\"isAdmin\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n ```\n",
                "markdown": "> The `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\n \nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n \n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) => {\n    if (searchKeys.indexOf(key) > -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n```\n \nIf the user attempts to set the `isAdmin` key, their request will be rejected:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n \nHowever, users can instead set the `__proto__` key to `{\"isAdmin\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n ```\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/json5@2.2.1                          |\n| Affected range | >=2.0.0,<2.2.2                               |\n| Fixed version  | 2.2.2                                        |\n| CVSS Score     |                                          7.1 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:H |\n"
              },
              "properties": {
                "affected_version": ">=2.0.0,<2.2.2",
                "cvssV3": 7.1,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:H",
                "fixed_version": "2.2.2",
                "purls": [
                  "pkg:npm/json5@2.2.1"
                ],
                "security-severity": "7.1",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-23372",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-23372: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-23372?s=gitlab&n=mongo-express&t=npm&vr=%3E%3D0",
              "help": {
                "text": "Mongo-express is vulnerable to Denial of Service (DoS) when exporting an empty collection as CSV, due to an unhandled exception, leading to a crash.\n",
                "markdown": "> Mongo-express is vulnerable to Denial of Service (DoS) when exporting an empty collection as CSV, due to an unhandled exception, leading to a crash.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/mongo-express@1.0.2                  |\n| Affected range | >=0                                          |\n| Fixed version  | not fixed                                    |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": ">=0",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:npm/mongo-express@1.0.2"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-34104",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-34104: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-34104?s=gitlab&n=fast-xml-parser&t=npm&vr=%3C4.2.4",
              "help": {
                "text": "fast-xml-parser is an open source, pure javascript xml parser. fast-xml-parser allows special characters in entity names, which are not escaped or sanitized. Since the entity name is used for creating a regex for searching and replacing entities in the XML body, an attacker can abuse it for denial of service (DoS) attacks. By crafting an entity name that results in an intentionally bad performing regex and utilizing it in the entity replacement step of the parser, this can cause the parser to stall for an indefinite amount of time. This problem has been resolved in v4.2.4. Users are advised to upgrade. Users unable to upgrade should avoid using DOCTYPE parsing by setting the `processEntities: false` option.\n",
                "markdown": "> fast-xml-parser is an open source, pure javascript xml parser. fast-xml-parser allows special characters in entity names, which are not escaped or sanitized. Since the entity name is used for creating a regex for searching and replacing entities in the XML body, an attacker can abuse it for denial of service (DoS) attacks. By crafting an entity name that results in an intentionally bad performing regex and utilizing it in the entity replacement step of the parser, this can cause the parser to stall for an indefinite amount of time. This problem has been resolved in v4.2.4. Users are advised to upgrade. Users unable to upgrade should avoid using DOCTYPE parsing by setting the `processEntities: false` option.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/fast-xml-parser@4.0.11               |\n| Affected range | <4.2.4                                       |\n| Fixed version  | 4.2.4                                        |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<4.2.4",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "4.2.4",
                "purls": [
                  "pkg:npm/fast-xml-parser@4.0.11"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-45133",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45133: Incomplete List of Disallowed Inputs"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45133?s=github&n=traverse&ns=%40babel&t=npm&vr=%3C7.23.2",
              "help": {
                "text": "### Impact\n\nUsing Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods.\n\nKnown affected plugins are:\n- `@babel/plugin-transform-runtime`\n- `@babel/preset-env` when using its [`useBuiltIns`](https://babeljs.io/docs/babel-preset-env#usebuiltins) option\n- Any \"polyfill provider\" plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`\n\nNo other plugins under the `@babel/` namespace are impacted, but third-party plugins might be.\n\n**Users that only compile trusted code are not impacted.**\n\n### Patches\n\nThe vulnerability has been fixed in `@babel/traverse@7.23.2`.\n\nBabel 6 does not receive security fixes anymore (see [Babel's security policy](https://github.com/babel/babel/security/policy)), hence there is no patch planned for `babel-traverse@6`.\n\n### Workarounds\n\n- Upgrade `@babel/traverse` to v7.23.2 or higher. You can do this by deleting it from your package manager's lockfile and re-installing the dependencies. `@babel/core` >=7.23.2 will automatically pull in a non-vulnerable version.\n- If you cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above, upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions:\n  - `@babel/plugin-transform-runtime` v7.23.2\n  - `@babel/preset-env` v7.23.2\n  - `@babel/helper-define-polyfill-provider` v0.4.3\n  - `babel-plugin-polyfill-corejs2` v0.4.6\n  - `babel-plugin-polyfill-corejs3` v0.8.5\n  - `babel-plugin-polyfill-es-shims` v0.10.0\n  - `babel-plugin-polyfill-regenerator` v0.5.3\n",
                "markdown": "> ### Impact\n\nUsing Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods.\n\nKnown affected plugins are:\n- `@babel/plugin-transform-runtime`\n- `@babel/preset-env` when using its [`useBuiltIns`](https://babeljs.io/docs/babel-preset-env#usebuiltins) option\n- Any \"polyfill provider\" plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`\n\nNo other plugins under the `@babel/` namespace are impacted, but third-party plugins might be.\n\n**Users that only compile trusted code are not impacted.**\n\n### Patches\n\nThe vulnerability has been fixed in `@babel/traverse@7.23.2`.\n\nBabel 6 does not receive security fixes anymore (see [Babel's security policy](https://github.com/babel/babel/security/policy)), hence there is no patch planned for `babel-traverse@6`.\n\n### Workarounds\n\n- Upgrade `@babel/traverse` to v7.23.2 or higher. You can do this by deleting it from your package manager's lockfile and re-installing the dependencies. `@babel/core` >=7.23.2 will automatically pull in a non-vulnerable version.\n- If you cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above, upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions:\n  - `@babel/plugin-transform-runtime` v7.23.2\n  - `@babel/preset-env` v7.23.2\n  - `@babel/helper-define-polyfill-provider` v0.4.3\n  - `babel-plugin-polyfill-corejs2` v0.4.6\n  - `babel-plugin-polyfill-corejs3` v0.8.5\n  - `babel-plugin-polyfill-es-shims` v0.10.0\n  - `babel-plugin-polyfill-regenerator` v0.5.3\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/%!b(MISSING)abel/traverse@7.19.6     |\n| Affected range | <7.23.2                                      |\n| Fixed version  | 7.23.2                                       |\n| CVSS Score     |                                          9.3 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H |\n"
              },
              "properties": {
                "affected_version": "<7.23.2",
                "cvssV3": 9.3,
                "cvssV3_severity": "CRITICAL",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
                "fixed_version": "7.23.2",
                "purls": [
                  "pkg:npm/%40babel/traverse@7.19.6"
                ],
                "security-severity": "9.3",
                "tags": [
                  "CRITICAL"
                ]
              }
            }
          ],
          "version": "1.9.3"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2024-27088",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "  Vulnerability   : CVE-2024-27088           \n  Severity        : LOW                      \n  Package         : pkg:npm/es5-ext@0.10.62  \n  Affected range  : >=0.10.0,<0.10.63        \n  Fixed version   : 0.10.63                  \n  EPSS Score      : 0.000450                 \n  EPSS Percentile : 0.156070                 \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/node_modules/es5-ext/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42282",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-42282    \n  Severity        : MEDIUM            \n  Package         : pkg:npm/ip@2.0.0  \n  Affected range  : >=2.0.0,<2.0.1    \n  Fixed version   : 2.0.1             \n  EPSS Score      : 0.000840          \n  EPSS Percentile : 0.359930          \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/node_modules/ip/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52555",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-52555               \n  Severity        : MEDIUM                       \n  Package         : pkg:npm/mongo-express@1.0.2  \n  Affected range  : <=1.0.2                      \n  Fixed version   : not fixed                    \n  EPSS Score      : 0.000430                     \n  EPSS Percentile : 0.090520                     \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32050",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2021-32050                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:npm/mongodb@4.13.0                        \n  Affected range  : >=4.0.0,<4.17.0                               \n  Fixed version   : 4.17.0                                        \n  CVSS Score      : 4.2                                           \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:N/A:N  \n  EPSS Score      : 0.000710                                      \n  EPSS Percentile : 0.308350                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/node_modules/mongodb/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2022-25883                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:npm/semver@6.3.0                          \n  Affected range  : >=6.0.0,<6.3.1                                \n  Fixed version   : 6.3.1                                         \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.001020                                      \n  EPSS Percentile : 0.421780                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/node_modules/semver/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29041",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-29041                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:npm/express@4.18.2                        \n  Affected range  : <4.19.2                                       \n  Fixed version   : 4.19.2                                        \n  CVSS Score      : 6.1                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N  \n  EPSS Score      : 0.000440                                      \n  EPSS Percentile : 0.103790                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/node_modules/express/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26920",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-26920                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:npm/fast-xml-parser@4.0.11                \n  Affected range  : <4.1.2                                        \n  Fixed version   : 4.1.2                                         \n  CVSS Score      : 6.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N  \n  EPSS Score      : 0.000630                                      \n  EPSS Percentile : 0.276010                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/node_modules/fast-xml-parser/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29415",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : CVE-2024-29415    \n  Severity       : HIGH              \n  Package        : pkg:npm/ip@2.0.0  \n  Affected range : <=2.0.1           \n  Fixed version  : not fixed         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/node_modules/ip/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-46175",
          "ruleIndex": 8,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-46175                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/json5@2.2.1                           \n  Affected range  : >=2.0.0,<2.2.2                                \n  Fixed version   : 2.2.2                                         \n  CVSS Score      : 7.1                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:H  \n  EPSS Score      : 0.005710                                      \n  EPSS Percentile : 0.779670                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/node_modules/json5/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23372",
          "ruleIndex": 9,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-23372                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/mongo-express@1.0.2                   \n  Affected range  : >=0                                           \n  Fixed version   : not fixed                                     \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.001030                                      \n  EPSS Percentile : 0.425990                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-34104",
          "ruleIndex": 10,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-34104                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/fast-xml-parser@4.0.11                \n  Affected range  : <4.2.4                                        \n  Fixed version   : 4.2.4                                         \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.001230                                      \n  EPSS Percentile : 0.469240                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/node_modules/fast-xml-parser/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45133",
          "ruleIndex": 11,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45133                                \n  Severity        : CRITICAL                                      \n  Package         : pkg:npm/%!b(MISSING)abel/traverse@7.19.6      \n  Affected range  : <7.23.2                                       \n  Fixed version   : 7.23.2                                        \n  CVSS Score      : 9.3                                           \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H  \n  EPSS Score      : 0.000600                                      \n  EPSS Percentile : 0.257430                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/node_modules/@babel/traverse/package.json"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
