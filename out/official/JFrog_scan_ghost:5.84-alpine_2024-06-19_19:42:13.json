{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2024-21511_mysql2_2.3.3",
              "shortDescription": {
                "text": "[CVE-2024-21511] mysql2 2.3.3"
              },
              "help": {
                "text": "Versions of the package mysql2 before 3.9.7 are vulnerable to Arbitrary Code Injection due to improper sanitization of the timezone parameter in the readCodeFor function by calling a native MySQL Server date/time function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar `       | [3.9.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2024-21508_mysql2_2.3.3",
              "shortDescription": {
                "text": "[CVE-2024-21508] mysql2 2.3.3"
              },
              "help": {
                "text": "Versions of the package mysql2 before 3.9.4 are vulnerable to Remote Code Execution (RCE) via the readCodeFor function due to improper validation of the supportBigNumbers and bigNumberStrings values.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar `       | [3.9.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-25883_semver_5.7.1",
              "shortDescription": {
                "text": "[CVE-2022-25883] semver 5.7.1"
              },
              "help": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [5.7.2], [6.3.1], [7.5.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-31129_moment_2.27.0",
              "shortDescription": {
                "text": "[CVE-2022-31129] moment 2.27.0"
              },
              "help": {
                "text": "moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar `       | [2.29.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23539_jsonwebtoken_8.5.1",
              "shortDescription": {
                "text": "[CVE-2022-23539] jsonwebtoken 8.5.1"
              },
              "help": {
                "text": "Versions `\u003c=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. You are affected if you are using an algorithm and a key type other than a combination listed in the GitHub Security Advisory as unaffected. This issue has been fixed, please update to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, if you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you?ll need to set the `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and/or `verify()` functions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [9.0.0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-23540_jsonwebtoken_8.5.1",
              "shortDescription": {
                "text": "[CVE-2022-23540] jsonwebtoken 8.5.1"
              },
              "help": {
                "text": "In versions `\u003c=8.5.1` of `jsonwebtoken` library, lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. Users are affected if you do not specify algorithms in the `jwt.verify()` function. This issue has been fixed, please update to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. There will be no impact, if you update to version 9.0.0 and you don?t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.6      | Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [9.0.0]   |"
              },
              "properties": {
                "security-severity": "7.6"
              }
            },
            {
              "id": "CVE-2022-31129_moment_2.24.0",
              "shortDescription": {
                "text": "[CVE-2022-31129] moment 2.24.0"
              },
              "help": {
                "text": "moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [2.29.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-21222_css-what_2.1.3",
              "shortDescription": {
                "text": "[CVE-2022-21222] css-what 2.1.3"
              },
              "help": {
                "text": "The package css-what before 2.1.3 are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of insecure regular expression in the re_attr variable of index.js. The exploitation of this vulnerability could be triggered via the parse function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Undetermined       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [5.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-37620_html-minifier_4.0.0",
              "shortDescription": {
                "text": "[CVE-2022-37620] html-minifier 4.0.0"
              },
              "help": {
                "text": "A Regular Expression Denial of Service (ReDoS) flaw was found in kangax html-minifier 4.0.0 via the candidate variable in htmlminifier.js.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-21512_mysql2_3.9.7",
              "shortDescription": {
                "text": "[CVE-2024-21512] mysql2 3.9.7"
              },
              "help": {
                "text": "Versions of the package mysql2 before 3.9.8 are vulnerable to Prototype Pollution due to improper user input sanitization passed to fields and tables when using nestTables.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [3.9.8]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2024-4068_braces_2.3.2",
              "shortDescription": {
                "text": "[CVE-2024-4068] braces 2.3.2"
              },
              "help": {
                "text": "The NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [3.0.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3803_nth-check_1.0.2",
              "shortDescription": {
                "text": "[CVE-2021-3803] nth-check 1.0.2"
              },
              "help": {
                "text": "nth-check is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [2.0.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-37890_ws_8.11.0",
              "shortDescription": {
                "text": "[CVE-2024-37890] ws 8.11.0"
              },
              "help": {
                "text": "ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [5.2.4], [6.2.3], [7.5.10], [8.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-22467_luxon_1.28.0",
              "shortDescription": {
                "text": "[CVE-2023-22467] luxon 1.28.0"
              },
              "help": {
                "text": "Luxon is a library for working with dates and times in JavaScript. On the 1.x branch prior to 1.38.1, the 2.x branch prior to 2.5.2, and the 3.x branch on 3.2.1, Luxon's `DateTime.fromRFC2822() has quadratic (N^2) complexity on some specific inputs. This causes a noticeable slowdown for inputs with lengths above 10k characters. Users providing untrusted data to this method are therefore vulnerable to (Re)DoS attacks. This issue also appears in Moment as CVE-2022-31129. Versions 1.38.1, 2.5.2, and 3.2.1 contain patches for this issue. As a workaround, limit the length of the input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [1.28.1], [2.5.2], [3.2.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2016-20018_knex_0.20.15",
              "shortDescription": {
                "text": "[CVE-2016-20018] knex 0.20.15"
              },
              "help": {
                "text": "Knex Knex.js through 2.3.0 has a limited SQL injection vulnerability that can be exploited to ignore the WHERE clause of a SQL query.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [2.4.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-7753_trim_0.0.1",
              "shortDescription": {
                "text": "[CVE-2020-7753] trim 0.0.1"
              },
              "help": {
                "text": "All versions of package trim are vulnerable to Regular Expression Denial of Service (ReDoS) via trim().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [0.0.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-21512_mysql2_2.3.3",
              "shortDescription": {
                "text": "[CVE-2024-21512] mysql2 2.3.3"
              },
              "help": {
                "text": "Versions of the package mysql2 before 3.9.8 are vulnerable to Prototype Pollution due to improper user input sanitization passed to fields and tables when using nestTables.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar `       | [3.9.8]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2021-3765_validator_12.2.0",
              "shortDescription": {
                "text": "[CVE-2021-3765] validator 12.2.0"
              },
              "help": {
                "text": "validator.js is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [13.7.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24434_dicer_0.2.5",
              "shortDescription": {
                "text": "[CVE-2022-24434] dicer 0.2.5"
              },
              "help": {
                "text": "This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. An attacker could sent the payload again and again so that the service continuously crashes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-37890_ws_8.17.0",
              "shortDescription": {
                "text": "[CVE-2024-37890] ws 8.17.0"
              },
              "help": {
                "text": "ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [5.2.4], [6.2.3], [7.5.10], [8.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.19:busybox-binsh_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.19:busybox-binsh 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.19:busybox_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.19:busybox 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-45857_axios_0.27.2",
              "shortDescription": {
                "text": "[CVE-2023-45857] axios 0.27.2"
              },
              "help": {
                "text": "An issue discovered in Axios 1.5.1 inadvertently reveals the confidential XSRF-TOKEN stored in cookies by including it in the HTTP header X-XSRF-TOKEN for every request made to any host allowing attackers to view sensitive information.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [0.28.0], [1.6.0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2017-16137_debug_4.1.1",
              "shortDescription": {
                "text": "[CVE-2017-16137] debug 4.1.1"
              },
              "help": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [2.6.9], [3.1.0], [3.2.7], [4.3.1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-23541_jsonwebtoken_8.5.1",
              "shortDescription": {
                "text": "[CVE-2022-23541] jsonwebtoken 8.5.1"
              },
              "help": {
                "text": "jsonwebtoken is an implementation of JSON Web Tokens. Versions `\u003c= 8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function referring to the `secretOrPublicKey` argument from the readme link will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification, other than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of  forged tokens. If your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. This issue has been patched, please update to version 9.0.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.3      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [9.0.0]   |"
              },
              "properties": {
                "security-severity": "6.3"
              }
            },
            {
              "id": "CVE-2023-42365_3.19:ssl_client_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.19:ssl_client 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.19:busybox-binsh_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.19:busybox-binsh 1.36.1-r15"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r16]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.19:ssl_client_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.19:ssl_client 1.36.1-r15"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r16]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-33987_got_8.3.2",
              "shortDescription": {
                "text": "[CVE-2022-33987] got 8.3.2"
              },
              "help": {
                "text": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar `       | [11.8.5], [12.1.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42366_3.19:busybox_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.19:busybox 1.36.1-r15"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r16]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.19:ssl_client_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.19:ssl_client 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r17]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-26920_fast-xml-parser_4.0.11",
              "shortDescription": {
                "text": "[CVE-2023-26920] fast-xml-parser 4.0.11"
              },
              "help": {
                "text": "fast-xml-parser before 4.1.2 allows __proto__ for Prototype Pollution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [4.1.2]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.19:busybox-binsh_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.19:busybox-binsh 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r17]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.19:busybox_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.19:busybox 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.19:ssl_client_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.19:ssl_client 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-28849_follow-redirects_1.15.5",
              "shortDescription": {
                "text": "[CVE-2024-28849] follow-redirects 1.15.5"
              },
              "help": {
                "text": "follow-redirects is an open source, drop-in replacement for Node's `http` and `https` modules that automatically follows redirects. In affected versions follow-redirects only clears authorization header during cross-domain redirect, but keep the proxy-authentication header which contains credentials too. This vulnerability may lead to credentials leak, but has been addressed in version 1.15.6. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2024-21507_mysql2_2.3.3",
              "shortDescription": {
                "text": "[CVE-2024-21507] mysql2 2.3.3"
              },
              "help": {
                "text": "Versions of the package mysql2 before 3.9.3 are vulnerable to Improper Input Validation through the keyFromFields function, resulting in cache poisoning. An attacker can inject a colon (:) character within a value of the attacker-crafted key.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar `       | [3.9.3]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.19:busybox_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.19:busybox 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r17]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-21509_mysql2_2.3.3",
              "shortDescription": {
                "text": "[CVE-2024-21509] mysql2 2.3.3"
              },
              "help": {
                "text": "Versions of the package mysql2 before 3.9.4 are vulnerable to Prototype Poisoning due to insecure results object creation and improper user input sanitization passed through parserFn in text_parser.js and binary_parser.js.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar `       | [3.9.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-33987_got_9.6.0",
              "shortDescription": {
                "text": "[CVE-2022-33987] got 9.6.0"
              },
              "help": {
                "text": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `\u003cbr/\u003e`sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar `       | [11.8.5], [12.1.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42364_3.19:busybox-binsh_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.19:busybox-binsh 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-28155_request_2.88.2",
              "shortDescription": {
                "text": "[CVE-2023-28155] request 2.88.2"
              },
              "help": {
                "text": "The Request package through 2.88.1 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2009-3767_3.19:libcrypto3_3.1.4-r5",
              "shortDescription": {
                "text": "[CVE-2009-3767] 3.19:libcrypto3 3.1.4-r5"
              },
              "help": {
                "text": "libraries/libldap/tls_o.c in OpenLDAP 2.2 and 2.4, and possibly other versions, when OpenSSL is used, does not properly handle a '\\0' character in a domain name in the subject's Common Name (CN) field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-80742_express-brute_1.0.1",
              "shortDescription": {
                "text": "[XRAY-80742] express-brute 1.0.1"
              },
              "help": {
                "text": "Rate Limiting Bypass in express-brute",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2009-3767_3.19:libssl3_3.1.4-r5",
              "shortDescription": {
                "text": "[CVE-2009-3767] 3.19:libssl3 3.1.4-r5"
              },
              "help": {
                "text": "libraries/libldap/tls_o.c in OpenLDAP 2.2 and 2.4, and possibly other versions, when OpenSSL is used, does not properly handle a '\\0' character in a domain name in the subject's Common Name (CN) field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-24758_undici_5.22.1",
              "shortDescription": {
                "text": "[CVE-2024-24758] undici 5.22.1"
              },
              "help": {
                "text": "Undici is an HTTP/1.1 client, written from scratch for Node.js. Undici already cleared Authorization headers on cross-origin redirects, but did not clear `Proxy-Authentication` headers. This issue has been patched in versions 5.28.3 and 6.6.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.9      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [5.28.3], [6.6.1]   |"
              },
              "properties": {
                "security-severity": "3.9"
              }
            },
            {
              "id": "CVE-2024-30260_undici_5.22.1",
              "shortDescription": {
                "text": "[CVE-2024-30260] undici 5.22.1"
              },
              "help": {
                "text": "Undici is an HTTP/1.1 client, written from scratch for Node.js. Undici cleared Authorization and Proxy-Authorization headers for `fetch()`, but did not clear them for `undici.request()`. This vulnerability was patched in version(s) 5.28.4 and 6.11.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.9      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [5.28.4], [6.11.1]   |"
              },
              "properties": {
                "security-severity": "3.9"
              }
            },
            {
              "id": "CVE-2024-30261_undici_5.22.1",
              "shortDescription": {
                "text": "[CVE-2024-30261] undici 5.22.1"
              },
              "help": {
                "text": "Undici is an HTTP/1.1 client, written from scratch for Node.js. An attacker can alter the `integrity` option passed to `fetch()`, allowing `fetch()` to accept requests as valid even if they have been tampered. This vulnerability was patched in version(s) 5.28.4 and 6.11.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 2.6      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [5.28.4], [6.11.1]   |"
              },
              "properties": {
                "security-severity": "2.6"
              }
            },
            {
              "id": "CVE-2023-45143_undici_5.22.1",
              "shortDescription": {
                "text": "[CVE-2023-45143] undici 5.22.1"
              },
              "help": {
                "text": "Undici is an HTTP/1.1 client written from scratch for Node.js. Prior to version 5.26.2, Undici already cleared Authorization headers on cross-origin redirects, but did not clear `Cookie` headers. By design, `cookie` headers are forbidden request headers, disallowing them to be set in RequestInit.headers in browser environments. Since undici handles headers more liberally than the spec, there was a disconnect from the assumptions the spec made, and undici's implementation of fetch. As such this may lead to accidental leakage of cookie to a third-party site or a malicious attacker who can control the redirection target (ie. an open redirector) to leak the cookie to the third party site. This was patched in version 5.26.2. There are no known workarounds.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.5      | Not Covered       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [5.26.2]   |"
              },
              "properties": {
                "security-severity": "3.5"
              }
            },
            {
              "id": "CVE-2023-26136_tough-cookie_2.5.0",
              "shortDescription": {
                "text": "[CVE-2023-26136] tough-cookie 2.5.0"
              },
              "help": {
                "text": "Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. This issue arises from the manner in which the objects are initialized.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [4.1.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-26115_word-wrap_1.2.3",
              "shortDescription": {
                "text": "[CVE-2023-26115] word-wrap 1.2.3"
              },
              "help": {
                "text": "All versions of the package word-wrap are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the result variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [1.2.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-38900_decode-uri-component_0.2.0",
              "shortDescription": {
                "text": "[CVE-2022-38900] decode-uri-component 0.2.0"
              },
              "help": {
                "text": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [0.2.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-23358_underscore_1.7.0",
              "shortDescription": {
                "text": "[CVE-2021-23358] underscore 1.7.0"
              },
              "help": {
                "text": "The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [1.12.1]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-23358_underscore_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-23358] underscore 1.8.3"
              },
              "help": {
                "text": "The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [1.12.1]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-25881_http-cache-semantics_3.8.1",
              "shortDescription": {
                "text": "[CVE-2022-25881] http-cache-semantics 3.8.1"
              },
              "help": {
                "text": "This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar `       | [4.1.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24785_moment_2.27.0",
              "shortDescription": {
                "text": "[CVE-2022-24785] moment 2.27.0"
              },
              "help": {
                "text": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar `       | [2.29.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24785_moment_2.24.0",
              "shortDescription": {
                "text": "[CVE-2022-24785] moment 2.24.0"
              },
              "help": {
                "text": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [2.29.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-29415_ip_2.0.1",
              "shortDescription": {
                "text": "[CVE-2024-29415] ip 2.0.1"
              },
              "help": {
                "text": "The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28863_tar_6.1.14",
              "shortDescription": {
                "text": "[CVE-2024-28863] tar 6.1.14"
              },
              "help": {
                "text": "node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar `       | [6.2.1]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2024-21511_mysql2_2.3.3",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2024-21511] sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21508_mysql2_2.3.3",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2024-21508] sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_5.7.1",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31129_moment_2.27.0",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2022-31129] sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23539_jsonwebtoken_8.5.1",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23539] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23540_jsonwebtoken_8.5.1",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23540] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31129_moment_2.24.0",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2022-31129] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21222_css-what_2.1.3",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2022-21222] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37620_html-minifier_4.0.0",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2022-37620] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21512_mysql2_3.9.7",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2024-21512] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4068_braces_2.3.2",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2024-4068] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3803_nth-check_1.0.2",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3803] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37890_ws_8.11.0",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[CVE-2024-37890] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-22467_luxon_1.28.0",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2023-22467] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-20018_knex_0.20.15",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2016-20018] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7753_trim_0.0.1",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7753] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21512_mysql2_2.3.3",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2024-21512] sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3765_validator_12.2.0",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3765] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24434_dicer_0.2.5",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24434] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37890_ws_8.17.0",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2024-37890] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.19:busybox-binsh_1.36.1-r15",
          "ruleIndex": 20,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.19:busybox_1.36.1-r15",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45857_axios_0.27.2",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45857] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16137_debug_4.1.1",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-16137] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23541_jsonwebtoken_8.5.1",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-23541] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.19:ssl_client_1.36.1-r15",
          "ruleIndex": 25,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.19:busybox-binsh_1.36.1-r15",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.19:ssl_client_1.36.1-r15",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-33987_got_8.3.2",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-33987] sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.19:busybox_1.36.1-r15",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.19:ssl_client_1.36.1-r15",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26920_fast-xml-parser_4.0.11",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-26920] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.19:busybox-binsh_1.36.1-r15",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.19:busybox_1.36.1-r15",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.19:ssl_client_1.36.1-r15",
          "ruleIndex": 34,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28849_follow-redirects_1.15.5",
          "ruleIndex": 35,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-28849] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21507_mysql2_2.3.3",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-21507] sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.19:busybox_1.36.1-r15",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21509_mysql2_2.3.3",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-21509] sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-33987_got_9.6.0",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-33987] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-33987_got_9.6.0",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-33987] sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.19:busybox-binsh_1.36.1-r15",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155_request_2.88.2",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28155] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-3767_3.19:libcrypto3_3.1.4-r5",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "[CVE-2009-3767] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-80742_express-brute_1.0.1",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "[XRAY-80742] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-3767_3.19:libssl3_3.1.4-r5",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "[CVE-2009-3767] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24758_undici_5.22.1",
          "ruleIndex": 45,
          "level": "note",
          "message": {
            "text": "[CVE-2024-24758] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-30260_undici_5.22.1",
          "ruleIndex": 46,
          "level": "note",
          "message": {
            "text": "[CVE-2024-30260] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-30261_undici_5.22.1",
          "ruleIndex": 47,
          "level": "note",
          "message": {
            "text": "[CVE-2024-30261] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45143_undici_5.22.1",
          "ruleIndex": 48,
          "level": "note",
          "message": {
            "text": "[CVE-2023-45143] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136_tough-cookie_2.5.0",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "[CVE-2023-26136] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26115_word-wrap_1.2.3",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "[CVE-2023-26115] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38900_decode-uri-component_0.2.0",
          "ruleIndex": 51,
          "level": "error",
          "message": {
            "text": "[CVE-2022-38900] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23358_underscore_1.7.0",
          "ruleIndex": 52,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23358] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23358_underscore_1.8.3",
          "ruleIndex": 53,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23358] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25881_http-cache-semantics_3.8.1",
          "ruleIndex": 54,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25881] sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24785_moment_2.27.0",
          "ruleIndex": 55,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24785] sha256__dd1e96099e3065c670a94f661b78d543a4f0292207764aa18b8d2f069b56de09.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24785_moment_2.24.0",
          "ruleIndex": 56,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24785] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29415_ip_2.0.1",
          "ruleIndex": 57,
          "level": "error",
          "message": {
            "text": "[CVE-2024-29415] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863_tar_6.1.14",
          "ruleIndex": 58,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-28863] sha256__6231ac6a868a14120dd5433fb14c73b0d11bc13a547f9e8f9c6b6010f2de76d0.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2021-23358",
              "name": "CVE-2021-23358",
              "shortDescription": {
                "text": "Scanner for CVE-2021-23358"
              },
              "fullDescription": {
                "text": "The scanner checks whether external input flows to the vulnerable variable `underscore.templateSettings`.",
                "markdown": "The scanner checks whether external input flows to the vulnerable variable `underscore.templateSettings`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-28863",
              "name": "CVE-2024-28863",
              "shortDescription": {
                "text": "Scanner for CVE-2024-28863"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-21222",
              "name": "CVE-2022-21222",
              "shortDescription": {
                "text": "Scanner for CVE-2022-21222"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `parse` is called.\n\nThe vulnerability can also be exploited when the package `css-what` is imported using the ES module `import` statement, and the vulnerable function is called. The scanner currently does not detect this case, so it is essential to make sure that if the package `css-what` is imported using the ES module `import` statement, the vulnerable function `parse` is not called with external input.",
                "markdown": "The scanner checks whether the vulnerable function `parse` is called.\n\nThe vulnerability can also be exploited when the package `css-what` is imported using the ES module `import` statement, and the vulnerable function is called. The scanner currently does not detect this case, so it is essential to make sure that if the package `css-what` is imported using the ES module `import` statement, the vulnerable function `parse` is not called with external input."
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "applic_CVE-2022-23539",
              "name": "CVE-2022-23539",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23539"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `jsonwebtoken.verify()` is called.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The key type and algorithm must be outside of the supported list mentioned in the advisory.",
                "markdown": "The scanner checks whether the vulnerable function `jsonwebtoken.verify()` is called.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The key type and algorithm must be outside of the supported list mentioned in the advisory."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23540",
              "name": "CVE-2022-23540",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23540"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `jsonwebtoken.verify` is called with external input to its second argument, `secretOrPublicKey`. In addition, the scanner checks if the `algorithms` option was not provided.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The `secretOrPublicKey` must be an object that a user can control.",
                "markdown": "The scanner checks whether the vulnerable function `jsonwebtoken.verify` is called with external input to its second argument, `secretOrPublicKey`. In addition, the scanner checks if the `algorithms` option was not provided.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The `secretOrPublicKey` must be an object that a user can control."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24785",
              "name": "CVE-2022-24785",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24785"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `locale` is called with external input to its 1st (`config`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `locale` is called with external input to its 1st (`config`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25881",
              "name": "CVE-2022-25881",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25881"
              },
              "fullDescription": {
                "text": "The scanner checks whether the object `CachePolicy` has been initiated using user-controlled input, or whether the vulnerable function `satisfiesWithoutRevalidation` has been called with user-controlled input.",
                "markdown": "The scanner checks whether the object `CachePolicy` has been initiated using user-controlled input, or whether the vulnerable function `satisfiesWithoutRevalidation` has been called with user-controlled input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-31129",
              "name": "CVE-2022-31129",
              "shortDescription": {
                "text": "Scanner for CVE-2022-31129"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `moment` is called with external input to its 1st (`config`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `moment` is called with external input to its 1st (`config`) argument."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-38900",
              "name": "CVE-2022-38900",
              "shortDescription": {
                "text": "Scanner for CVE-2022-38900"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `decode-uri-component` is called with external input.",
                "markdown": "The scanner checks whether the vulnerable function `decode-uri-component` is called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-26136",
              "name": "CVE-2023-26136",
              "shortDescription": {
                "text": "Scanner for CVE-2023-26136"
              },
              "fullDescription": {
                "text": "The scanner checks for the initialization of `CookieJar()` with the vulnerable option ` rejectPublicSuffixes` set to false.",
                "markdown": "The scanner checks for the initialization of `CookieJar()` with the vulnerable option ` rejectPublicSuffixes` set to false."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-26115",
              "name": "CVE-2023-26115",
              "shortDescription": {
                "text": "Scanner for CVE-2023-26115"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable module `word-wrap` is called with external input and the `trim` option set to true.",
                "markdown": "The scanner checks whether the vulnerable module `word-wrap` is called with external input and the `trim` option set to true."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25883",
              "name": "CVE-2022-25883",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25883"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`",
                "markdown": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-29415",
              "name": "CVE-2024-29415",
              "shortDescription": {
                "text": "Scanner for CVE-2024-29415"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called with external input:\n\n- `ip.isPublic`\n\n- `ip.isPrivate`\n\n- `ip.isLoopback`",
                "markdown": "The scanner checks whether any of the following functions are called with external input:\n\n- `ip.isPublic`\n\n- `ip.isPrivate`\n\n- `ip.isLoopback`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3765",
              "name": "CVE-2021-3765",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3765"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-30261",
              "name": "CVE-2024-30261",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-30261"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-21512",
              "name": "CVE-2024-21512",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-21512"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42366",
              "name": "CVE-2023-42366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45857",
              "name": "CVE-2023-45857",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45857"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-20018",
              "name": "CVE-2016-20018",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-20018"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45143",
              "name": "CVE-2023-45143",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45143"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-7753",
              "name": "CVE-2020-7753",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-7753"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28155",
              "name": "CVE-2023-28155",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28155"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-33987",
              "name": "CVE-2022-33987",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-33987"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-24434",
              "name": "CVE-2022-24434",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-24434"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-21511",
              "name": "CVE-2024-21511",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-21511"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-4068",
              "name": "CVE-2024-4068",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-4068"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42365",
              "name": "CVE-2023-42365",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42365"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-22467",
              "name": "CVE-2023-22467",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-22467"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42364",
              "name": "CVE-2023-42364",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42364"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-24758",
              "name": "CVE-2024-24758",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-24758"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-16137",
              "name": "CVE-2017-16137",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-16137"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-21507",
              "name": "CVE-2024-21507",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-21507"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42363",
              "name": "CVE-2023-42363",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42363"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-21509",
              "name": "CVE-2024-21509",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-21509"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-37620",
              "name": "CVE-2022-37620",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-37620"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-30260",
              "name": "CVE-2024-30260",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-30260"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-37890",
              "name": "CVE-2024-37890",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-37890"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable class `ws.Server()` is initialized.",
                "markdown": "The scanner checks whether the vulnerable class `ws.Server()` is initialized."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2009-3767",
              "name": "CVE-2009-3767",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2009-3767"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-23541",
              "name": "CVE-2022-23541",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-23541"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-21508",
              "name": "CVE-2024-21508",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-21508"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3803",
              "name": "CVE-2021-3803",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3803"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-26920",
              "name": "CVE-2023-26920",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-26920"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28849",
              "name": "CVE-2024-28849",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28849"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718826401-2346338916/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718826133-4034011811/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2021-23358",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether external input flows to the vulnerable variable `underscore.templateSettings`."
          }
        },
        {
          "ruleId": "applic_CVE-2024-28863",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-23539",
          "message": {
            "text": "The vulnerable function jsonwebtoken.verify is called with external input to the 'secretOrPublicKey' parameter and the 'algorithms' option is not provided"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/services/auth/api-key/admin.js"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 8,
                  "endLine": 172,
                  "endColumn": 42,
                  "snippet": {
                    "text": "jwt.verify(token, secret, options)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23540",
          "message": {
            "text": "The vulnerable function jsonwebtoken.verify is called with external input to the 'secretOrPublicKey' parameter and the 'algorithms' option is not provided"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/services/auth/api-key/admin.js"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 8,
                  "endLine": 172,
                  "endColumn": 42,
                  "snippet": {
                    "text": "jwt.verify(token, secret, options)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24785",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `locale` is called with external input to its 1st (`config`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2022-25881",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the object `CachePolicy` has been initiated using user-controlled input, or whether the vulnerable function `satisfiesWithoutRevalidation` has been called with user-controlled input."
          }
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/frontend/helpers/prev_post.js"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 24,
                  "endLine": 21,
                  "endColumn": 49,
                  "snippet": {
                    "text": "moment(post.published_at)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/frontend/services/sitemap/BaseSiteMapGenerator.js"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 19,
                  "endLine": 102,
                  "endColumn": 39,
                  "snippet": {
                    "text": "moment(modifiedDate)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/frontend/services/sitemap/BaseSiteMapGenerator.js"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 26,
                  "endLine": 129,
                  "endColumn": 69,
                  "snippet": {
                    "text": "moment(this.getLastModifiedForDatum(datum))"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/frontend/services/sitemap/SiteMapIndexGenerator.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 34,
                  "endLine": 44,
                  "endColumn": 54,
                  "snippet": {
                    "text": "moment(lastModified)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/post-scheduling/PostScheduler.js"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 18,
                  "endLine": 68,
                  "endColumn": 37,
                  "snippet": {
                    "text": "moment(publishedAt)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/post-scheduling/PostScheduler.js"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 58,
                  "endLine": 72,
                  "endColumn": 96,
                  "snippet": {
                    "text": "moment(model.previous('published_at'))"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/post-scheduling/scheduling-auth-token.js"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 22,
                  "endLine": 28,
                  "endColumn": 41,
                  "snippet": {
                    "text": "moment(publishedAt)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/post-scheduling/scheduling-auth-token.js"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 17,
                  "endLine": 36,
                  "endColumn": 36,
                  "snippet": {
                    "text": "moment(publishedAt)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 20,
                  "endLine": 111,
                  "endColumn": 40,
                  "snippet": {
                    "text": "moment(Number(time))"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 20,
                  "endLine": 137,
                  "endColumn": 39,
                  "snippet": {
                    "text": "moment(object.time)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 8,
                  "endLine": 144,
                  "endColumn": 25,
                  "snippet": {
                    "text": "moment(timestamp)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 43,
                  "endLine": 145,
                  "endColumn": 62,
                  "snippet": {
                    "text": "moment(object.time)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 35,
                  "endLine": 157,
                  "endColumn": 54,
                  "snippet": {
                    "text": "moment(object.time)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 32,
                  "endLine": 186,
                  "endColumn": 44,
                  "snippet": {
                    "text": "moment(time)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 30,
                  "endLine": 192,
                  "endColumn": 42,
                  "snippet": {
                    "text": "moment(time)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 19,
                  "endLine": 218,
                  "endColumn": 44,
                  "snippet": {
                    "text": "moment(Number(timestamp))"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 38,
                  "endLine": 229,
                  "endColumn": 63,
                  "snippet": {
                    "text": "moment(Number(timestamp))"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 52,
                  "endLine": 239,
                  "endColumn": 64,
                  "snippet": {
                    "text": "moment(time)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 67,
                  "endLine": 269,
                  "endColumn": 79,
                  "snippet": {
                    "text": "moment(time)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/adapters/scheduling/scheduling-default.js"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 8,
                  "endLine": 287,
                  "endColumn": 20,
                  "snippet": {
                    "text": "moment(time)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/models/base/index.js"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 15,
                  "endLine": 47,
                  "endColumn": 37,
                  "snippet": {
                    "text": "moment(this.get(attr))"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/models/base/index.js"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 43,
                  "endLine": 47,
                  "endColumn": 70,
                  "snippet": {
                    "text": "moment(this.previous(attr))"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/models/base/plugins/data-manipulation.js"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 33,
                  "endLine": 37,
                  "endColumn": 46,
                  "snippet": {
                    "text": "moment(value)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/models/base/plugins/data-manipulation.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 33,
                  "endLine": 60,
                  "endColumn": 46,
                  "snippet": {
                    "text": "moment(value)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/models/base/plugins/sanitize.js"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 37,
                  "endLine": 112,
                  "endColumn": 50,
                  "snippet": {
                    "text": "moment(value)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/models/base/plugins/sanitize.js"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 79,
                  "endLine": 139,
                  "endColumn": 100,
                  "snippet": {
                    "text": "moment(relationValue)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/models/post.js"
                },
                "region": {
                  "startLine": 648,
                  "startColumn": 24,
                  "endLine": 648,
                  "endColumn": 43,
                  "snippet": {
                    "text": "moment(publishedAt)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/models/post.js"
                },
                "region": {
                  "startLine": 655,
                  "startColumn": 16,
                  "endLine": 655,
                  "endColumn": 35,
                  "snippet": {
                    "text": "moment(publishedAt)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/services/comments/CommentsServiceEmails.js"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 25,
                  "endLine": 135,
                  "endColumn": 58,
                  "snippet": {
                    "text": "ment.get('created_at')).tz(this.s"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/services/comments/CommentsServiceEmails.js"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 29,
                  "endLine": 42,
                  "endColumn": 62,
                  "snippet": {
                    "text": "ent(comment.get('created_at')).tz"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/services/comments/CommentsServiceEmails.js"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 23,
                  "endLine": 91,
                  "endColumn": 54,
                  "snippet": {
                    "text": "reply.get('created_at')).tz(thi"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/services/members/exporter/query.js"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 28,
                  "endLine": 84,
                  "endColumn": 53,
                  "snippet": {
                    "text": "moment(member.created_at)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/services/posts/post-scheduling-service.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 34,
                  "endLine": 29,
                  "endColumn": 75,
                  "snippet": {
                    "text": "moment(preScheduledResource.published_at)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31129",
          "message": {
            "text": "The vulnerable function moment is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/services/posts/post-scheduling-service.js"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 24,
                  "endLine": 42,
                  "endColumn": 63,
                  "snippet": {
                    "text": "moment(preScheduledResource.updated_at)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38900",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `decode-uri-component` is called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2023-26136",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for the initialization of `CookieJar()` with the vulnerable option ` rejectPublicSuffixes` set to false."
          }
        },
        {
          "ruleId": "applic_CVE-2023-26115",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable module `word-wrap` is called with external input and the `trim` option set to true."
          }
        },
        {
          "ruleId": "applic_CVE-2022-25883",
          "message": {
            "text": "The vulnerable function satisfies is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpkxue17fq/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/core/server/data/migrations/versions/4.4/01-restore-free-members-signup-setting-from-backup.js"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 20,
                  "endLine": 71,
                  "endColumn": 66,
                  "snippet": {
                    "text": "semver.satisfies(backup.meta.version, '4.3.x')"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-29415",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following functions are called with external input:\n\n- `ip.isPublic`\n\n- `ip.isPrivate`\n\n- `ip.isLoopback`"
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718826401-2346338916/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718826133-4034011811/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp7a1a2mx8/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/package.json"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 15,
                  "endLine": 134,
                  "endColumn": 15,
                  "snippet": {
                    "text": "mw-************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp7a1a2mx8/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/package.json"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 15,
                  "endLine": 293,
                  "endColumn": 15,
                  "snippet": {
                    "text": "ext************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp7a1a2mx8/unpacked/filesystem/blobs/sha256/06e4539c8d59181b383f3564778c40c02cffe98cb80d15bd815119cbbe56c041/var/lib/ghost/versions/5.84.2/package.json"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 15,
                  "endLine": 321,
                  "endColumn": 15,
                  "snippet": {
                    "text": "mw-************"
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
