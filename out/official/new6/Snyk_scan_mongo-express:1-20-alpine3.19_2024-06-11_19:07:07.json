{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 22
          },
          "rules": [
            {
              "id": "SNYK-ALPINE319-BUSYBOX-6913413",
              "shortDescription": {
                "text": "Medium severity - Out-of-bounds Write vulnerability in busybox"
              },
              "fullDescription": {
                "text": "(CVE-2023-42366) busybox/busybox@1.36.1-r15"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `busybox` package and not the `busybox` package as distributed by `Alpine`._\n_See `How to fix?` for `Alpine:3.19` relevant fixed versions and status._\n\nA heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.\n## Remediation\nUpgrade `Alpine:3.19` `busybox` to version 1.36.1-r16 or higher.\n## References\n- [https://bugs.busybox.net/show_bug.cgi?id=15874](https://bugs.busybox.net/show_bug.cgi?id=15874)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-787",
                  "apk"
                ],
                "cvssv3_baseScore": 5.5,
                "security-severity": "5.5"
              }
            },
            {
              "id": "SNYK-ALPINE319-BUSYBOX-6928845",
              "shortDescription": {
                "text": "Medium severity - Use After Free vulnerability in busybox"
              },
              "fullDescription": {
                "text": "(CVE-2023-42365) busybox/busybox@1.36.1-r15"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `busybox` package and not the `busybox` package as distributed by `Alpine`._\n_See `How to fix?` for `Alpine:3.19` relevant fixed versions and status._\n\nA use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.\n## Remediation\nUpgrade `Alpine:3.19` `busybox` to version 1.36.1-r17 or higher.\n## References\n- [https://bugs.busybox.net/show_bug.cgi?id=15871](https://bugs.busybox.net/show_bug.cgi?id=15871)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-416",
                  "apk"
                ],
                "cvssv3_baseScore": 5.5,
                "security-severity": "5.5"
              }
            },
            {
              "id": "SNYK-ALPINE319-BUSYBOX-6928846",
              "shortDescription": {
                "text": "Medium severity - Use After Free vulnerability in busybox"
              },
              "fullDescription": {
                "text": "(CVE-2023-42364) busybox/busybox@1.36.1-r15"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `busybox` package and not the `busybox` package as distributed by `Alpine`._\n_See `How to fix?` for `Alpine:3.19` relevant fixed versions and status._\n\nA use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.\n## Remediation\nUpgrade `Alpine:3.19` `busybox` to version 1.36.1-r17 or higher.\n## References\n- [https://bugs.busybox.net/show_bug.cgi?id=15868](https://bugs.busybox.net/show_bug.cgi?id=15868)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-416",
                  "apk"
                ],
                "cvssv3_baseScore": 5.5,
                "security-severity": "5.5"
              }
            },
            {
              "id": "SNYK-ALPINE319-BUSYBOX-6928847",
              "shortDescription": {
                "text": "Medium severity - Use After Free vulnerability in busybox"
              },
              "fullDescription": {
                "text": "(CVE-2023-42363) busybox/busybox@1.36.1-r15"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `busybox` package and not the `busybox` package as distributed by `Alpine`._\n_See `How to fix?` for `Alpine:3.19` relevant fixed versions and status._\n\nA use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.\n## Remediation\nUpgrade `Alpine:3.19` `busybox` to version 1.36.1-r17 or higher.\n## References\n- [https://bugs.busybox.net/show_bug.cgi?id=15865](https://bugs.busybox.net/show_bug.cgi?id=15865)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-416",
                  "apk"
                ],
                "cvssv3_baseScore": 5.5,
                "security-severity": "5.5"
              }
            },
            {
              "id": "SNYK-ALPINE319-OPENSSL-6593965",
              "shortDescription": {
                "text": "Low severity - CVE-2024-2511 vulnerability in openssl"
              },
              "fullDescription": {
                "text": "(CVE-2024-2511) openssl/libcrypto3@3.1.4-r5"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `openssl` package and not the `openssl` package as distributed by `Alpine`._\n_See `How to fix?` for `Alpine:3.19` relevant fixed versions and status._\n\nIssue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.\n## Remediation\nUpgrade `Alpine:3.19` `openssl` to version 3.1.4-r6 or higher.\n## References\n- [https://github.com/openssl/openssl/commit/7e4d731b1c07201ad9374c1cd9ac5263bdf35bce](https://github.com/openssl/openssl/commit/7e4d731b1c07201ad9374c1cd9ac5263bdf35bce)\n- [https://github.com/openssl/openssl/commit/b52867a9f618bb955bed2a3ce3db4d4f97ed8e5d](https://github.com/openssl/openssl/commit/b52867a9f618bb955bed2a3ce3db4d4f97ed8e5d)\n- [https://github.com/openssl/openssl/commit/e9d7083e241670332e0443da0f0d4ffb52829f08](https://github.com/openssl/openssl/commit/e9d7083e241670332e0443da0f0d4ffb52829f08)\n- [https://github.openssl.org/openssl/extended-releases/commit/5f8d25770ae6437db119dfc951e207271a326640](https://github.openssl.org/openssl/extended-releases/commit/5f8d25770ae6437db119dfc951e207271a326640)\n- [https://www.openssl.org/news/secadv/20240408.txt](https://www.openssl.org/news/secadv/20240408.txt)\n- [http://www.openwall.com/lists/oss-security/2024/04/08/5](http://www.openwall.com/lists/oss-security/2024/04/08/5)\n- [https://security.netapp.com/advisory/ntap-20240503-0013/](https://security.netapp.com/advisory/ntap-20240503-0013/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "apk"
                ],
                "cvssv3_baseScore": null,
                "security-severity": "null"
              }
            },
            {
              "id": "SNYK-ALPINE319-OPENSSL-6928853",
              "shortDescription": {
                "text": "Low severity - CVE-2024-4603 vulnerability in openssl"
              },
              "fullDescription": {
                "text": "(CVE-2024-4603) openssl/libcrypto3@3.1.4-r5"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `openssl` package and not the `openssl` package as distributed by `Alpine`._\n_See `How to fix?` for `Alpine:3.19` relevant fixed versions and status._\n\nIssue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.\n## Remediation\nUpgrade `Alpine:3.19` `openssl` to version 3.1.5-r0 or higher.\n## References\n- [https://github.com/openssl/openssl/commit/3559e868e58005d15c6013a0c1fd832e51c73397](https://github.com/openssl/openssl/commit/3559e868e58005d15c6013a0c1fd832e51c73397)\n- [https://github.com/openssl/openssl/commit/53ea06486d296b890d565fb971b2764fcd826e7e](https://github.com/openssl/openssl/commit/53ea06486d296b890d565fb971b2764fcd826e7e)\n- [https://github.com/openssl/openssl/commit/9c39b3858091c152f52513c066ff2c5a47969f0d](https://github.com/openssl/openssl/commit/9c39b3858091c152f52513c066ff2c5a47969f0d)\n- [https://github.com/openssl/openssl/commit/da343d0605c826ef197aceedc67e8e04f065f740](https://github.com/openssl/openssl/commit/da343d0605c826ef197aceedc67e8e04f065f740)\n- [https://www.openssl.org/news/secadv/20240516.txt](https://www.openssl.org/news/secadv/20240516.txt)\n- [http://www.openwall.com/lists/oss-security/2024/05/16/2](http://www.openwall.com/lists/oss-security/2024/05/16/2)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "apk"
                ],
                "cvssv3_baseScore": null,
                "security-severity": "null"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-ALPINE319-BUSYBOX-6913413",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable busybox package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mongo-express_1-20-alpine3.19"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "busybox@1.36.1-r15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to busybox/busybox@1.36.1-r16"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "mongo-express_1-20-alpine3.19"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "busybox/busybox@1.36.1-r16"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-ALPINE319-BUSYBOX-6928845",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable busybox package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mongo-express_1-20-alpine3.19"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "busybox@1.36.1-r15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to busybox/busybox@1.36.1-r17"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "mongo-express_1-20-alpine3.19"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "busybox/busybox@1.36.1-r17"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-ALPINE319-BUSYBOX-6928846",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable busybox package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mongo-express_1-20-alpine3.19"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "busybox@1.36.1-r15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to busybox/busybox@1.36.1-r17"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "mongo-express_1-20-alpine3.19"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "busybox/busybox@1.36.1-r17"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-ALPINE319-BUSYBOX-6928847",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable busybox package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mongo-express_1-20-alpine3.19"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "busybox@1.36.1-r15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to busybox/busybox@1.36.1-r17"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "mongo-express_1-20-alpine3.19"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "busybox/busybox@1.36.1-r17"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-ALPINE319-OPENSSL-6593965",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable openssl package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mongo-express_1-20-alpine3.19"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "openssl@3.1.4-r5"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to openssl/libcrypto3@3.1.4-r6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "mongo-express_1-20-alpine3.19"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "openssl/libcrypto3@3.1.4-r6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-ALPINE319-OPENSSL-6928853",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable openssl package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mongo-express_1-20-alpine3.19"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "openssl@3.1.4-r5"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to openssl/libcrypto3@3.1.5-r0"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "mongo-express_1-20-alpine3.19"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "openssl/libcrypto3@3.1.5-r0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 391
          },
          "rules": [
            {
              "id": "SNYK-JS-BABELTRAVERSE-5962462",
              "shortDescription": {
                "text": "Critical severity - Incomplete List of Disallowed Inputs vulnerability in @babel/traverse"
              },
              "fullDescription": {
                "text": "(CVE-2023-45133) @babel/traverse@7.19.6"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Incomplete List of Disallowed Inputs when using plugins that rely on the `path.evaluate()` or `path.evaluateTruthy()` internal Babel methods. \r\n\r\n\r\n**Note:**\r\n\r\nThis is only exploitable if the attacker uses known affected plugins such as `@babel/plugin-transform-runtime`, `@babel/preset-env` when using its `useBuiltIns` option, and any \"polyfill provider\" plugin that depends on `@babel/helper-define-polyfill-provider`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be.\r\n\r\n*Users that only compile trusted code are **not** impacted.*\r\n\r\n## Workaround\r\n\r\nUsers who are unable to upgrade the library can upgrade the affected plugins instead, to avoid triggering the vulnerable code path in affected `@babel/traverse`.\n## Remediation\nUpgrade `@babel/traverse` to version 7.23.2, 8.0.0-alpha.4 or higher.\n## References\n- [GitHub Commit](https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82)\n- [GitHub PR](https://github.com/babel/babel/pull/16033)\n- [GitHub Release](https://github.com/babel/babel/releases/tag/v7.23.2)\n- [GitHub Release](https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4)\n- [PoC](https://steakenthusiast.github.io/2023/10/11/CVE-2023-45133-Finding-an-Arbitrary-Code-Execution-Vulnerability-In-Babel/)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-184",
                  "yarn"
                ],
                "cvssv3_baseScore": 9.3,
                "security-severity": "9.3"
              }
            },
            {
              "id": "SNYK-JS-ES5EXT-6095076",
              "shortDescription": {
                "text": "High severity - Regular Expression Denial of Service (ReDoS) vulnerability in es5-ext"
              },
              "fullDescription": {
                "text": "(CVE-2024-27088) es5-ext@0.10.62"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) when processing a malicious function name with the `copy()` function.\n## PoC\n```js\r\nconst copy = require('es5-ext/function/#/copy');\r\nvar payload = function CRASHCRASHCRASHCRASHCRASHCRASHCRASHCRASHCRASHCRASHCRASHCRASHCRASH(consoleLog = () => console.log(\"bu\")) {consoleLog();}\r\nvar copiedFunction = copy.call(payload);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `es5-ext` to version 0.10.63 or higher.\n## References\n- [GitHub Commit](https://github.com/medikoo/es5-ext/commit/3551cdd7b2db08b1632841f819d008757d28e8e2)\n- [GitHub Commit](https://github.com/medikoo/es5-ext/commit/a52e95736690ad1d465ebcd9791d54570e294602)\n- [GitHub Issue](https://github.com/medikoo/es5-ext/issues/201)\n- [Vulnerable Code](https://github.com/medikoo/es5-ext/blob/main/function/%23/copy.js#L5)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-1333",
                  "yarn"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-JS-EXPRESS-6474509",
              "shortDescription": {
                "text": "Medium severity - Open Redirect vulnerability in express"
              },
              "fullDescription": {
                "text": "(CVE-2024-29041) express@4.18.2"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[express](https://github.com/expressjs/express) is a minimalist web framework.\n\nAffected versions of this package are vulnerable to Open Redirect due to the implementation of URL encoding using `encodeurl` before passing it to the `location` header. This can lead to unexpected evaluations of malformed URLs by common redirect allow list implementations in applications, allowing an attacker to bypass a properly implemented allow list and redirect users to malicious sites.\n## Remediation\nUpgrade `express` to version 4.19.2, 5.0.0-beta.3 or higher.\n## References\n- [Github Commit](https://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94)\n- [GitHub Commit](https://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd)\n- [Github Issue](https://github.com/koajs/koa/issues/1800)\n- [GitHub PR](https://github.com/expressjs/express/pull/5551)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-601",
                  "yarn"
                ],
                "cvssv3_baseScore": 6.1,
                "security-severity": "6.1"
              }
            },
            {
              "id": "SNYK-JS-EXPRESSFILEUPLOAD-2635697",
              "shortDescription": {
                "text": "Medium severity - Arbitrary File Upload vulnerability in express-fileupload"
              },
              "fullDescription": {
                "text": "(CVE-2022-27140) express-fileupload@1.4.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[express-fileupload](https://github.com/richardgirges/express-fileupload) is a file upload middleware for express that wraps around busboy.\n\nAffected versions of this package are vulnerable to Arbitrary File Upload that allows attackers to execute arbitrary code when uploading a crafted PHP file.\r\n\r\n**NOTE:** The maintainers of this package dispute its validity on the grounds that the attack vector described is the normal usage of the package.\n## Remediation\nThere is no fixed version for `express-fileupload`.\n\n## References\n- [GitHub Issue](https://github.com/richardgirges/express-fileupload/issues/312)\n- [GitHub Issue](https://github.com/richardgirges/express-fileupload/issues/316)\n- [PoC](https://www.youtube.com/watch?v=4XpofFi84KI)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-434",
                  "yarn"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            },
            {
              "id": "SNYK-JS-EXPRESSFILEUPLOAD-2635946",
              "shortDescription": {
                "text": "Medium severity - Arbitrary File Upload vulnerability in express-fileupload"
              },
              "fullDescription": {
                "text": "(CVE-2022-27261) express-fileupload@1.4.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[express-fileupload](https://github.com/richardgirges/express-fileupload) is a file upload middleware for express that wraps around busboy.\n\nAffected versions of this package are vulnerable to Arbitrary File Upload when it is possible for attackers to upload multiple files with the same name, causing an overwrite of files in the web application server.\n## Remediation\nThere is no fixed version for `express-fileupload`.\n\n## References\n- [GitHub Issue](https://github.com/richardgirges/express-fileupload/issues/312)\n- [GitHub Issue](https://github.com/richardgirges/express-fileupload/issues/316)\n- [PoC](https://www.youtube.com/watch?v=3ROHB3ck4tA)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-434",
                  "yarn"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            },
            {
              "id": "SNYK-JS-FASTXMLPARSER-3325616",
              "shortDescription": {
                "text": "Medium severity - Prototype Pollution vulnerability in fast-xml-parser"
              },
              "fullDescription": {
                "text": "(CVE-2023-26920) fast-xml-parser@4.0.11"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[fast-xml-parser](https://www.npmjs.org/package/fast-xml-parser) is a Validate XML, Parse XML, Build XML without C/C++ based libraries\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper argument validation, which is exploitable via the `aName` variable.\r\n\r\n## PoC\r\n```js\r\nconst { XMLParser, XMLBuilder, XMLValidator} = require(\"fast-xml-parser\");\r\n\r\n\r\nlet XMLdata = \"<__proto__><polluted>hacked</polluted></__proto__>\"\r\n\r\nconst parser = new XMLParser();\r\nlet jObj = parser.parse(XMLdata);\r\n\r\nconsole.log(jObj.polluted)\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `fast-xml-parser` to version 4.1.2 or higher.\n## References\n- [GitHub Commit](https://github.com/NaturalIntelligence/fast-xml-parser/commit/2b032a4f799c63d83991e4f992f1c68e4dd05804)\n- [PoC](https://gist.github.com/Sudistark/a5a45bd0804d522a1392cb5023aa7ef7)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-1321",
                  "yarn"
                ],
                "cvssv3_baseScore": 6.5,
                "security-severity": "6.5"
              }
            },
            {
              "id": "SNYK-JS-FASTXMLPARSER-5668858",
              "shortDescription": {
                "text": "High severity - Regular Expression Denial of Service (ReDoS) vulnerability in fast-xml-parser"
              },
              "fullDescription": {
                "text": "(CVE-2023-34104) fast-xml-parser@4.0.11"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[fast-xml-parser](https://www.npmjs.org/package/fast-xml-parser) is a Validate XML, Parse XML, Build XML without C/C++ based libraries\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to allowing special characters in entity names, which are not escaped or sanitized. An attacker can inject an inefficient regex in the entity replacement step of the parser, this can cause the parser to stall for an indefinite amount of time.\r\n\r\n## Workaround\r\n\r\nThis vulnerability can be avoided by not parsing `DOCTYPE` data with the `processEntities: false` option.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `fast-xml-parser` to version 4.2.4 or higher.\n## References\n- [GitHub Commit](https://github.com/NaturalIntelligence/fast-xml-parser/commit/0955739fc404fbb048002920bdaec2d3e469308d)\n- [GitHub Commit](https://github.com/NaturalIntelligence/fast-xml-parser/commit/39b0e050bb909e8499478657f84a3076e39ce76c)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-1333",
                  "yarn"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-JS-INFLIGHT-6095116",
              "shortDescription": {
                "text": "Medium severity - Missing Release of Resource after Effective Lifetime vulnerability in inflight"
              },
              "fullDescription": {
                "text": "inflight@1.0.6"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-772",
                  "yarn"
                ],
                "cvssv3_baseScore": 6.2,
                "security-severity": "6.2"
              }
            },
            {
              "id": "SNYK-JS-IP-6240864",
              "shortDescription": {
                "text": "High severity - Server-side Request Forgery (SSRF) vulnerability in ip"
              },
              "fullDescription": {
                "text": "(CVE-2023-42282) ip@2.0.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `isPublic` function, by failing to identify hex-encoded `0x7f.1` as equivalent to the private addess `127.0.0.1`. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.\n## PoC\n```js\r\nvar ip = require('ip');\r\n\r\nconsole.log(ip.isPublic(\"0x7f.1\"));\r\n//This returns true. It should be false because 0x7f.1 == 127.0.0.1 == 0177.1\r\n```\n## Remediation\nUpgrade `ip` to version 1.1.9, 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa)\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/128)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/138)\n- [Vulnerability Report](https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html)\n- [Vulnerable Code](https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js#L327)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-918",
                  "yarn"
                ],
                "cvssv3_baseScore": 8.6,
                "security-severity": "8.6"
              }
            },
            {
              "id": "SNYK-JS-IP-7148531",
              "shortDescription": {
                "text": "Medium severity - Server-Side Request Forgery (SSRF) vulnerability in ip"
              },
              "fullDescription": {
                "text": "(CVE-2024-29415) ip@2.0.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-918",
                  "yarn"
                ],
                "cvssv3_baseScore": 6.5,
                "security-severity": "6.5"
              }
            },
            {
              "id": "SNYK-JS-JSON5-3182856",
              "shortDescription": {
                "text": "Medium severity - Prototype Pollution vulnerability in json5"
              },
              "fullDescription": {
                "text": "(CVE-2022-46175) json5@2.2.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `parse` method , which does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype (which is the commonly understood definition of Prototype Pollution). Therefore, the actual impact will depend on how applications utilize the returned object and how they filter unwanted keys.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `json5` to version 1.0.2, 2.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972)\n- [GitHub Commit](https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8)\n- [GitHub Issue](https://github.com/json5/json5/issues/199)\n- [GitHub Issue](https://github.com/json5/json5/issues/295)\n- [GitHub Release](https://github.com/json5/json5/releases/tag/v2.2.2)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-1321",
                  "yarn"
                ],
                "cvssv3_baseScore": 6.4,
                "security-severity": "6.4"
              }
            },
            {
              "id": "SNYK-JS-MONGODB-5871303",
              "shortDescription": {
                "text": "Medium severity - Information Exposure vulnerability in mongodb"
              },
              "fullDescription": {
                "text": "(CVE-2021-32050) mongodb@4.13.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[mongodb](https://www.npmjs.com/package/mongodb) is an official MongoDB driver for Node.js.\n\nAffected versions of this package are vulnerable to Information Exposure via the `command listener` feature. When it is enabled (not the default setting), some drivers may inadvertently publish events containing sensitive authentication-related data. An attacker can gain access to this sensitive information by monitoring these published events.\n## Remediation\nUpgrade `mongodb` to version 3.6.10, 4.17.0, 5.8.0 or higher.\n## References\n- [GitHub Commit](https://github.com/mongodb/mongo-c-driver/commit/8a78b0eb0e08084e166ae65719b8b4ed4fcaa96a)\n- [GitHub Commit](https://github.com/mongodb/mongo-cxx-driver/commit/cf4faedfa96c2b63e846a0ec169d458dfc84dbd4)\n- [GitHub Commit](https://github.com/mongodb/mongo-swift-driver/commit/13ec2c88b9331fd2e0da9b29545f73a3b134d42b)\n- [GitHub Commit](https://github.com/mongodb/node-mongodb-native/commit/b98f2061de9e8b0a814e3e7d39a0e914245953d0)\n- [MongoDB Issue](https://jira.mongodb.org/browse/CDRIVER-3797)\n- [MongoDB Issue](https://jira.mongodb.org/browse/CXX-2028)\n- [MongoDB Issue](https://jira.mongodb.org/browse/NODE-3356)\n- [MongoDB Issue](https://jira.mongodb.org/browse/PHPC-1869)\n- [MongoDB Issue](https://jira.mongodb.org/browse/SWIFT-1229)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-200",
                  "yarn"
                ],
                "cvssv3_baseScore": 4.2,
                "security-severity": "4.2"
              }
            },
            {
              "id": "SNYK-JS-SEMVER-3247795",
              "shortDescription": {
                "text": "High severity - Regular Expression Denial of Service (ReDoS) vulnerability in semver"
              },
              "fullDescription": {
                "text": "(CVE-2022-25883) semver@6.3.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-1333",
                  "yarn"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-JS-BABELTRAVERSE-5962462",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable @babel/traverse package with a critical severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "@babel/traverse@7.19.6"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to nyc@15.1.0"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/app/package.json"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "nyc@15.1.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-ES5EXT-6095076",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable es5-ext package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "es5-ext@0.10.62"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to cli-color@2.0.3"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/app/package.json"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "cli-color@2.0.3"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-EXPRESS-6474509",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable express package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "express@4.18.2"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to express@4.19.2"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/app/package.json"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "express@4.19.2"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-EXPRESSFILEUPLOAD-2635697",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable express-fileupload package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "express-fileupload@1.4.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-EXPRESSFILEUPLOAD-2635946",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable express-fileupload package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "express-fileupload@1.4.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-FASTXMLPARSER-3325616",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable fast-xml-parser package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fast-xml-parser@4.0.11"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to mongodb@4.13.0"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/app/package.json"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "mongodb@4.13.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-FASTXMLPARSER-5668858",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable fast-xml-parser package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fast-xml-parser@4.0.11"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to mongodb@4.13.0"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/app/package.json"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "mongodb@4.13.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-INFLIGHT-6095116",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable inflight package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "inflight@1.0.6"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-IP-6240864",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable ip package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "ip@2.0.0"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to mongodb@4.13.0"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/app/package.json"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "mongodb@4.13.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-IP-7148531",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable ip package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "ip@2.0.0"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to mongodb@4.13.0"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/app/package.json"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "mongodb@4.13.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-JSON5-3182856",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable json5 package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "json5@2.2.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to nyc@15.1.0"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/app/package.json"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "nyc@15.1.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-MONGODB-5871303",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable mongodb package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "mongodb@4.13.0"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to mongodb@4.17.0"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/app/package.json"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "mongodb@4.17.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JS-SEMVER-3247795",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable semver package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/app/package.json"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "semver@6.3.0"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to nyc@15.1.0"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/app/package.json"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "nyc@15.1.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
