{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2022-48174_3.17:busybox-binsh_1.35.0-r31",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.17:busybox-binsh 1.35.0-r31"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__b2a6aa582d9a2f02967f9dc1c463e017abdc5e758711b50b8be069cd8152bd51.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.17:ssl_client_1.35.0-r31",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.17:ssl_client 1.35.0-r31"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__b2a6aa582d9a2f02967f9dc1c463e017abdc5e758711b50b8be069cd8152bd51.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.17:busybox_1.35.0-r31",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.17:busybox 1.35.0-r31"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__b2a6aa582d9a2f02967f9dc1c463e017abdc5e758711b50b8be069cd8152bd51.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-13012_3.17:gtk+2.0_2.24.33-r7",
              "shortDescription": {
                "text": "[CVE-2019-13012] 3.17:gtk+2.0 2.24.33-r7"
              },
              "help": {
                "text": "The keyfile settings backend in GNOME GLib (aka glib2.0) before 2.60.0 creates directories using g_file_make_directory_with_parents (kfsb-\u003edir, NULL, NULL) and files using g_file_replace_contents (kfsb-\u003efile, contents, length, NULL, FALSE, G_FILE_CREATE_REPLACE_DESTINATION, NULL, NULL, NULL). Consequently, it does not properly restrict directory (and file) permissions. Instead, for directories, 0777 permissions are used; for files, default file permissions are used. This is similar to CVE-2019-12450.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2014-1949_3.17:gtk+2.0_2.24.33-r7",
              "shortDescription": {
                "text": "[CVE-2014-1949] 3.17:gtk+2.0 2.24.33-r7"
              },
              "help": {
                "text": "GTK+ 3.10.9 and earlier, as used in cinnamon-screensaver, gnome-screensaver, and other applications, allows physically proximate attackers to bypass the lock screen by pressing the menu button.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-35457_3.17:gtk+2.0_2.24.33-r7",
              "shortDescription": {
                "text": "[CVE-2020-35457] 3.17:gtk+2.0 2.24.33-r7"
              },
              "help": {
                "text": "GNOME GLib before 2.65.3 has an integer overflow, that might lead to an out-of-bounds write, in g_option_group_add_entries. NOTE: the vendor's position is \"Realistically this is not a security issue. The standard pattern is for callers to provide a static list of option entries in a fixed number of calls to g_option_group_add_entries().\" The researcher states that this pattern is undocumented",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-43666_3.17:mbedtls_2.28.8-r0",
              "shortDescription": {
                "text": "[CVE-2021-43666] 3.17:mbedtls 2.28.8-r0"
              },
              "help": {
                "text": "A Denial of Service vulnerability exists in mbed TLS 3.0.0 and earlier in the mbedtls_pkcs12_derivation function when an input password's length is 0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-23744_3.17:mbedtls_2.28.8-r0",
              "shortDescription": {
                "text": "[CVE-2024-23744] 3.17:mbedtls 2.28.8-r0"
              },
              "help": {
                "text": "An issue was discovered in Mbed TLS 3.5.1. There is persistent handshake denial if a client sends a TLS 1.3 ClientHello without extensions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-52353_3.17:mbedtls_2.28.8-r0",
              "shortDescription": {
                "text": "[CVE-2023-52353] 3.17:mbedtls 2.28.8-r0"
              },
              "help": {
                "text": "An issue was discovered in Mbed TLS through 3.5.1. In mbedtls_ssl_session_reset, the maximum negotiable TLS version is mishandled. For example, if the last connection negotiated TLS 1.2, then 1.2 becomes the new maximum.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-45451_3.17:mbedtls_2.28.8-r0",
              "shortDescription": {
                "text": "[CVE-2021-45451] 3.17:mbedtls 2.28.8-r0"
              },
              "help": {
                "text": "In Mbed TLS before 3.1.0, psa_aead_generate_nonce allows policy bypass or oracle-based decryption when the output buffer is at memory locations accessible to an untrusted application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2005-2975_3.17:gdk-pixbuf_2.42.10-r0",
              "shortDescription": {
                "text": "[CVE-2005-2975] 3.17:gdk-pixbuf 2.42.10-r0"
              },
              "help": {
                "text": "io-xpm.c in the gdk-pixbuf XPM image rendering library in GTK+ before 2.8.7 allows attackers to cause a denial of service (infinite loop) via a crafted XPM image with a large number of colors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-38470_3.17:avahi-libs_0.8-r6",
              "shortDescription": {
                "text": "[CVE-2023-38470] 3.17:avahi-libs 0.8-r6"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_escape_label() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [0.8-r16]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-2804_3.17:libjpeg-turbo_2.1.4-r0",
              "shortDescription": {
                "text": "[CVE-2023-2804] 3.17:libjpeg-turbo 2.1.4-r0"
              },
              "help": {
                "text": "A heap-based buffer overflow issue was discovered in libjpeg-turbo in h2v2_merged_upsample_internal() function of jdmrgext.c file. The vulnerability can only be exploited with 12-bit data precision for which the range of the sample data type exceeds the valid sample range, hence, an attacker could craft a 12-bit lossless JPEG image that contains out-of-range 12-bit samples. An application attempting to decompress such image using merged upsampling would lead to segmentation fault or buffer overflows, causing an application to crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [2.1.5.1-r4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-5981_3.17:gnutls_3.7.8-r3",
              "shortDescription": {
                "text": "[CVE-2023-5981] 3.17:gnutls 3.7.8-r3"
              },
              "help": {
                "text": "A vulnerability was found that the response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from response times of ciphertexts with correct PKCS#1 v1.5 padding.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [3.8.3-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-4039_3.17:libstdc++_12.2.1_git20220924-r4",
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.17:libstdc++ 12.2.1_git20220924-r4"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [13.2.1_git20231014-r0]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-38472_3.17:avahi-libs_0.8-r6",
              "shortDescription": {
                "text": "[CVE-2023-38472] 3.17:avahi-libs 0.8-r6"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_rdata_parse() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [0.8-r14]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-38469_3.17:avahi-libs_0.8-r6",
              "shortDescription": {
                "text": "[CVE-2023-38469] 3.17:avahi-libs 0.8-r6"
              },
              "help": {
                "text": "A vulnerability was found in Avahi, where a reachable assertion exists in avahi_dns_packet_append_record.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [0.8-r15]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-38471_3.17:avahi-libs_0.8-r6",
              "shortDescription": {
                "text": "[CVE-2023-38471] 3.17:avahi-libs 0.8-r6"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the dbus_set_host_name function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [0.8-r15]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-4039_3.17:libgcc_12.2.1_git20220924-r4",
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.17:libgcc 12.2.1_git20220924-r4"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [13.2.1_git20231014-r0]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-38473_3.17:avahi-libs_0.8-r6",
              "shortDescription": {
                "text": "[CVE-2023-38473] 3.17:avahi-libs 0.8-r6"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_alternative_host_name() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [0.8-r14]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-1981_3.17:avahi-libs_0.8-r6",
              "shortDescription": {
                "text": "[CVE-2023-1981] 3.17:avahi-libs 0.8-r6"
              },
              "help": {
                "text": "A vulnerability was found in the avahi library. This flaw allows an unprivileged user to make a dbus call, causing the avahi daemon to crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [0.8-r14]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-36647_3.17:mbedtls_2.28.8-r0",
              "shortDescription": {
                "text": "[CVE-2021-36647] 3.17:mbedtls 2.28.8-r0"
              },
              "help": {
                "text": "Use of a Broken or Risky Cryptographic Algorithm in the function mbedtls_mpi_exp_mod() in lignum.c in Mbed TLS Mbed TLS all versions before 3.0.0, 2.27.0 or 2.16.11 allows attackers with access to precise enough timing and memory access information (typically an untrusted operating system attacking a secure enclave such as SGX or the TrustZone secure world) to recover the private keys used in RSA.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [2.16.12-r0]   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2023-1916_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-1916] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "A flaw was found in tiffcrop, a program distributed by the libtiff package. A specially crafted tiff file can lead to an out-of-bounds read in the extractImageSection function in tools/tiffcrop.c, resulting in a denial of service and limited information disclosure. This issue affects libtiff versions 4.x.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-2908_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-2908] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "A null pointer dereference issue was found in Libtiff's tif_dir.c file. This issue may allow an attacker to pass a crafted TIFF image file to the tiffcp utility which triggers a runtime error that causes undefined behavior. This will result in an application crash, eventually leading to a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-3800_3.17:gtk+2.0_2.24.33-r7",
              "shortDescription": {
                "text": "[CVE-2021-3800] 3.17:gtk+2.0 2.24.33-r7"
              },
              "help": {
                "text": "A flaw was found in glib before version 2.63.6. Due to random charset alias, pkexec can leak content from files owned by privileged users to unprivileged ones under the right condition.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-32611_3.17:gtk+2.0_2.24.33-r7",
              "shortDescription": {
                "text": "[CVE-2023-32611] 3.17:gtk+2.0 2.24.33-r7"
              },
              "help": {
                "text": "A flaw was found in GLib. GVariant deserialization is vulnerable to a slowdown issue where a crafted GVariant can cause excessive processing, leading to denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2012-0039_3.17:gtk+2.0_2.24.33-r7",
              "shortDescription": {
                "text": "[CVE-2012-0039] 3.17:gtk+2.0 2.24.33-r7"
              },
              "help": {
                "text": "GLib 2.31.8 and earlier, when the g_str_hash function is used, computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table. NOTE: this issue may be disputed by the vendor; the existence of the g_str_hash function is not a vulnerability in the library, because callers of g_hash_table_new and g_hash_table_new_full can specify an arbitrary hash function that is appropriate for the application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-3164_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-3164] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "A heap-buffer-overflow vulnerability was found in LibTIFF, in extractImageSection() at tools/tiffcrop.c:7916 and tools/tiffcrop.c:7801. This flaw allows attackers to cause a denial of service via a crafted tiff file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-32665_3.17:gtk+2.0_2.24.33-r7",
              "shortDescription": {
                "text": "[CVE-2023-32665] 3.17:gtk+2.0 2.24.33-r7"
              },
              "help": {
                "text": "A flaw was found in GLib. GVariant deserialization is vulnerable to an exponential blowup issue where a crafted GVariant can cause excessive processing, leading to denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-4214_3.17:libpng_1.6.39-r0",
              "shortDescription": {
                "text": "[CVE-2021-4214] 3.17:libpng 1.6.39-r0"
              },
              "help": {
                "text": "A heap overflow flaw was found in libpngs' pngimage.c program. This flaw allows an attacker with local network access to pass a specially crafted PNG file to the pngimage utility, causing an application to crash, leading to a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-3618_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-3618] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "A flaw was found in libtiff. A specially crafted tiff file can lead to a segmentation fault due to a buffer overflow in the Fax3Encode function in libtiff/tif_fax3.c, resulting in a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45322_3.17:libxml2_2.10.4-r0",
              "shortDescription": {
                "text": "[CVE-2023-45322] 3.17:libxml2 2.10.4-r0"
              },
              "help": {
                "text": "libxml2 through 2.11.5 has a use-after-free that can only occur after a certain memory allocation fails. This occurs in xmlUnlinkNode in tree.c. NOTE: the vendor's position is \"I don't think these issues are critical enough to warrant a CVE ID ... because an attacker typically can't control when memory allocations fail.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-3576_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-3576] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "A memory leak flaw was found in Libtiff's tiffcrop utility. This issue occurs when tiffcrop operates on a TIFF image file, allowing an attacker to pass a crafted TIFF image file to tiffcrop utility, which causes this memory leak issue, resulting an application crash, eventually leading to a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-2731_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-2731] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "A NULL pointer dereference flaw was found in Libtiff's LZWDecode() function in the libtiff/tif_lzw.c file. This flaw allows a local attacker to craft specific input data that can cause the program to dereference a NULL pointer when decompressing a TIFF format file, resulting in a program crash or denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-34459_3.17:libxml2_2.10.4-r0",
              "shortDescription": {
                "text": "[CVE-2024-34459] 3.17:libxml2 2.10.4-r0"
              },
              "help": {
                "text": "An issue was discovered in xmllint (from libxml2) before 2.11.8 and 2.12.x before 2.12.7. Formatting error messages with xmllint --htmlout can result in a buffer over-read in xmlHTMLPrintFileContext in xmllint.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [2.12.7-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_3.17:libblkid_2.38.1-r1",
              "shortDescription": {
                "text": "[CVE-2024-28085] 3.17:libblkid 2.38.1-r1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [2.40-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-5535_3.17:libcrypto3_3.0.13-r0",
              "shortDescription": {
                "text": "[CVE-2024-5535] 3.17:libcrypto3 3.0.13-r0"
              },
              "help": {
                "text": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b2a6aa582d9a2f02967f9dc1c463e017abdc5e758711b50b8be069cd8152bd51.tar `       | [3.3.1-r1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_3.17:libmount_2.38.1-r1",
              "shortDescription": {
                "text": "[CVE-2024-28085] 3.17:libmount 2.38.1-r1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [2.40-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-5535_3.17:libssl3_3.0.13-r0",
              "shortDescription": {
                "text": "[CVE-2024-5535] 3.17:libssl3 3.0.13-r0"
              },
              "help": {
                "text": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__b2a6aa582d9a2f02967f9dc1c463e017abdc5e758711b50b8be069cd8152bd51.tar `       | [3.3.1-r1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-34397_3.17:glib_2.74.7-r0",
              "shortDescription": {
                "text": "[CVE-2024-34397] 3.17:glib 2.74.7-r0"
              },
              "help": {
                "text": "An issue was discovered in GNOME GLib before 2.78.5, and 2.79.x and 2.80.x before 2.80.1. When a GDBus-based client subscribes to signals from a trusted system service such as NetworkManager on a shared computer, other users of the same computer can send spoofed D-Bus signals that the GDBus-based client will wrongly interpret as having been sent by the trusted system service. This could lead to the GDBus-based client behaving incorrectly, with an application-dependent impact.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [2.80.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28835_3.17:gnutls_3.7.8-r3",
              "shortDescription": {
                "text": "[CVE-2024-28835] 3.17:gnutls 3.7.8-r3"
              },
              "help": {
                "text": "A flaw has been discovered in GnuTLS where an application crash can be induced when attempting to verify a specially crafted .pem bundle using the \"certtool --verify-chain\" command.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [3.8.5-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_3.17:libuuid_2.38.1-r1",
              "shortDescription": {
                "text": "[CVE-2024-28085] 3.17:libuuid 2.38.1-r1"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [2.40-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28834_3.17:gnutls_3.7.8-r3",
              "shortDescription": {
                "text": "[CVE-2024-28834] 3.17:gnutls 3.7.8-r3"
              },
              "help": {
                "text": "A flaw was found in GnuTLS. The Minerva attack is a cryptographic vulnerability that exploits deterministic behavior in systems like GnuTLS, leading to side-channel leaks. In specific scenarios, such as when using the GNUTLS_PRIVKEY_FLAG_REPRODUCIBLE flag, it can result in a noticeable step in nonce size from 513 to 512 bits, exposing a potential timing side-channel.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [3.8.5-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-32643_3.17:glib_2.74.7-r0",
              "shortDescription": {
                "text": "[CVE-2023-32643] 3.17:glib 2.74.7-r0"
              },
              "help": {
                "text": "A flaw was found in GLib. The GVariant deserialization code is vulnerable to a heap buffer overflow introduced by the fix for CVE-2023-32665. This bug does not affect any released version of GLib, but does affect GLib distributors who followed the guidance of GLib developers to backport the initial fix for CVE-2023-32665.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2024-0567_3.17:gnutls_3.7.8-r3",
              "shortDescription": {
                "text": "[CVE-2024-0567] 3.17:gnutls 3.7.8-r3"
              },
              "help": {
                "text": "A vulnerability was found in GnuTLS, where a cockpit (which uses gnuTLS) rejects a certificate chain with distributed trust. This issue occurs when validating a certificate chain with cockpit-certificate-ensure. This flaw allows an unauthenticated, remote client or attacker to initiate a denial of service attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [3.8.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-48622_3.17:gdk-pixbuf_2.42.10-r0",
              "shortDescription": {
                "text": "[CVE-2022-48622] 3.17:gdk-pixbuf 2.42.10-r0"
              },
              "help": {
                "text": "In GNOME GdkPixbuf (aka gdk-pixbuf) through 2.42.10, the ANI (Windows animated cursor) decoder encounters heap memory corruption (in ani_load_chunk in io-ani.c) when parsing chunks in a crafted .ani file. A crafted file could allow an attacker to overwrite heap metadata, leading to a denial of service or code execution attack. This occurs in gdk_pixbuf_set_option() in gdk-pixbuf.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-32643_3.17:gtk+2.0_2.24.33-r7",
              "shortDescription": {
                "text": "[CVE-2023-32643] 3.17:gtk+2.0 2.24.33-r7"
              },
              "help": {
                "text": "A flaw was found in GLib. The GVariant deserialization code is vulnerable to a heap buffer overflow introduced by the fix for CVE-2023-32665. This bug does not affect any released version of GLib, but does affect GLib distributors who followed the guidance of GLib developers to backport the initial fix for CVE-2023-32665.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-29499_3.17:gtk+2.0_2.24.33-r7",
              "shortDescription": {
                "text": "[CVE-2023-29499] 3.17:gtk+2.0 2.24.33-r7"
              },
              "help": {
                "text": "A flaw was found in GLib. GVariant deserialization fails to validate that the input conforms to the expected format, leading to denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-32636_3.17:gtk+2.0_2.24.33-r7",
              "shortDescription": {
                "text": "[CVE-2023-32636] 3.17:gtk+2.0 2.24.33-r7"
              },
              "help": {
                "text": "A flaw was found in glib, where the gvariant deserialization code is vulnerable to a denial of service introduced by additional input validation added to resolve CVE-2023-29499. The offset table validation may be very slow. This bug does not affect any released version of glib but does affect glib distributors who followed the guidance of glib developers to backport the initial fix for CVE-2023-29499.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-52355_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-52355] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "An out-of-memory flaw was found in libtiff that could be triggered by passing a crafted tiff file to the TIFFRasterScanlineSize64() API. This flaw allows a remote attacker to cause a denial of service via a crafted input with a size smaller than 379 KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-2004_3.17:freetype_2.12.1-r0",
              "shortDescription": {
                "text": "[CVE-2023-2004] 3.17:freetype 2.12.1-r0"
              },
              "help": {
                "text": "An integer overflow vulnerability was discovered in Freetype in tt_hvadvance_adjust() function in src/truetype/ttgxvar.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-25062_3.17:libxml2_2.10.4-r0",
              "shortDescription": {
                "text": "[CVE-2024-25062] 3.17:libxml2 2.10.4-r0"
              },
              "help": {
                "text": "An issue was discovered in libxml2 before 2.11.7 and 2.12.x before 2.12.5. When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [2.12.5-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-0553_3.17:gnutls_3.7.8-r3",
              "shortDescription": {
                "text": "[CVE-2024-0553] 3.17:gnutls 3.7.8-r3"
              },
              "help": {
                "text": "A vulnerability was found in GnuTLS. The response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from the response times of ciphertexts with correct PKCS#1 v1.5 padding. This issue may allow a remote attacker to perform a timing side-channel attack in the RSA-PSK key exchange, potentially leading to the leakage of sensitive data. CVE-2024-0553 is designated as an incomplete resolution for CVE-2023-5981.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [3.8.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-26965_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-26965] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "loadImage() in tools/tiffcrop.c in LibTIFF through 4.5.0 has a heap-based use after free via a crafted TIFF image.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-41175_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-41175] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "A vulnerability was found in libtiff due to multiple potential integer overflows in raw2tiff.c. This flaw allows remote attackers to cause a denial of service or possibly execute an arbitrary code via a crafted tiff image, which triggers a heap-based buffer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-3213_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2022-3213] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "A heap buffer overflow issue was found in ImageMagick. When an application processes a malformed TIFF file, it could lead to undefined behavior or a crash causing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | [4.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-40745_3.17:tiff_4.4.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-40745] 3.17:tiff 4.4.0-r4"
              },
              "help": {
                "text": "LibTIFF is vulnerable to an integer overflow. This flaw allows remote attackers to cause a denial of service (application crash) or possibly execute an arbitrary code via a crafted tiff image, which triggers a heap-based buffer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            }
          ],
          "version": "3.97.3"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2022-48174_3.17:busybox-binsh_1.35.0-r31",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__b2a6aa582d9a2f02967f9dc1c463e017abdc5e758711b50b8be069cd8152bd51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.17:ssl_client_1.35.0-r31",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__b2a6aa582d9a2f02967f9dc1c463e017abdc5e758711b50b8be069cd8152bd51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.17:busybox_1.35.0-r31",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__b2a6aa582d9a2f02967f9dc1c463e017abdc5e758711b50b8be069cd8152bd51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-13012_3.17:gtk+2.0_2.24.33-r7",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2019-13012] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2014-1949_3.17:gtk+2.0_2.24.33-r7",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2014-1949] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-35457_3.17:gtk+2.0_2.24.33-r7",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2020-35457] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43666_3.17:mbedtls_2.28.8-r0",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2021-43666] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-23744_3.17:mbedtls_2.28.8-r0",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2024-23744] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52353_3.17:mbedtls_2.28.8-r0",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2023-52353] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-45451_3.17:mbedtls_2.28.8-r0",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2021-45451] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2005-2975_3.17:gdk-pixbuf_2.42.10-r0",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2005-2975] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38470_3.17:avahi-libs_0.8-r6",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38470] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2804_3.17:libjpeg-turbo_2.1.4-r0",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2804] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5981_3.17:gnutls_3.7.8-r3",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-5981] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_3.17:libstdc++_12.2.1_git20220924-r4",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38472_3.17:avahi-libs_0.8-r6",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38472] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38469_3.17:avahi-libs_0.8-r6",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38469] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38471_3.17:avahi-libs_0.8-r6",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38471] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_3.17:libgcc_12.2.1_git20220924-r4",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38473_3.17:avahi-libs_0.8-r6",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38473] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-1981_3.17:avahi-libs_0.8-r6",
          "ruleIndex": 20,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-1981] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36647_3.17:mbedtls_2.28.8-r0",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36647] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-1916_3.17:tiff_4.4.0-r4",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-1916] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2908_3.17:tiff_4.4.0-r4",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2908] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3800_3.17:gtk+2.0_2.24.33-r7",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3800] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32611_3.17:gtk+2.0_2.24.33-r7",
          "ruleIndex": 25,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-32611] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2012-0039_3.17:gtk+2.0_2.24.33-r7",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "[CVE-2012-0039] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3164_3.17:tiff_4.4.0-r4",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3164] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32665_3.17:gtk+2.0_2.24.33-r7",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-32665] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-4214_3.17:libpng_1.6.39-r0",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-4214] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3618_3.17:tiff_4.4.0-r4",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3618] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45322_3.17:libxml2_2.10.4-r0",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45322] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3576_3.17:tiff_4.4.0-r4",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3576] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2731_3.17:tiff_4.4.0-r4",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2731] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34459_3.17:libxml2_2.10.4-r0",
          "ruleIndex": 34,
          "level": "none",
          "message": {
            "text": "[CVE-2024-34459] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_3.17:libblkid_2.38.1-r1",
          "ruleIndex": 35,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-5535_3.17:libcrypto3_3.0.13-r0",
          "ruleIndex": 36,
          "level": "none",
          "message": {
            "text": "[CVE-2024-5535] sha256__b2a6aa582d9a2f02967f9dc1c463e017abdc5e758711b50b8be069cd8152bd51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_3.17:libmount_2.38.1-r1",
          "ruleIndex": 37,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-5535_3.17:libssl3_3.0.13-r0",
          "ruleIndex": 38,
          "level": "none",
          "message": {
            "text": "[CVE-2024-5535] sha256__b2a6aa582d9a2f02967f9dc1c463e017abdc5e758711b50b8be069cd8152bd51.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34397_3.17:glib_2.74.7-r0",
          "ruleIndex": 39,
          "level": "none",
          "message": {
            "text": "[CVE-2024-34397] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28835_3.17:gnutls_3.7.8-r3",
          "ruleIndex": 40,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28835] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_3.17:libuuid_2.38.1-r1",
          "ruleIndex": 41,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28834_3.17:gnutls_3.7.8-r3",
          "ruleIndex": 42,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28834] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32643_3.17:glib_2.74.7-r0",
          "ruleIndex": 43,
          "level": "error",
          "message": {
            "text": "[CVE-2023-32643] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0567_3.17:gnutls_3.7.8-r3",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "[CVE-2024-0567] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48622_3.17:gdk-pixbuf_2.42.10-r0",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48622] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32643_3.17:gtk+2.0_2.24.33-r7",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "[CVE-2023-32643] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29499_3.17:gtk+2.0_2.24.33-r7",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29499] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32636_3.17:gtk+2.0_2.24.33-r7",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "[CVE-2023-32636] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52355_3.17:tiff_4.4.0-r4",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "[CVE-2023-52355] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2004_3.17:freetype_2.12.1-r0",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "[CVE-2023-2004] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-25062_3.17:libxml2_2.10.4-r0",
          "ruleIndex": 51,
          "level": "error",
          "message": {
            "text": "[CVE-2024-25062] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0553_3.17:gnutls_3.7.8-r3",
          "ruleIndex": 52,
          "level": "error",
          "message": {
            "text": "[CVE-2024-0553] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26965_3.17:tiff_4.4.0-r4",
          "ruleIndex": 53,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-26965] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-41175_3.17:tiff_4.4.0-r4",
          "ruleIndex": 54,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-41175] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3213_3.17:tiff_4.4.0-r4",
          "ruleIndex": 55,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-3213] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-40745_3.17:tiff_4.4.0-r4",
          "ruleIndex": 56,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-40745] sha256__50d5ac83511f718aa9f708ef12b21c87c331a103fbd6633150eea9856f86d881.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2023-2004",
              "name": "CVE-2023-2004",
              "shortDescription": {
                "text": "Scanner for CVE-2023-2004"
              },
              "fullDescription": {
                "text": "The scanner checks whether the following vulnerable functions are called:\n\n- `FT_Get_Advance`\n- `FT_Get_Advances`\n- `FT_Get_PFR_Metrics`\n- `FT_Get_PFR_Advance`\n- `FT_Load_Glyph`\n- `FT_Load_Char`",
                "markdown": "The scanner checks whether the following vulnerable functions are called:\n\n- `FT_Get_Advance`\n- `FT_Get_Advances`\n- `FT_Get_PFR_Metrics`\n- `FT_Get_PFR_Advance`\n- `FT_Load_Glyph`\n- `FT_Load_Char`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-26965",
              "name": "CVE-2023-26965",
              "shortDescription": {
                "text": "Scanner for CVE-2023-26965"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable `tiffcrop` binary is present in the image.\n\nNote that the scanner does not check whether `tiffcrop` is invoked with arbitrary image files.",
                "markdown": "The scanner checks whether the vulnerable `tiffcrop` binary is present in the image.\n\nNote that the scanner does not check whether `tiffcrop` is invoked with arbitrary image files."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-41175",
              "name": "CVE-2023-41175",
              "shortDescription": {
                "text": "Scanner for CVE-2023-41175"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-40745",
              "name": "CVE-2023-40745",
              "shortDescription": {
                "text": "Scanner for CVE-2023-40745"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29499",
              "name": "CVE-2023-29499",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29499"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `g_variant_is_normal_form()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `g_variant_is_normal_form()` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-32643",
              "name": "CVE-2023-32643",
              "shortDescription": {
                "text": "Scanner for CVE-2023-32643"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called:\n\n- `g_variant_new`\n- `g_variant_new_array`\n- `g_variant_new_bytestring`\n- `g_variant_new_bytestring_array`\n- `g_variant_new_dict_entry`\n- `g_variant_new_fixed_array`\n- `g_variant_new_from_bytes`\n- `g_variant_new_from_data`\n- `g_variant_new_maybe`\n- `g_variant_new_objv`\n- `g_variant_new_printf`\n- `g_variant_new_strv`\n- `g_variant_new_tuple`\n- `g_variant_new_va`",
                "markdown": "The scanner checks whether any of the following functions are called:\n\n- `g_variant_new`\n- `g_variant_new_array`\n- `g_variant_new_bytestring`\n- `g_variant_new_bytestring_array`\n- `g_variant_new_dict_entry`\n- `g_variant_new_fixed_array`\n- `g_variant_new_from_bytes`\n- `g_variant_new_from_data`\n- `g_variant_new_maybe`\n- `g_variant_new_objv`\n- `g_variant_new_printf`\n- `g_variant_new_strv`\n- `g_variant_new_tuple`\n- `g_variant_new_va`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-32636",
              "name": "CVE-2023-32636",
              "shortDescription": {
                "text": "Scanner for CVE-2023-32636"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called:\n\n- `g_variant_new`\n- `g_variant_new_array`\n- `g_variant_new_bytestring`\n- `g_variant_new_bytestring_array`\n- `g_variant_new_dict_entry`\n- `g_variant_new_fixed_array`\n- `g_variant_new_from_bytes`\n- `g_variant_new_from_data`\n- `g_variant_new_maybe`\n- `g_variant_new_objv`\n- `g_variant_new_printf`\n- `g_variant_new_strv`\n- `g_variant_new_tuple`\n- `g_variant_new_va`",
                "markdown": "The scanner checks whether any of the following functions are called:\n\n- `g_variant_new`\n- `g_variant_new_array`\n- `g_variant_new_bytestring`\n- `g_variant_new_bytestring_array`\n- `g_variant_new_dict_entry`\n- `g_variant_new_fixed_array`\n- `g_variant_new_from_bytes`\n- `g_variant_new_from_data`\n- `g_variant_new_maybe`\n- `g_variant_new_objv`\n- `g_variant_new_printf`\n- `g_variant_new_strv`\n- `g_variant_new_tuple`\n- `g_variant_new_va`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-3213",
              "name": "CVE-2022-3213",
              "shortDescription": {
                "text": "Scanner for CVE-2022-3213"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Image.read()` is called or a vulnerable tool of ImageMagick is present in the image.\nNote: it does not check if there is any script calling a vulnerable tool yet.",
                "markdown": "The scanner checks whether the vulnerable function `Image.read()` is called or a vulnerable tool of ImageMagick is present in the image.\nNote: it does not check if there is any script calling a vulnerable tool yet."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-52355",
              "name": "CVE-2023-52355",
              "shortDescription": {
                "text": "Scanner for CVE-2023-52355"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called:\n\n- `TIFFRasterScanlineSize64()`\n- `TIFFRasterScanlineSize()`",
                "markdown": "The scanner checks whether any of the following functions are called:\n\n- `TIFFRasterScanlineSize64()`\n- `TIFFRasterScanlineSize()`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-48622",
              "name": "CVE-2022-48622",
              "shortDescription": {
                "text": "Scanner for CVE-2022-48622"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the next functions are called:\n\n* `gdk_pixbuf_animation_new_from_file`\n\n* `gdk_pixbuf_animation_new_from_resource`\n\n* `gdk_pixbuf_animation_new_from_stream`\n\n* `gdk_pixbuf_new_from_file`\n\n* `gdk_pixbuf_new_from_file_at_size`\n\n* `gdk_pixbuf_new_from_file_at_scale`",
                "markdown": "The scanner checks whether any of the next functions are called:\n\n* `gdk_pixbuf_animation_new_from_file`\n\n* `gdk_pixbuf_animation_new_from_resource`\n\n* `gdk_pixbuf_animation_new_from_stream`\n\n* `gdk_pixbuf_new_from_file`\n\n* `gdk_pixbuf_new_from_file_at_size`\n\n* `gdk_pixbuf_new_from_file_at_scale`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-25062",
              "name": "CVE-2024-25062",
              "shortDescription": {
                "text": "Scanner for CVE-2024-25062"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called:\n\n* `xmlValidatePopElement()`\n* `xmlTextReaderClose()`\n* `xmlFreeTextReader() `\n* `xmlTextReaderRead()`\n* `xmlSchemaValidateDoc()`",
                "markdown": "The scanner checks whether any of the following functions are called:\n\n* `xmlValidatePopElement()`\n* `xmlTextReaderClose()`\n* `xmlFreeTextReader() `\n* `xmlTextReaderRead()`\n* `xmlSchemaValidateDoc()`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-0553",
              "name": "CVE-2024-0553",
              "shortDescription": {
                "text": "Scanner for CVE-2024-0553"
              },
              "fullDescription": {
                "text": "The scanner checks if RSA decryption occurs by finding calls to any of the following functions:\n\n- `gnutls_privkey_decrypt_data`\n\n- `gnutls_privkey_decrypt_data2`\n\nAn additional condition (that the scanner does not currently check) is required for the CVE to be applicable: the RSA padding algorithm needs to be `PKCS#1`. `key-\u003epk_algorithm` needs to be equal to `GNUTLS_PK_RSA`.",
                "markdown": "The scanner checks if RSA decryption occurs by finding calls to any of the following functions:\n\n- `gnutls_privkey_decrypt_data`\n\n- `gnutls_privkey_decrypt_data2`\n\nAn additional condition (that the scanner does not currently check) is required for the CVE to be applicable: the RSA padding algorithm needs to be `PKCS#1`. `key-\u003epk_algorithm` needs to be equal to `GNUTLS_PK_RSA`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-0567",
              "name": "CVE-2024-0567",
              "shortDescription": {
                "text": "Scanner for CVE-2024-0567"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following vulnerable functions are called:\n\n- `gnutls_pcert_import_x509_list`\n\n- `gnutls_certificate_set_x509_key`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_mem`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_file`\n\n- `gnutls_privkey_import_url`\n\n- `gnutls_privkey_import_pkcs11_url`\n\n- `gnutls_read_key_file`\n\n- `gnutls_certificate_set_rawpk_key_file`\n\n- `gnutls_certificate_set_x509_key_file2`\n\n- `gnutls_certificate_set_x509_key_file`\n\n- `gnutls_pcert_list_import_x509_file`\n\n- `gnutls_certificate_set_x509_key_mem2`\n\n- `gnutls_certificate_set_x509_key_mem`\n\n- `gnutls_x509_crt_list_import`\n\n- `gnutls_pcert_list_import_x509_raw`\n\n- `gnutls_session_channel_binding`\n\n- `gnutls_x509_crt_list_import2`\n\n- `gnutls_x509_trust_list_add_trust_mem`\n\n- `gnutls_x509_trust_list_add_system_trust`\n\n- `gnutls_certificate_set_x509_system_trust`\n\n- `gnutls_certificate_set_x509_crl_mem`\n\n- `gnutls_certificate_set_x509_trust_mem`\n\n- `gnutls_x509_trust_list_add_trust_file`\n\n- `gnutls_certificate_set_x509_crl_file`\n\n- `gnutls_certificate_set_x509_trust_file`\n\n- `gnutls_x509_trust_list_add_trust_dir`\n\n- `gnutls_certificate_set_x509_trust_dir`\n\n- `gnutls_x509_trust_list_remove_trust_mem`\n\n- `gnutls_x509_trust_list_remove_trust_file`\n\n- `gnutls_x509_trust_list_verify_crt2`\n\n- `gnutls_x509_cert_verify_peers`\n\n- `gnutls_certificate_verify_peers`\n\n- `gnutls_certificate_verify_peers2`\n\n- `gnutls_certificate_verify_peers3`\n\n- `gnutls_pkcs7_verify`\n\n- `gnutls_ocsp_resp_verify`\n\n- `gnutls_x509_trust_list_verify_crt`",
                "markdown": "The scanner checks if any of the following vulnerable functions are called:\n\n- `gnutls_pcert_import_x509_list`\n\n- `gnutls_certificate_set_x509_key`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_mem`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_file`\n\n- `gnutls_privkey_import_url`\n\n- `gnutls_privkey_import_pkcs11_url`\n\n- `gnutls_read_key_file`\n\n- `gnutls_certificate_set_rawpk_key_file`\n\n- `gnutls_certificate_set_x509_key_file2`\n\n- `gnutls_certificate_set_x509_key_file`\n\n- `gnutls_pcert_list_import_x509_file`\n\n- `gnutls_certificate_set_x509_key_mem2`\n\n- `gnutls_certificate_set_x509_key_mem`\n\n- `gnutls_x509_crt_list_import`\n\n- `gnutls_pcert_list_import_x509_raw`\n\n- `gnutls_session_channel_binding`\n\n- `gnutls_x509_crt_list_import2`\n\n- `gnutls_x509_trust_list_add_trust_mem`\n\n- `gnutls_x509_trust_list_add_system_trust`\n\n- `gnutls_certificate_set_x509_system_trust`\n\n- `gnutls_certificate_set_x509_crl_mem`\n\n- `gnutls_certificate_set_x509_trust_mem`\n\n- `gnutls_x509_trust_list_add_trust_file`\n\n- `gnutls_certificate_set_x509_crl_file`\n\n- `gnutls_certificate_set_x509_trust_file`\n\n- `gnutls_x509_trust_list_add_trust_dir`\n\n- `gnutls_certificate_set_x509_trust_dir`\n\n- `gnutls_x509_trust_list_remove_trust_mem`\n\n- `gnutls_x509_trust_list_remove_trust_file`\n\n- `gnutls_x509_trust_list_verify_crt2`\n\n- `gnutls_x509_cert_verify_peers`\n\n- `gnutls_certificate_verify_peers`\n\n- `gnutls_certificate_verify_peers2`\n\n- `gnutls_certificate_verify_peers3`\n\n- `gnutls_pkcs7_verify`\n\n- `gnutls_ocsp_resp_verify`\n\n- `gnutls_x509_trust_list_verify_crt`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-5981",
              "name": "CVE-2023-5981",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-5981"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-23744",
              "name": "CVE-2024-23744",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-23744"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-45451",
              "name": "CVE-2021-45451",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-45451"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-2731",
              "name": "CVE-2023-2731",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-2731"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28835",
              "name": "CVE-2024-28835",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28835"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28085",
              "name": "CVE-2024-28085",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28085"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2014-1949",
              "name": "CVE-2014-1949",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2014-1949"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-3164",
              "name": "CVE-2023-3164",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-3164"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-52353",
              "name": "CVE-2023-52353",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-52353"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38470",
              "name": "CVE-2023-38470",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38470"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-32665",
              "name": "CVE-2023-32665",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-32665"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36647",
              "name": "CVE-2021-36647",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36647"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-43666",
              "name": "CVE-2021-43666",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-43666"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-1916",
              "name": "CVE-2023-1916",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-1916"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-2908",
              "name": "CVE-2023-2908",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-2908"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38473",
              "name": "CVE-2023-38473",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38473"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38471",
              "name": "CVE-2023-38471",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38471"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-35457",
              "name": "CVE-2020-35457",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-35457"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-2804",
              "name": "CVE-2023-2804",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-2804"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3800",
              "name": "CVE-2021-3800",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3800"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48174",
              "name": "CVE-2022-48174",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48174"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-34397",
              "name": "CVE-2024-34397",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-34397"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-1981",
              "name": "CVE-2023-1981",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-1981"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-4214",
              "name": "CVE-2021-4214",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-4214"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38469",
              "name": "CVE-2023-38469",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38469"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2012-0039",
              "name": "CVE-2012-0039",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2012-0039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-13012",
              "name": "CVE-2019-13012",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-13012"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45322",
              "name": "CVE-2023-45322",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45322"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-34459",
              "name": "CVE-2024-34459",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-34459"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-3576",
              "name": "CVE-2023-3576",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-3576"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-4039",
              "name": "CVE-2023-4039",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-4039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28834",
              "name": "CVE-2024-28834",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28834"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38472",
              "name": "CVE-2023-38472",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38472"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-3618",
              "name": "CVE-2023-3618",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-3618"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-5535",
              "name": "CVE-2024-5535",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-5535"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-32611",
              "name": "CVE-2023-32611",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-32611"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2005-2975",
              "name": "CVE-2005-2975",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2005-2975"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1719691740-1633102127/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1719691657-3960677320/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2023-2004",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the following vulnerable functions are called:\n\n- `FT_Get_Advance`\n- `FT_Get_Advances`\n- `FT_Get_PFR_Metrics`\n- `FT_Get_PFR_Advance`\n- `FT_Load_Glyph`\n- `FT_Load_Char`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-26965",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable `tiffcrop` binary is present in the image.\n\nNote that the scanner does not check whether `tiffcrop` is invoked with arbitrary image files."
          }
        },
        {
          "ruleId": "applic_CVE-2023-41175",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-40745",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-29499",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `g_variant_is_normal_form()` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2023-32643",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following functions are called:\n\n- `g_variant_new`\n- `g_variant_new_array`\n- `g_variant_new_bytestring`\n- `g_variant_new_bytestring_array`\n- `g_variant_new_dict_entry`\n- `g_variant_new_fixed_array`\n- `g_variant_new_from_bytes`\n- `g_variant_new_from_data`\n- `g_variant_new_maybe`\n- `g_variant_new_objv`\n- `g_variant_new_printf`\n- `g_variant_new_strv`\n- `g_variant_new_tuple`\n- `g_variant_new_va`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-32636",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following functions are called:\n\n- `g_variant_new`\n- `g_variant_new_array`\n- `g_variant_new_bytestring`\n- `g_variant_new_bytestring_array`\n- `g_variant_new_dict_entry`\n- `g_variant_new_fixed_array`\n- `g_variant_new_from_bytes`\n- `g_variant_new_from_data`\n- `g_variant_new_maybe`\n- `g_variant_new_objv`\n- `g_variant_new_printf`\n- `g_variant_new_strv`\n- `g_variant_new_tuple`\n- `g_variant_new_va`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-3213",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `Image.read()` is called or a vulnerable tool of ImageMagick is present in the image.\nNote: it does not check if there is any script calling a vulnerable tool yet."
          }
        },
        {
          "ruleId": "applic_CVE-2023-52355",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following functions are called:\n\n- `TIFFRasterScanlineSize64()`\n- `TIFFRasterScanlineSize()`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-48622",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the next functions are called:\n\n* `gdk_pixbuf_animation_new_from_file`\n\n* `gdk_pixbuf_animation_new_from_resource`\n\n* `gdk_pixbuf_animation_new_from_stream`\n\n* `gdk_pixbuf_new_from_file`\n\n* `gdk_pixbuf_new_from_file_at_size`\n\n* `gdk_pixbuf_new_from_file_at_scale`"
          }
        },
        {
          "ruleId": "applic_CVE-2024-25062",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following functions are called:\n\n* `xmlValidatePopElement()`\n* `xmlTextReaderClose()`\n* `xmlFreeTextReader() `\n* `xmlTextReaderRead()`\n* `xmlSchemaValidateDoc()`"
          }
        },
        {
          "ruleId": "applic_CVE-2024-0553",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if RSA decryption occurs by finding calls to any of the following functions:\n\n- `gnutls_privkey_decrypt_data`\n\n- `gnutls_privkey_decrypt_data2`\n\nAn additional condition (that the scanner does not currently check) is required for the CVE to be applicable: the RSA padding algorithm needs to be `PKCS#1`. `key-\u003epk_algorithm` needs to be equal to `GNUTLS_PK_RSA`."
          }
        },
        {
          "ruleId": "applic_CVE-2024-0567",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following vulnerable functions are called:\n\n- `gnutls_pcert_import_x509_list`\n\n- `gnutls_certificate_set_x509_key`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_mem`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_file`\n\n- `gnutls_privkey_import_url`\n\n- `gnutls_privkey_import_pkcs11_url`\n\n- `gnutls_read_key_file`\n\n- `gnutls_certificate_set_rawpk_key_file`\n\n- `gnutls_certificate_set_x509_key_file2`\n\n- `gnutls_certificate_set_x509_key_file`\n\n- `gnutls_pcert_list_import_x509_file`\n\n- `gnutls_certificate_set_x509_key_mem2`\n\n- `gnutls_certificate_set_x509_key_mem`\n\n- `gnutls_x509_crt_list_import`\n\n- `gnutls_pcert_list_import_x509_raw`\n\n- `gnutls_session_channel_binding`\n\n- `gnutls_x509_crt_list_import2`\n\n- `gnutls_x509_trust_list_add_trust_mem`\n\n- `gnutls_x509_trust_list_add_system_trust`\n\n- `gnutls_certificate_set_x509_system_trust`\n\n- `gnutls_certificate_set_x509_crl_mem`\n\n- `gnutls_certificate_set_x509_trust_mem`\n\n- `gnutls_x509_trust_list_add_trust_file`\n\n- `gnutls_certificate_set_x509_crl_file`\n\n- `gnutls_certificate_set_x509_trust_file`\n\n- `gnutls_x509_trust_list_add_trust_dir`\n\n- `gnutls_certificate_set_x509_trust_dir`\n\n- `gnutls_x509_trust_list_remove_trust_mem`\n\n- `gnutls_x509_trust_list_remove_trust_file`\n\n- `gnutls_x509_trust_list_verify_crt2`\n\n- `gnutls_x509_cert_verify_peers`\n\n- `gnutls_certificate_verify_peers`\n\n- `gnutls_certificate_verify_peers2`\n\n- `gnutls_certificate_verify_peers3`\n\n- `gnutls_pkcs7_verify`\n\n- `gnutls_ocsp_resp_verify`\n\n- `gnutls_x509_trust_list_verify_crt`"
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1719691740-1633102127/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1719691657-3960677320/image.tar"
          }
        }
      ],
      "results": []
    }
  ]
}
