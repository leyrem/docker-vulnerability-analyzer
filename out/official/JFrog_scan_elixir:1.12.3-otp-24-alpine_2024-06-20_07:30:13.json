{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2022-48174_3.17:busybox-binsh_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.17:busybox-binsh 1.35.0-r29"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.17:ssl_client_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.17:ssl_client 1.35.0-r29"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.17:busybox_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.17:busybox 1.35.0-r29"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-42364_3.17:ssl_client_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.17:ssl_client 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.17:busybox_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.17:busybox 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.17:busybox-binsh_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.17:busybox-binsh 1.35.0-r29"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r30]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.17:busybox_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.17:busybox 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.17:busybox_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.17:busybox 1.35.0-r29"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r30]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.17:busybox-binsh_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.17:busybox-binsh 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.17:ssl_client_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.17:ssl_client 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.17:ssl_client_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.17:ssl_client 1.35.0-r29"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r30]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.17:busybox-binsh_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.17:busybox-binsh 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.17:busybox-binsh_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.17:busybox-binsh 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.17:busybox_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.17:busybox 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.17:ssl_client_1.35.0-r29",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.17:ssl_client 1.35.0-r29"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar `       | [1.35.0-r31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2022-48174_3.17:busybox-binsh_1.35.0-r29",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.17:ssl_client_1.35.0-r29",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.17:busybox_1.35.0-r29",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.17:ssl_client_1.35.0-r29",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.17:busybox_1.35.0-r29",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.17:busybox-binsh_1.35.0-r29",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.17:busybox_1.35.0-r29",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.17:busybox_1.35.0-r29",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.17:busybox-binsh_1.35.0-r29",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.17:ssl_client_1.35.0-r29",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.17:ssl_client_1.35.0-r29",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.17:busybox-binsh_1.35.0-r29",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.17:busybox-binsh_1.35.0-r29",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.17:busybox_1.35.0-r29",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.17:ssl_client_1.35.0-r29",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2023-42365",
              "name": "CVE-2023-42365",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42365"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42364",
              "name": "CVE-2023-42364",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42364"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42363",
              "name": "CVE-2023-42363",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42363"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42366",
              "name": "CVE-2023-42366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48174",
              "name": "CVE-2022-48174",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48174"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718868642-173699818/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718868613-112395712/image.tar"
          }
        }
      ],
      "results": []
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718868642-173699818/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718868613-112395712/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/eldap-1.2.10/ebin/ELDAPv3.hrl"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 2,
                  "endLine": 153,
                  "endColumn": 2,
                  "snippet": {
                    "text": "old************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/eldap-1.2.10/ebin/ELDAPv3.hrl"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 2,
                  "endLine": 154,
                  "endColumn": 2,
                  "snippet": {
                    "text": "new************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/eldap-1.2.10/ebin/ELDAPv3.hrl"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 2,
                  "endLine": 159,
                  "endColumn": 2,
                  "snippet": {
                    "text": "gen************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/include/megaco_message_v1.hrl"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 3,
                  "endLine": 171,
                  "endColumn": 3,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/include/megaco_message_v2.hrl"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 3,
                  "endLine": 176,
                  "endColumn": 3,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/include/megaco_message_v3.hrl"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 3,
                  "endLine": 259,
                  "endColumn": 3,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/binary/megaco_ber_media_gateway_control_v1.hrl"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 2,
                  "endLine": 260,
                  "endColumn": 2,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/binary/megaco_ber_media_gateway_control_v2.hrl"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 2,
                  "endLine": 344,
                  "endColumn": 2,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/binary/megaco_ber_media_gateway_control_v2.hrl"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 2,
                  "endLine": 346,
                  "endColumn": 2,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/binary/megaco_ber_media_gateway_control_v3.hrl"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 2,
                  "endLine": 364,
                  "endColumn": 2,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/binary/megaco_ber_media_gateway_control_v3.hrl"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 2,
                  "endLine": 366,
                  "endColumn": 2,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/binary/megaco_per_media_gateway_control_v1.hrl"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 2,
                  "endLine": 260,
                  "endColumn": 2,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/binary/megaco_per_media_gateway_control_v2.hrl"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 2,
                  "endLine": 344,
                  "endColumn": 2,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/binary/megaco_per_media_gateway_control_v2.hrl"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 2,
                  "endLine": 346,
                  "endColumn": 2,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/binary/megaco_per_media_gateway_control_v3.hrl"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 2,
                  "endLine": 364,
                  "endColumn": 2,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/binary/megaco_per_media_gateway_control_v3.hrl"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 2,
                  "endLine": 366,
                  "endColumn": 2,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v1.hrl"
                },
                "region": {
                  "startLine": 874,
                  "startColumn": 39,
                  "endLine": 874,
                  "endColumn": 39,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v1.hrl"
                },
                "region": {
                  "startLine": 963,
                  "startColumn": 40,
                  "endLine": 963,
                  "endColumn": 40,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v2.hrl"
                },
                "region": {
                  "startLine": 1275,
                  "startColumn": 40,
                  "endLine": 1275,
                  "endColumn": 40,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v2.hrl"
                },
                "region": {
                  "startLine": 907,
                  "startColumn": 39,
                  "endLine": 907,
                  "endColumn": 39,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v2.hrl"
                },
                "region": {
                  "startLine": 908,
                  "startColumn": 11,
                  "endLine": 908,
                  "endColumn": 11,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v2.hrl"
                },
                "region": {
                  "startLine": 915,
                  "startColumn": 11,
                  "endLine": 915,
                  "endColumn": 11,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v2.hrl"
                },
                "region": {
                  "startLine": 922,
                  "startColumn": 11,
                  "endLine": 922,
                  "endColumn": 11,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v2.hrl"
                },
                "region": {
                  "startLine": 933,
                  "startColumn": 39,
                  "endLine": 933,
                  "endColumn": 39,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v3.hrl"
                },
                "region": {
                  "startLine": 1367,
                  "startColumn": 39,
                  "endLine": 1367,
                  "endColumn": 39,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v3.hrl"
                },
                "region": {
                  "startLine": 1368,
                  "startColumn": 11,
                  "endLine": 1368,
                  "endColumn": 11,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v3.hrl"
                },
                "region": {
                  "startLine": 1376,
                  "startColumn": 11,
                  "endLine": 1376,
                  "endColumn": 11,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v3.hrl"
                },
                "region": {
                  "startLine": 1384,
                  "startColumn": 11,
                  "endLine": 1384,
                  "endColumn": 11,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v3.hrl"
                },
                "region": {
                  "startLine": 1395,
                  "startColumn": 39,
                  "endLine": 1395,
                  "endColumn": 39,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/megaco-4.3/src/text/megaco_text_gen_v3.hrl"
                },
                "region": {
                  "startLine": 1825,
                  "startColumn": 40,
                  "endLine": 1825,
                  "endColumn": 40,
                  "snippet": {
                    "text": "aud************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/snmp-5.12.0.3/mibs/SNMP-USER-BASED-SM-MIB.mib"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 27,
                  "endLine": 360,
                  "endColumn": 27,
                  "snippet": {
                    "text": "usm************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjcqc0ddb/unpacked/filesystem/blobs/sha256/5265cbdaba26790a2bb789721322fef3bd6c332279825765db26a5951bcb9f9a/usr/local/lib/erlang/lib/snmp-5.12.0.3/mibs/SNMP-USER-BASED-SM-MIB.mib"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 27,
                  "endLine": 377,
                  "endColumn": 27,
                  "snippet": {
                    "text": "usm************"
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
