{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2022-1471_org.yaml:snakeyaml_1.33",
              "shortDescription": {
                "text": "[CVE-2022-1471] org.yaml:snakeyaml 1.33"
              },
              "help": {
                "text": "SnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml's SafeConsturctor when parsing untrusted content to restrict deserialization. We recommend upgrading to version 2.0 and beyond.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [2.0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2024-1597_org.postgresql:postgresql_42.5.1",
              "shortDescription": {
                "text": "[CVE-2024-1597] org.postgresql:postgresql 42.5.1"
              },
              "help": {
                "text": "pgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.28 are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [42.2.28], [42.3.9], [42.4.4], [42.5.5], [42.6.1], [42.7.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-45688_org.json:json_20220320",
              "shortDescription": {
                "text": "[CVE-2022-45688] org.json:json 20220320"
              },
              "help": {
                "text": "A stack overflow in the XML.toJSONObject component of hutool-json v5.8.10 allows attackers to cause a Denial of Service (DoS) via crafted JSON or XML data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [20230227]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-5072_org.json:json_20220320",
              "shortDescription": {
                "text": "[CVE-2023-5072] org.json:json 20220320"
              },
              "help": {
                "text": "Denial of Service  in JSON-Java versions up to and including 20230618.  A bug in the parser means that an input string of modest size can lead to indefinite amounts of memory being used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [20231013]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-6378_ch.qos.logback:logback-core_1.2.10",
              "shortDescription": {
                "text": "[CVE-2023-6378] ch.qos.logback:logback-core 1.2.10"
              },
              "help": {
                "text": "A serialization vulnerability in logback receiver component part of \nlogback version 1.4.11 allows an attacker to mount a Denial-Of-Service \nattack by sending poisoned data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.2.13], [1.3.12], [1.4.12]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-6378_ch.qos.logback:logback-classic_1.2.10",
              "shortDescription": {
                "text": "[CVE-2023-6378] ch.qos.logback:logback-classic 1.2.10"
              },
              "help": {
                "text": "A serialization vulnerability in logback receiver component part of \nlogback version 1.4.11 allows an attacker to mount a Denial-Of-Service \nattack by sending poisoned data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.2.13], [1.3.12], [1.4.12]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45859_com.hazelcast:hazelcast_5.2.1",
              "shortDescription": {
                "text": "[CVE-2023-45859] com.hazelcast:hazelcast 5.2.1"
              },
              "help": {
                "text": "In Hazelcast through 4.1.10, 4.2 through 4.2.8, 5.0 through 5.0.5, 5.1 through 5.1.7, 5.2 through 5.2.4, and 5.3 through 5.3.2, some client operations don't check permissions properly, allowing authenticated users to access data stored in the cluster.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.6      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [5.2.5], [5.3.5]   |"
              },
              "properties": {
                "security-severity": "7.6"
              }
            },
            {
              "id": "CVE-2023-33265_com.hazelcast:hazelcast_5.2.1",
              "shortDescription": {
                "text": "[CVE-2023-33265] com.hazelcast:hazelcast 5.2.1"
              },
              "help": {
                "text": "In Hazelcast through 5.0.4, 5.1 through 5.1.6, and 5.2 through 5.2.3, executor services don't check client permissions properly, allowing authenticated users to execute tasks on members without the required permissions granted.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [5.0.5], [5.1.7], [5.2.4]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-45868_com.h2database:h2_2.1.214",
              "shortDescription": {
                "text": "[CVE-2022-45868] com.h2database:h2 2.1.214"
              },
              "help": {
                "text": "The web-based admin console in H2 Database Engine before 2.2.220 can be started via the CLI with the argument -webAdminPassword, which allows the user to specify the password in cleartext for the web admin console. Consequently, a local user (or an attacker that has obtained local access through some means) would be able to discover the password by listing processes and their arguments. NOTE: the vendor states \"This is not a vulnerability of H2 Console ... Passwords should never be passed on the command line and every qualified DBA or system administrator is expected to know that.\" Nonetheless, the issue was fixed in 2.2.220.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [2.2.220]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2024-4068_braces_3.0.2",
              "shortDescription": {
                "text": "[CVE-2024-4068] braces 3.0.2"
              },
              "help": {
                "text": "The NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [3.0.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-35116_com.fasterxml.jackson.core:jackson-databind_2.15.1",
              "shortDescription": {
                "text": "[CVE-2023-35116] com.fasterxml.jackson.core:jackson-databind 2.15.1"
              },
              "help": {
                "text": "jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor's perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2024-29041_express_4.18.1",
              "shortDescription": {
                "text": "[CVE-2024-29041] express 4.18.1"
              },
              "help": {
                "text": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [4.19.2], [5.0.0-beta.3]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-33264_com.hazelcast:hazelcast_5.2.1",
              "shortDescription": {
                "text": "[CVE-2023-33264] com.hazelcast:hazelcast 5.2.1"
              },
              "help": {
                "text": "In Hazelcast through 5.0.4, 5.1 through 5.1.6, and 5.2 through 5.2.3, configuration routines don't mask passwords in the member configuration properly. This allows Hazelcast Management Center users to view some of the secrets.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [5.3.0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2024-25710_org.apache.commons:commons-compress_1.21",
              "shortDescription": {
                "text": "[CVE-2024-25710] org.apache.commons:commons-compress 1.21"
              },
              "help": {
                "text": "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress.This issue affects Apache Commons Compress: from 1.3 through 1.25.0.\n\nUsers are recommended to upgrade to version 1.26.0 which fixes the issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.26.0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-23450_org.elasticsearch:elasticsearch_7.17.15",
              "shortDescription": {
                "text": "[CVE-2024-23450] org.elasticsearch:elasticsearch 7.17.15"
              },
              "help": {
                "text": "A flaw was discovered in Elasticsearch, where processing a document in a deeply nested pipeline on an ingest node could cause the Elasticsearch node to crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.9      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [7.17.19], [8.13.0]   |"
              },
              "properties": {
                "security-severity": "4.9"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-29025_io.netty:netty-codec-http_4.1.94.Final",
              "shortDescription": {
                "text": "[CVE-2024-29025] io.netty:netty-codec-http 4.1.94.Final"
              },
              "help": {
                "text": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers \u0026 clients. The `HttpPostRequestDecoder` can be tricked to accumulate data. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits. This vulnerability is fixed in 4.1.108.Final.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [4.1.108.Final]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-44483_org.apache.santuario:xmlsec_2.2.3",
              "shortDescription": {
                "text": "[CVE-2023-44483] org.apache.santuario:xmlsec 2.2.3"
              },
              "help": {
                "text": "All versions of Apache Santuario - XML Security for Java prior to 2.2.6, 2.3.4, and 3.0.3, when using the JSR 105 API, are vulnerable to an issue where a private key may be disclosed in log files when generating an XML Signature and logging with debug level is enabled. Users are recommended to upgrade to version 2.2.6, 2.3.4, or 3.0.3, which fixes this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [2.2.6], [2.3.4], [3.0.3]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45860_com.hazelcast:hazelcast_5.2.1",
              "shortDescription": {
                "text": "[CVE-2023-45860] com.hazelcast:hazelcast 5.2.1"
              },
              "help": {
                "text": "In Hazelcast Platform through 5.3.4, a security issue exists within the SQL mapping for the CSV File Source connector. This issue arises from inadequate permission checking, which could enable unauthorized clients to access data from files stored on a member's filesystem.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [5.2.5], [5.3.5]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22570_google.protobuf_3.6.1",
              "shortDescription": {
                "text": "[CVE-2021-22570] google.protobuf 3.6.1"
              },
              "help": {
                "text": "Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr. We recommend upgrading to version 3.15.0 or greater.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [3.15.0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-44270_postcss_8.4.21",
              "shortDescription": {
                "text": "[CVE-2023-44270] postcss 8.4.21"
              },
              "help": {
                "text": "An issue was discovered in PostCSS before 8.4.31. The vulnerability affects linters using PostCSS to parse external untrusted CSS. An attacker can prepare CSS in such a way that it will contains parts parsed by PostCSS as a CSS comment. After processing by PostCSS, it will be included in the PostCSS output in CSS nodes (rules, properties) despite being included in a comment.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [8.4.31]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-26462_ubuntu:jammy:libkrb5support0_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26462] ubuntu:jammy:libkrb5support0 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-38428_ubuntu:jammy:wget_1.21.2-2ubuntu1",
              "shortDescription": {
                "text": "[CVE-2024-38428] ubuntu:jammy:wget 1.21.2-2ubuntu1"
              },
              "help": {
                "text": "url.c in GNU Wget through 1.24.5 mishandles semicolons in the userinfo subcomponent of a URI, and thus there may be insecure behavior in which data that was supposed to be in the userinfo subcomponent is misinterpreted to be part of the host subcomponent.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26462_ubuntu:jammy:libkrb5-3_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26462] ubuntu:jammy:libkrb5-3 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-31879_ubuntu:jammy:wget_1.21.2-2ubuntu1",
              "shortDescription": {
                "text": "[CVE-2021-31879] ubuntu:jammy:wget 1.21.2-2ubuntu1"
              },
              "help": {
                "text": "GNU Wget through 1.21.1 does not omit the Authorization header upon a redirect to a different origin, a related issue to CVE-2018-1000007.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2024-26462_ubuntu:jammy:libgssapi-krb5-2_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26462] ubuntu:jammy:libgssapi-krb5-2 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-40735_ubuntu:jammy:libssl3_3.0.2-0ubuntu1.15",
              "shortDescription": {
                "text": "[CVE-2022-40735] ubuntu:jammy:libssl3 3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "The Diffie-Hellman Key Agreement Protocol allows use of long exponents that arguably make certain calculations unnecessarily expensive, because the 1996 van Oorschot and Wiener paper found that \"(appropriately) short exponents\" can be used when there are adequate subgroup constraints, and these short exponents can lead to less expensive calculations than for long exponents. This issue is different from CVE-2002-20001 because it is based on an observation about exponent size, rather than an observation about numbers that are not public keys. The specific situations in which calculation expense would constitute a server-side vulnerability depend on the protocol (e.g., TLS, SSH, or IKE) and the DHE implementation details. In general, there might be an availability concern because of server-side resource consumption from DHE modular-exponentiation calculations. Finally, it is possible for an attacker to exploit this vulnerability and CVE-2002-20001 together.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-26462_ubuntu:jammy:libk5crypto3_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26462] ubuntu:jammy:libk5crypto3 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-22916_ubuntu:jammy:liblzma5_5.2.5-2ubuntu1",
              "shortDescription": {
                "text": "[CVE-2020-22916] ubuntu:jammy:liblzma5 5.2.5-2ubuntu1"
              },
              "help": {
                "text": "An issue discovered in XZ 5.2.5 allows attackers to cause a denial of service via decompression of a crafted file. NOTE: the vendor disputes the claims of \"endless output\" and \"denial of service\" because decompression of the 17,486 bytes always results in 114,881,179 bytes, which is often a reasonable size increase.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-2236_ubuntu:jammy:libgcrypt20_1.9.4-3ubuntu3",
              "shortDescription": {
                "text": "[CVE-2024-2236] ubuntu:jammy:libgcrypt20 1.9.4-3ubuntu3"
              },
              "help": {
                "text": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-40735_ubuntu:jammy:openssl_3.0.2-0ubuntu1.15",
              "shortDescription": {
                "text": "[CVE-2022-40735] ubuntu:jammy:openssl 3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "The Diffie-Hellman Key Agreement Protocol allows use of long exponents that arguably make certain calculations unnecessarily expensive, because the 1996 van Oorschot and Wiener paper found that \"(appropriately) short exponents\" can be used when there are adequate subgroup constraints, and these short exponents can lead to less expensive calculations than for long exponents. This issue is different from CVE-2002-20001 because it is based on an observation about exponent size, rather than an observation about numbers that are not public keys. The specific situations in which calculation expense would constitute a server-side vulnerability depend on the protocol (e.g., TLS, SSH, or IKE) and the DHE implementation details. In general, there might be an availability concern because of server-side resource consumption from DHE modular-exponentiation calculations. Finally, it is possible for an attacker to exploit this vulnerability and CVE-2002-20001 together.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-11164_ubuntu:jammy:libpcre3:2_8.39-13ubuntu0.22.04.1",
              "shortDescription": {
                "text": "[CVE-2017-11164] ubuntu:jammy:libpcre3:2 8.39-13ubuntu0.22.04.1"
              },
              "help": {
                "text": "In PCRE 8.41, the OP_KETRMAX feature in the match function in pcre_exec.c allows stack exhaustion (uncontrolled recursion) when processing a crafted regular expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-4603_ubuntu:jammy:libssl3_3.0.2-0ubuntu1.15",
              "shortDescription": {
                "text": "[CVE-2024-4603] ubuntu:jammy:libssl3 3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26458_ubuntu:jammy:libkrb5support0_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26458] ubuntu:jammy:libkrb5support0 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2018-5709_ubuntu:jammy:libkrb5-3_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2018-5709] ubuntu:jammy:libkrb5-3 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry-\u003en_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45918_ubuntu:jammy:libncurses6_6.3-2ubuntu0.1",
              "shortDescription": {
                "text": "[CVE-2023-45918] ubuntu:jammy:libncurses6 6.3-2ubuntu0.1"
              },
              "help": {
                "text": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-27943_ubuntu:jammy:libgcc-s1_12.3.0-1ubuntu1~22.04",
              "shortDescription": {
                "text": "[CVE-2022-27943] ubuntu:jammy:libgcc-s1 12.3.0-1ubuntu1~22.04"
              },
              "help": {
                "text": "libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-26461_ubuntu:jammy:libkrb5-3_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26461] ubuntu:jammy:libkrb5-3 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2018-5709_ubuntu:jammy:libkrb5support0_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2018-5709] ubuntu:jammy:libkrb5support0 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry-\u003en_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-2511_ubuntu:jammy:openssl_3.0.2-0ubuntu1.15",
              "shortDescription": {
                "text": "[CVE-2024-2511] ubuntu:jammy:openssl 3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-3219_ubuntu:jammy:gpg-agent_2.2.27-3ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2022-3219] ubuntu:jammy:gpg-agent 2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-45918_ubuntu:jammy:ncurses-base_6.3-2ubuntu0.1",
              "shortDescription": {
                "text": "[CVE-2023-45918] ubuntu:jammy:ncurses-base 6.3-2ubuntu0.1"
              },
              "help": {
                "text": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-45918_ubuntu:jammy:ncurses-bin_6.3-2ubuntu0.1",
              "shortDescription": {
                "text": "[CVE-2023-45918] ubuntu:jammy:ncurses-bin 6.3-2ubuntu0.1"
              },
              "help": {
                "text": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26458_ubuntu:jammy:libkrb5-3_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26458] ubuntu:jammy:libkrb5-3 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26458_ubuntu:jammy:libk5crypto3_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26458] ubuntu:jammy:libk5crypto3 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-3219_ubuntu:jammy:gpg-wks-client_2.2.27-3ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2022-3219] ubuntu:jammy:gpg-wks-client 2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2016-2781_ubuntu:jammy:coreutils_8.32-4.1ubuntu1.2",
              "shortDescription": {
                "text": "[CVE-2016-2781] ubuntu:jammy:coreutils 8.32-4.1ubuntu1.2"
              },
              "help": {
                "text": "chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-3219_ubuntu:jammy:gnupg-l10n_2.2.27-3ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2022-3219] ubuntu:jammy:gnupg-l10n 2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2018-5709_ubuntu:jammy:libk5crypto3_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2018-5709] ubuntu:jammy:libk5crypto3 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry-\u003en_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29383_ubuntu:jammy:login:1_4.8.1-2ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2023-29383] ubuntu:jammy:login:1 4.8.1-2ubuntu2.2"
              },
              "help": {
                "text": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2022-3219_ubuntu:jammy:gpg_2.2.27-3ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2022-3219] ubuntu:jammy:gpg 2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2022-3219_ubuntu:jammy:gnupg-utils_2.2.27-3ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2022-3219] ubuntu:jammy:gnupg-utils 2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-29383_ubuntu:jammy:passwd:1_4.8.1-2ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2023-29383] ubuntu:jammy:passwd:1 4.8.1-2ubuntu2.2"
              },
              "help": {
                "text": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2022-3219_ubuntu:jammy:gpg-wks-server_2.2.27-3ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2022-3219] ubuntu:jammy:gpg-wks-server 2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2022-27943_ubuntu:jammy:libstdc++6_12.3.0-1ubuntu1~22.04",
              "shortDescription": {
                "text": "[CVE-2022-27943] ubuntu:jammy:libstdc++6 12.3.0-1ubuntu1~22.04"
              },
              "help": {
                "text": "libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-3219_ubuntu:jammy:gpgsm_2.2.27-3ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2022-3219] ubuntu:jammy:gpgsm 2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-50495_ubuntu:jammy:libtinfo6_6.3-2ubuntu0.1",
              "shortDescription": {
                "text": "[CVE-2023-50495] ubuntu:jammy:libtinfo6 6.3-2ubuntu0.1"
              },
              "help": {
                "text": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-50495_ubuntu:jammy:libncursesw6_6.3-2ubuntu0.1",
              "shortDescription": {
                "text": "[CVE-2023-50495] ubuntu:jammy:libncursesw6 6.3-2ubuntu0.1"
              },
              "help": {
                "text": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-3219_ubuntu:jammy:dirmngr_2.2.27-3ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2022-3219] ubuntu:jammy:dirmngr 2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-45918_ubuntu:jammy:libncursesw6_6.3-2ubuntu0.1",
              "shortDescription": {
                "text": "[CVE-2023-45918] ubuntu:jammy:libncursesw6 6.3-2ubuntu0.1"
              },
              "help": {
                "text": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-50495_ubuntu:jammy:ncurses-base_6.3-2ubuntu0.1",
              "shortDescription": {
                "text": "[CVE-2023-50495] ubuntu:jammy:ncurses-base 6.3-2ubuntu0.1"
              },
              "help": {
                "text": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2016-20013_ubuntu:jammy:libc-bin_2.35-0ubuntu3.8",
              "shortDescription": {
                "text": "[CVE-2016-20013] ubuntu:jammy:libc-bin 2.35-0ubuntu3.8"
              },
              "help": {
                "text": "sha256crypt and sha512crypt through 0.6 allow attackers to cause a denial of service (CPU consumption) because the algorithm's runtime is proportional to the square of the length of the password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-50495_ubuntu:jammy:ncurses-bin_6.3-2ubuntu0.1",
              "shortDescription": {
                "text": "[CVE-2023-50495] ubuntu:jammy:ncurses-bin 6.3-2ubuntu0.1"
              },
              "help": {
                "text": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-7008_ubuntu:jammy:libsystemd0_249.11-0ubuntu3.12",
              "shortDescription": {
                "text": "[CVE-2023-7008] ubuntu:jammy:libsystemd0 249.11-0ubuntu3.12"
              },
              "help": {
                "text": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2016-20013_ubuntu:jammy:libc6_2.35-0ubuntu3.8",
              "shortDescription": {
                "text": "[CVE-2016-20013] ubuntu:jammy:libc6 2.35-0ubuntu3.8"
              },
              "help": {
                "text": "sha256crypt and sha512crypt through 0.6 allow attackers to cause a denial of service (CPU consumption) because the algorithm's runtime is proportional to the square of the length of the password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-5709_ubuntu:jammy:libgssapi-krb5-2_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2018-5709] ubuntu:jammy:libgssapi-krb5-2 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry-\u003en_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-26461_ubuntu:jammy:libgssapi-krb5-2_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26461] ubuntu:jammy:libgssapi-krb5-2 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-3219_ubuntu:jammy:gpgconf_2.2.27-3ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2022-3219] ubuntu:jammy:gpgconf 2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-50495_ubuntu:jammy:libncurses6_6.3-2ubuntu0.1",
              "shortDescription": {
                "text": "[CVE-2023-50495] ubuntu:jammy:libncurses6 6.3-2ubuntu0.1"
              },
              "help": {
                "text": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2016-20013_ubuntu:jammy:locales_2.35-0ubuntu3.8",
              "shortDescription": {
                "text": "[CVE-2016-20013] ubuntu:jammy:locales 2.35-0ubuntu3.8"
              },
              "help": {
                "text": "sha256crypt and sha512crypt through 0.6 allow attackers to cause a denial of service (CPU consumption) because the algorithm's runtime is proportional to the square of the length of the password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-26461_ubuntu:jammy:libk5crypto3_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26461] ubuntu:jammy:libk5crypto3 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-45918_ubuntu:jammy:libtinfo6_6.3-2ubuntu0.1",
              "shortDescription": {
                "text": "[CVE-2023-45918] ubuntu:jammy:libtinfo6 6.3-2ubuntu0.1"
              },
              "help": {
                "text": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26461_ubuntu:jammy:libkrb5support0_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26461] ubuntu:jammy:libkrb5support0 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-26458_ubuntu:jammy:libgssapi-krb5-2_1.19.2-2ubuntu0.3",
              "shortDescription": {
                "text": "[CVE-2024-26458] ubuntu:jammy:libgssapi-krb5-2 1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-7008_ubuntu:jammy:libudev1_249.11-0ubuntu3.12",
              "shortDescription": {
                "text": "[CVE-2023-7008] ubuntu:jammy:libudev1 249.11-0ubuntu3.12"
              },
              "help": {
                "text": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-27943_ubuntu:jammy:gcc-12-base_12.3.0-1ubuntu1~22.04",
              "shortDescription": {
                "text": "[CVE-2022-27943] ubuntu:jammy:gcc-12-base 12.3.0-1ubuntu1~22.04"
              },
              "help": {
                "text": "libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-3219_ubuntu:jammy:gpgv_2.2.27-3ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2022-3219] ubuntu:jammy:gpgv 2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2024-4603_ubuntu:jammy:openssl_3.0.2-0ubuntu1.15",
              "shortDescription": {
                "text": "[CVE-2024-4603] ubuntu:jammy:openssl 3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-3857_ubuntu:jammy:libpng16-16_1.6.37-3build5",
              "shortDescription": {
                "text": "[CVE-2022-3857] ubuntu:jammy:libpng16-16 1.6.37-3build5"
              },
              "help": {
                "text": "A flaw was found in libpng 1.6.38. A crafted PNG image can lead to a segmentation fault and denial of service in png_setup_paeth_row() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-2511_ubuntu:jammy:libssl3_3.0.2-0ubuntu1.15",
              "shortDescription": {
                "text": "[CVE-2024-2511] ubuntu:jammy:libssl3 3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45133_@babel/traverse_7.20.12",
              "shortDescription": {
                "text": "[CVE-2023-45133] @babel/traverse 7.20.12"
              },
              "help": {
                "text": "Babel is a compiler for writingJavaScript. In `@babel/traverse` prior to versions 7.23.2 and 8.0.0-alpha.4 and all versions of `babel-traverse`, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any \"polyfill provider\" plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. The vulnerability has been fixed in `@babel/traverse@7.23.2` and `@babel/traverse@8.0.0-alpha.4`. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [7.23.2], [8.0.0-alpha.4]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-25883_semver_7.3.8",
              "shortDescription": {
                "text": "[CVE-2022-25883] semver 7.3.8"
              },
              "help": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [5.7.2], [6.3.1], [7.5.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-25883_semver_5.7.1",
              "shortDescription": {
                "text": "[CVE-2022-25883] semver 5.7.1"
              },
              "help": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [5.7.2], [6.3.1], [7.5.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-26115_word-wrap_1.2.3",
              "shortDescription": {
                "text": "[CVE-2023-26115] word-wrap 1.2.3"
              },
              "help": {
                "text": "All versions of the package word-wrap are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the result variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.2.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-40152_com.fasterxml.woodstox:woodstox-core_6.2.6",
              "shortDescription": {
                "text": "[CVE-2022-40152] com.fasterxml.woodstox:woodstox-core 6.2.6"
              },
              "help": {
                "text": "Those using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [5.4.0], [6.4.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-40152_com.fasterxml.woodstox:woodstox-core_5.2.1",
              "shortDescription": {
                "text": "[CVE-2022-40152] com.fasterxml.woodstox:woodstox-core 5.2.1"
              },
              "help": {
                "text": "Those using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [5.4.0], [6.4.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-2976_com.google.guava:guava_31.1-jre",
              "shortDescription": {
                "text": "[CVE-2023-2976] com.google.guava:guava 31.1-jre"
              },
              "help": {
                "text": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [32.0.0-android]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2022-25883_semver_6.3.0",
              "shortDescription": {
                "text": "[CVE-2022-25883] semver 6.3.0"
              },
              "help": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [5.7.2], [6.3.1], [7.5.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-2251_yaml_2.1.1",
              "shortDescription": {
                "text": "[CVE-2023-2251] yaml 2.1.1"
              },
              "help": {
                "text": "Uncaught Exception in GitHub repository eemeli/yaml prior to 2.0.0-5.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [2.2.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-4759_org.eclipse.jgit:org.eclipse.jgit_6.4.0.202211300538-r",
              "shortDescription": {
                "text": "[CVE-2023-4759] org.eclipse.jgit:org.eclipse.jgit 6.4.0.202211300538-r"
              },
              "help": {
                "text": "Arbitrary File Overwrite in Eclipse JGit \u003c= 6.6.0\n\nIn Eclipse JGit, all versions \u003c= 6.6.0.202305301015-r, a symbolic link present in a specially crafted git repository can be used to write a file to locations outside the working tree when this repository is cloned with JGit to a case-insensitive filesystem, or when a checkout from a clone of such a repository is performed on a case-insensitive filesystem.\n\nThis can happen on checkout (DirCacheCheckout), merge (ResolveMerger via its WorkingTreeUpdater), pull (PullCommand using merge), and when applying a patch (PatchApplier). This can be exploited for remote code execution (RCE), for instance if the file written outside the working tree is a git filter that gets executed on a subsequent git command.\n\nThe issue occurs only on case-insensitive filesystems, like the default filesystems on Windows and macOS. The user performing the clone or checkout must have the rights to create symbolic links for the problem to occur, and symbolic links must be enabled in the git configuration.\n\nSetting git configuration option core.symlinks = false before checking out avoids the problem.\n\nThe issue was fixed in Eclipse JGit version 6.6.1.202309021850-r and 6.7.0.202309050840-r, available via  Maven Central https://repo1.maven.org/maven2/org/eclipse/jgit/  and  repo.eclipse.org https://repo.eclipse.org/content/repositories/jgit-releases/ . A backport is available in 5.13.3 starting from  5.13.3.202401111512-r.\n\n\nThe JGit maintainers would like to thank RyotaK for finding and reporting this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [5.13.3.202401111512-r], [6.6.1.202309021850-r]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-2976_com.google.guava:guava_30.1.1-jre",
              "shortDescription": {
                "text": "[CVE-2023-2976] com.google.guava:guava 30.1.1-jre"
              },
              "help": {
                "text": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [32.0.0-android]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-13956_org.apache.httpcomponents:httpclient_4.5.10",
              "shortDescription": {
                "text": "[CVE-2020-13956] org.apache.httpcomponents:httpclient 4.5.10"
              },
              "help": {
                "text": "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [4.5.13], [5.0.3]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-26308_org.apache.commons:commons-compress_1.21",
              "shortDescription": {
                "text": "[CVE-2024-26308] org.apache.commons:commons-compress 1.21"
              },
              "help": {
                "text": "Allocation of Resources Without Limits or Throttling vulnerability in Apache Commons Compress.This issue affects Apache Commons Compress: from 1.21 before 1.26.\n\nUsers are recommended to upgrade to version 1.26, which fixes the issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.26.0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.19.1",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.19.1"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-8908_com.google.guava:guava_30.1.1-jre",
              "shortDescription": {
                "text": "[CVE-2020-8908] com.google.guava:guava 30.1.1-jre"
              },
              "help": {
                "text": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [32.0.0-android]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2024-4741_ubuntu:jammy:libssl3_3.0.2-0ubuntu1.15",
              "shortDescription": {
                "text": "[CVE-2024-4741] ubuntu:jammy:libssl3 3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "Use After Free with SSL_free_buffers",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-4741_ubuntu:jammy:openssl_3.0.2-0ubuntu1.15",
              "shortDescription": {
                "text": "[CVE-2024-4741] ubuntu:jammy:openssl 3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "Use After Free with SSL_free_buffers",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-4899_ubuntu:jammy:libzstd1_1.4.8+dfsg-3build1",
              "shortDescription": {
                "text": "[CVE-2022-4899] ubuntu:jammy:libzstd1 1.4.8+dfsg-3build1"
              },
              "help": {
                "text": "A vulnerability was found in zstd v1.4.10, where an attacker can supply empty string as an argument to the command line tool to cause buffer overrun.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8908_com.google.guava:guava_31.1-jre",
              "shortDescription": {
                "text": "[CVE-2020-8908] com.google.guava:guava 31.1-jre"
              },
              "help": {
                "text": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Applicable       | `sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar `       | [32.0.0-android]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2022-1471_org.yaml:snakeyaml_1.33",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1471] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-1597_org.postgresql:postgresql_42.5.1",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2024-1597] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-45688_org.json:json_20220320",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2022-45688] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5072_org.json:json_20220320",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2023-5072] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.19.1",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6378_ch.qos.logback:logback-core_1.2.10",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2023-6378] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6378_ch.qos.logback:logback-classic_1.2.10",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2023-6378] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45859_com.hazelcast:hazelcast_5.2.1",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45859] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-33265_com.hazelcast:hazelcast_5.2.1",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2023-33265] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-45868_com.h2database:h2_2.1.214",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2022-45868] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4068_braces_3.0.2",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2024-4068] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35116_com.fasterxml.jackson.core:jackson-databind_2.15.1",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-35116] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29041_express_4.18.1",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-29041] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-33264_com.hazelcast:hazelcast_5.2.1",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-33264] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-25710_org.apache.commons:commons-compress_1.21",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-25710] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.19.1",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-23450_org.elasticsearch:elasticsearch_7.17.15",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-23450] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.19.1",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29025_io.netty:netty-codec-http_4.1.94.Final",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-29025] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.19.1",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44483_org.apache.santuario:xmlsec_2.2.3",
          "ruleIndex": 20,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-44483] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45860_com.hazelcast:hazelcast_5.2.1",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45860] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22570_google.protobuf_3.6.1",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22570] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.19.1",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.19.1",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44270_postcss_8.4.21",
          "ruleIndex": 25,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-44270] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462_ubuntu:jammy:libkrb5support0_1.19.2-2ubuntu0.3",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-26462] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38428_ubuntu:jammy:wget_1.21.2-2ubuntu1",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-38428] sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462_ubuntu:jammy:libkrb5-3_1.19.2-2ubuntu0.3",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-26462] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31879_ubuntu:jammy:wget_1.21.2-2ubuntu1",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-31879] sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462_ubuntu:jammy:libgssapi-krb5-2_1.19.2-2ubuntu0.3",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-26462] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40735_ubuntu:jammy:libssl3_3.0.2-0ubuntu1.15",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-40735] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462_ubuntu:jammy:libk5crypto3_1.19.2-2ubuntu0.3",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-26462] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-22916_ubuntu:jammy:liblzma5_5.2.5-2ubuntu1",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-22916] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2236_ubuntu:jammy:libgcrypt20_1.9.4-3ubuntu3",
          "ruleIndex": 34,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-2236] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40735_ubuntu:jammy:openssl_3.0.2-0ubuntu1.15",
          "ruleIndex": 35,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-40735] sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-11164_ubuntu:jammy:libpcre3:2_8.39-13ubuntu0.22.04.1",
          "ruleIndex": 36,
          "level": "note",
          "message": {
            "text": "[CVE-2017-11164] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603_ubuntu:jammy:libssl3_3.0.2-0ubuntu1.15",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "[CVE-2024-4603] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458_ubuntu:jammy:libkrb5support0_1.19.2-2ubuntu0.3",
          "ruleIndex": 38,
          "level": "note",
          "message": {
            "text": "[CVE-2024-26458] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5709_ubuntu:jammy:libkrb5-3_1.19.2-2ubuntu0.3",
          "ruleIndex": 39,
          "level": "note",
          "message": {
            "text": "[CVE-2018-5709] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45918_ubuntu:jammy:libncurses6_6.3-2ubuntu0.1",
          "ruleIndex": 40,
          "level": "note",
          "message": {
            "text": "[CVE-2023-45918] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27943_ubuntu:jammy:libgcc-s1_12.3.0-1ubuntu1~22.04",
          "ruleIndex": 41,
          "level": "note",
          "message": {
            "text": "[CVE-2022-27943] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461_ubuntu:jammy:libkrb5-3_1.19.2-2ubuntu0.3",
          "ruleIndex": 42,
          "level": "note",
          "message": {
            "text": "[CVE-2024-26461] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5709_ubuntu:jammy:libkrb5support0_1.19.2-2ubuntu0.3",
          "ruleIndex": 43,
          "level": "note",
          "message": {
            "text": "[CVE-2018-5709] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_ubuntu:jammy:openssl_3.0.2-0ubuntu1.15",
          "ruleIndex": 44,
          "level": "note",
          "message": {
            "text": "[CVE-2024-2511] sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_ubuntu:jammy:gpg-agent_2.2.27-3ubuntu2.1",
          "ruleIndex": 45,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45918_ubuntu:jammy:ncurses-base_6.3-2ubuntu0.1",
          "ruleIndex": 46,
          "level": "note",
          "message": {
            "text": "[CVE-2023-45918] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45918_ubuntu:jammy:ncurses-bin_6.3-2ubuntu0.1",
          "ruleIndex": 47,
          "level": "note",
          "message": {
            "text": "[CVE-2023-45918] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458_ubuntu:jammy:libkrb5-3_1.19.2-2ubuntu0.3",
          "ruleIndex": 48,
          "level": "note",
          "message": {
            "text": "[CVE-2024-26458] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458_ubuntu:jammy:libk5crypto3_1.19.2-2ubuntu0.3",
          "ruleIndex": 49,
          "level": "note",
          "message": {
            "text": "[CVE-2024-26458] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_ubuntu:jammy:gpg-wks-client_2.2.27-3ubuntu2.1",
          "ruleIndex": 50,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-2781_ubuntu:jammy:coreutils_8.32-4.1ubuntu1.2",
          "ruleIndex": 51,
          "level": "note",
          "message": {
            "text": "[CVE-2016-2781] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_ubuntu:jammy:gnupg-l10n_2.2.27-3ubuntu2.1",
          "ruleIndex": 52,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5709_ubuntu:jammy:libk5crypto3_1.19.2-2ubuntu0.3",
          "ruleIndex": 53,
          "level": "note",
          "message": {
            "text": "[CVE-2018-5709] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29383_ubuntu:jammy:login:1_4.8.1-2ubuntu2.2",
          "ruleIndex": 54,
          "level": "note",
          "message": {
            "text": "[CVE-2023-29383] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_ubuntu:jammy:gpg_2.2.27-3ubuntu2.1",
          "ruleIndex": 55,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_ubuntu:jammy:gnupg-utils_2.2.27-3ubuntu2.1",
          "ruleIndex": 56,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29383_ubuntu:jammy:passwd:1_4.8.1-2ubuntu2.2",
          "ruleIndex": 57,
          "level": "note",
          "message": {
            "text": "[CVE-2023-29383] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_ubuntu:jammy:gpg-wks-server_2.2.27-3ubuntu2.1",
          "ruleIndex": 58,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27943_ubuntu:jammy:libstdc++6_12.3.0-1ubuntu1~22.04",
          "ruleIndex": 59,
          "level": "note",
          "message": {
            "text": "[CVE-2022-27943] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_ubuntu:jammy:gpgsm_2.2.27-3ubuntu2.1",
          "ruleIndex": 60,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50495_ubuntu:jammy:libtinfo6_6.3-2ubuntu0.1",
          "ruleIndex": 61,
          "level": "note",
          "message": {
            "text": "[CVE-2023-50495] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50495_ubuntu:jammy:libncursesw6_6.3-2ubuntu0.1",
          "ruleIndex": 62,
          "level": "note",
          "message": {
            "text": "[CVE-2023-50495] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_ubuntu:jammy:dirmngr_2.2.27-3ubuntu2.1",
          "ruleIndex": 63,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45918_ubuntu:jammy:libncursesw6_6.3-2ubuntu0.1",
          "ruleIndex": 64,
          "level": "note",
          "message": {
            "text": "[CVE-2023-45918] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50495_ubuntu:jammy:ncurses-base_6.3-2ubuntu0.1",
          "ruleIndex": 65,
          "level": "note",
          "message": {
            "text": "[CVE-2023-50495] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-20013_ubuntu:jammy:libc-bin_2.35-0ubuntu3.8",
          "ruleIndex": 66,
          "level": "note",
          "message": {
            "text": "[CVE-2016-20013] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50495_ubuntu:jammy:ncurses-bin_6.3-2ubuntu0.1",
          "ruleIndex": 67,
          "level": "note",
          "message": {
            "text": "[CVE-2023-50495] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7008_ubuntu:jammy:libsystemd0_249.11-0ubuntu3.12",
          "ruleIndex": 68,
          "level": "note",
          "message": {
            "text": "[CVE-2023-7008] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-20013_ubuntu:jammy:libc6_2.35-0ubuntu3.8",
          "ruleIndex": 69,
          "level": "note",
          "message": {
            "text": "[CVE-2016-20013] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5709_ubuntu:jammy:libgssapi-krb5-2_1.19.2-2ubuntu0.3",
          "ruleIndex": 70,
          "level": "note",
          "message": {
            "text": "[CVE-2018-5709] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461_ubuntu:jammy:libgssapi-krb5-2_1.19.2-2ubuntu0.3",
          "ruleIndex": 71,
          "level": "note",
          "message": {
            "text": "[CVE-2024-26461] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_ubuntu:jammy:gpgconf_2.2.27-3ubuntu2.1",
          "ruleIndex": 72,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50495_ubuntu:jammy:libncurses6_6.3-2ubuntu0.1",
          "ruleIndex": 73,
          "level": "note",
          "message": {
            "text": "[CVE-2023-50495] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-20013_ubuntu:jammy:locales_2.35-0ubuntu3.8",
          "ruleIndex": 74,
          "level": "note",
          "message": {
            "text": "[CVE-2016-20013] sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461_ubuntu:jammy:libk5crypto3_1.19.2-2ubuntu0.3",
          "ruleIndex": 75,
          "level": "note",
          "message": {
            "text": "[CVE-2024-26461] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45918_ubuntu:jammy:libtinfo6_6.3-2ubuntu0.1",
          "ruleIndex": 76,
          "level": "note",
          "message": {
            "text": "[CVE-2023-45918] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461_ubuntu:jammy:libkrb5support0_1.19.2-2ubuntu0.3",
          "ruleIndex": 77,
          "level": "note",
          "message": {
            "text": "[CVE-2024-26461] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458_ubuntu:jammy:libgssapi-krb5-2_1.19.2-2ubuntu0.3",
          "ruleIndex": 78,
          "level": "note",
          "message": {
            "text": "[CVE-2024-26458] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7008_ubuntu:jammy:libudev1_249.11-0ubuntu3.12",
          "ruleIndex": 79,
          "level": "note",
          "message": {
            "text": "[CVE-2023-7008] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27943_ubuntu:jammy:gcc-12-base_12.3.0-1ubuntu1~22.04",
          "ruleIndex": 80,
          "level": "note",
          "message": {
            "text": "[CVE-2022-27943] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3219_ubuntu:jammy:gpgv_2.2.27-3ubuntu2.1",
          "ruleIndex": 81,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3219] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603_ubuntu:jammy:openssl_3.0.2-0ubuntu1.15",
          "ruleIndex": 82,
          "level": "note",
          "message": {
            "text": "[CVE-2024-4603] sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3857_ubuntu:jammy:libpng16-16_1.6.37-3build5",
          "ruleIndex": 83,
          "level": "note",
          "message": {
            "text": "[CVE-2022-3857] sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_ubuntu:jammy:libssl3_3.0.2-0ubuntu1.15",
          "ruleIndex": 84,
          "level": "note",
          "message": {
            "text": "[CVE-2024-2511] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.19.1",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.19.1",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.19.1",
          "ruleIndex": 87,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.19.1",
          "ruleIndex": 88,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.19.1",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.19.1",
          "ruleIndex": 90,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45133_@babel/traverse_7.20.12",
          "ruleIndex": 91,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45133] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.19.1",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.19.1",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.19.1",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.19.1",
          "ruleIndex": 95,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_7.3.8",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.19.1",
          "ruleIndex": 97,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_5.7.1",
          "ruleIndex": 98,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.19.1",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.19.1",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.19.1",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.19.1",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26115_word-wrap_1.2.3",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "[CVE-2023-26115] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40152_com.fasterxml.woodstox:woodstox-core_6.2.6",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "[CVE-2022-40152] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.19.1",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.19.1",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.19.1",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.19.1",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.19.1",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40152_com.fasterxml.woodstox:woodstox-core_5.2.1",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "[CVE-2022-40152] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.19.1",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2976_com.google.guava:guava_31.1-jre",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "[CVE-2023-2976] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_6.3.0",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2251_yaml_2.1.1",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "[CVE-2023-2251] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4759_org.eclipse.jgit:org.eclipse.jgit_6.4.0.202211300538-r",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "[CVE-2023-4759] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2976_com.google.guava:guava_30.1.1-jre",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "[CVE-2023-2976] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.19.1",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.19.1",
          "ruleIndex": 118,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.19.1",
          "ruleIndex": 119,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13956_org.apache.httpcomponents:httpclient_4.5.10",
          "ruleIndex": 120,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-13956] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26308_org.apache.commons:commons-compress_1.21",
          "ruleIndex": 121,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-26308] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.19.1",
          "ruleIndex": 122,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8908_com.google.guava:guava_30.1.1-jre",
          "ruleIndex": 123,
          "level": "note",
          "message": {
            "text": "[CVE-2020-8908] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4741_ubuntu:jammy:libssl3_3.0.2-0ubuntu1.15",
          "ruleIndex": 124,
          "level": "note",
          "message": {
            "text": "[CVE-2024-4741] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4741_ubuntu:jammy:openssl_3.0.2-0ubuntu1.15",
          "ruleIndex": 125,
          "level": "note",
          "message": {
            "text": "[CVE-2024-4741] sha256__5e75506f60a059374907f0187525e1026f90d713cc161ed065d34d0b1974dc44.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4899_ubuntu:jammy:libzstd1_1.4.8+dfsg-3build1",
          "ruleIndex": 126,
          "level": "note",
          "message": {
            "text": "[CVE-2022-4899] sha256__0b9c994b0484c0bc61f9de7c28a58745a504704254c5e8ed12349ebee3393a66.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8908_com.google.guava:guava_31.1-jre",
          "ruleIndex": 127,
          "level": "note",
          "message": {
            "text": "[CVE-2020-8908] sha256__25b678cbae872a513ffe592e2b479abfbabfc9fd448161dd5cf41d117bfaf2a4.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2022-41716",
              "name": "CVE-2022-41716",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41716"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41722",
              "name": "CVE-2022-41722",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41722"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41720",
              "name": "CVE-2022-41720",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41720"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called.",
                "markdown": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45283",
              "name": "CVE-2023-45283",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45283"
              },
              "fullDescription": {
                "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.",
                "markdown": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-4759",
              "name": "CVE-2023-4759",
              "shortDescription": {
                "text": "Scanner for CVE-2023-4759"
              },
              "fullDescription": {
                "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.",
                "markdown": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2880",
              "name": "CVE-2022-2880",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2880"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2879",
              "name": "CVE-2022-2879",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2879"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called.",
                "markdown": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41715",
              "name": "CVE-2022-41715",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41715"
              },
              "fullDescription": {
                "text": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`.",
                "markdown": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41724",
              "name": "CVE-2022-41724",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41724"
              },
              "fullDescription": {
                "text": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)",
                "markdown": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41725",
              "name": "CVE-2022-41725",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41725"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24536",
              "name": "CVE-2023-24536",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24536"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-45688",
              "name": "CVE-2022-45688",
              "shortDescription": {
                "text": "Scanner for CVE-2022-45688"
              },
              "fullDescription": {
                "text": "This scanner checks whether the vulnerable function `XML.toJSONObject` is called.",
                "markdown": "This scanner checks whether the vulnerable function `XML.toJSONObject` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24534",
              "name": "CVE-2023-24534",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24534"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24537",
              "name": "CVE-2023-24537",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24537"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24538",
              "name": "CVE-2023-24538",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24538"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24539",
              "name": "CVE-2023-24539",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24539"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24540",
              "name": "CVE-2023-24540",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24540"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29400",
              "name": "CVE-2023-29400",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29400"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29402",
              "name": "CVE-2023-29402",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29402"
              },
              "fullDescription": {
                "text": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)",
                "markdown": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29403",
              "name": "CVE-2023-29403",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29403"
              },
              "fullDescription": {
                "text": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled",
                "markdown": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29406",
              "name": "CVE-2023-29406",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29406"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29409",
              "name": "CVE-2023-29409",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29409"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-26115",
              "name": "CVE-2023-26115",
              "shortDescription": {
                "text": "Scanner for CVE-2023-26115"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable module `word-wrap` is called with external input and the `trim` option set to true.",
                "markdown": "The scanner checks whether the vulnerable module `word-wrap` is called with external input and the `trim` option set to true."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25883",
              "name": "CVE-2022-25883",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25883"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`",
                "markdown": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-2251",
              "name": "CVE-2023-2251",
              "shortDescription": {
                "text": "Scanner for CVE-2023-2251"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions `parseDocument()` or `parseAllDocuments()` are called with external input.",
                "markdown": "The scanner checks whether the vulnerable functions `parseDocument()` or `parseAllDocuments()` are called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-39323",
              "name": "CVE-2023-39323",
              "shortDescription": {
                "text": "Scanner for CVE-2023-39323"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29405",
              "name": "CVE-2023-29405",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29405"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29404",
              "name": "CVE-2023-29404",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29404"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45285",
              "name": "CVE-2023-45285",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45285"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction.",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-5072",
              "name": "CVE-2023-5072",
              "shortDescription": {
                "text": "Scanner for CVE-2023-5072"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `JSONObject` class is used.",
                "markdown": "The scanner checks whether the `JSONObject` class is used."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45133",
              "name": "CVE-2023-45133",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45133"
              },
              "fullDescription": {
                "text": "The scanner checks whether:\n\n* One of the vulnerable functions `NodePath.evaluate()` or `NodePath.evaluateTruthy()` is used.\n\n* One of the vulnerable plugins is enabled:\n    - `@babel/plugin-transform-runtime`\n    - `@babel/preset-env` when using the `useBuiltIns` option\n    - Any `polyfill provider` plugin that depends on `@babel/helper-define-polyfill-provider`. \n\nNote: Babel has multiple ways to enable plugins. Our scanner checks all the possible ways: through the JSON config file of Babel, through CLI, API, and dynamic configuration in JS.",
                "markdown": "The scanner checks whether:\n\n* One of the vulnerable functions `NodePath.evaluate()` or `NodePath.evaluateTruthy()` is used.\n\n* One of the vulnerable plugins is enabled:\n    - `@babel/plugin-transform-runtime`\n    - `@babel/preset-env` when using the `useBuiltIns` option\n    - Any `polyfill provider` plugin that depends on `@babel/helper-define-polyfill-provider`. \n\nNote: Babel has multiple ways to enable plugins. Our scanner checks all the possible ways: through the JSON config file of Babel, through CLI, API, and dynamic configuration in JS."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45287",
              "name": "CVE-2023-45287",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45287"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`",
                "markdown": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-35116",
              "name": "CVE-2023-35116",
              "shortDescription": {
                "text": "Scanner for CVE-2023-35116"
              },
              "fullDescription": {
                "text": "The scanner checks for calls to the vulnerable functions with external input:\n\n*  `ObjectMapper.writeValue()`\n*  `ObjectMapper.writeValueAsString()`\n*  `ObjectMapper.writeValueAsBytes()`\n*  `ObjectWriter.writeValue()`\n*  `ObjectWriter.writeValueAsString()`\n*  `ObjectWriter.writeValueAsBytes()`\n* `ser.DefaultSerializerProvider.serializeValue()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The input argument to those functions is a cyclic object (e.g. a `HashMap` object with a reference to itself).",
                "markdown": "The scanner checks for calls to the vulnerable functions with external input:\n\n*  `ObjectMapper.writeValue()`\n*  `ObjectMapper.writeValueAsString()`\n*  `ObjectMapper.writeValueAsBytes()`\n*  `ObjectWriter.writeValue()`\n*  `ObjectWriter.writeValueAsString()`\n*  `ObjectWriter.writeValueAsBytes()`\n* `ser.DefaultSerializerProvider.serializeValue()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The input argument to those functions is a cyclic object (e.g. a `HashMap` object with a reference to itself)."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-2976",
              "name": "CVE-2023-2976",
              "shortDescription": {
                "text": "Scanner for CVE-2023-2976"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-8908",
              "name": "CVE-2020-8908",
              "shortDescription": {
                "text": "Scanner for CVE-2020-8908"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-40152",
              "name": "CVE-2022-40152",
              "shortDescription": {
                "text": "Scanner for CVE-2022-40152"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `fromXML` is called with external input to its 1st (`input`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `fromXML` is called with external input to its 1st (`input`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1471",
              "name": "CVE-2022-1471",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1471"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the vulnerable functions are called -\n\n* `Yaml.load`\n* `Yaml.loadAll`\n* `Load.loadFromString`\n* `Load.loadAllFromString`\n* `Load.loadFromInputStream`\n* `Load.loadAllFromInputStream`\n* `Load.loadFromReader`\n* `Load.loadAllFromReader`\n\n\nIn addition, the scanner also checks whether a mitigation is used (initiating `Yaml` with a `SafeConstructor`).",
                "markdown": "The scanner checks whether any of the vulnerable functions are called -\n\n* `Yaml.load`\n* `Yaml.loadAll`\n* `Load.loadFromString`\n* `Load.loadAllFromString`\n* `Load.loadFromInputStream`\n* `Load.loadAllFromInputStream`\n* `Load.loadFromReader`\n* `Load.loadAllFromReader`\n\n\nIn addition, the scanner also checks whether a mitigation is used (initiating `Yaml` with a `SafeConstructor`)."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-13956",
              "name": "CVE-2020-13956",
              "shortDescription": {
                "text": "Scanner for CVE-2020-13956"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `extractHost` is called with external input to its 1st (`uri`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `extractHost` is called with external input to its 1st (`uri`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-4899",
              "name": "CVE-2022-4899",
              "shortDescription": {
                "text": "Scanner for CVE-2022-4899"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the flags `--output-dir-flat` or `--output-dir-mirror` are used with the `zstd` command.",
                "markdown": "The scanner checks whether one of the flags `--output-dir-flat` or `--output-dir-mirror` are used with the `zstd` command."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-1597",
              "name": "CVE-2024-1597",
              "shortDescription": {
                "text": "Scanner for CVE-2024-1597"
              },
              "fullDescription": {
                "text": "The scanner checks for a call to the vulnerable function `java.sql.PreparedStatement.SetString` and for at least one of the following vulnerable functions:\n\n* `java.sql.PreparedStatement.SetInt`\n* `java.sql.PreparedStatement.SetDouble`\n* `java.sql.PreparedStatement.SetFloat` \n* `java.sql.PreparedStatement.SetShort`\n* `java.sql.PreparedStatement.SetLong`\n\nFor determining the applicability of this CVE, additional conditions (that the scanner currently does not check) should be verified. The conditions are:\n1. The non-default `PreferQueryMode=SIMPLE` parameter should be used in the JDBC connection string. An example of a connection string that uses this mode: `jdbc:postgresql://localhost:5432/?preferQueryMode=simple`\n2. The numeric variable (set for example by a `SetInt` function call) must come after a minus (`-`) character in the query.",
                "markdown": "The scanner checks for a call to the vulnerable function `java.sql.PreparedStatement.SetString` and for at least one of the following vulnerable functions:\n\n* `java.sql.PreparedStatement.SetInt`\n* `java.sql.PreparedStatement.SetDouble`\n* `java.sql.PreparedStatement.SetFloat` \n* `java.sql.PreparedStatement.SetShort`\n* `java.sql.PreparedStatement.SetLong`\n\nFor determining the applicability of this CVE, additional conditions (that the scanner currently does not check) should be verified. The conditions are:\n1. The non-default `PreferQueryMode=SIMPLE` parameter should be used in the JDBC connection string. An example of a connection string that uses this mode: `jdbc:postgresql://localhost:5432/?preferQueryMode=simple`\n2. The numeric variable (set for example by a `SetInt` function call) must come after a minus (`-`) character in the query."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-26308",
              "name": "CVE-2024-26308",
              "shortDescription": {
                "text": "Scanner for CVE-2024-26308"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable class `Pack200CompressorInputStream` is instantiated.",
                "markdown": "The scanner checks whether the vulnerable class `Pack200CompressorInputStream` is instantiated."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-6378",
              "name": "CVE-2023-6378",
              "shortDescription": {
                "text": "Scanner for CVE-2023-6378"
              },
              "fullDescription": {
                "text": "The scanner checks whether:\n\n1. One of the following class is instantiated in the application:\n\n* RemoteAppenderStreamClient\n* RemoteAppenderServerListener\n* ServerSocketReceiver\n* SSLServerSocketReceiver\n* SocketReceiver\n* SocketNode\n* HardenedObjectInputStream\n* HardenedModelInputStream\n* HardenedLoggingEventInputStream\n\n2. An Appender or Receiver is defined in a configuration file XML.\nFor example -\n```xml\n\u003cconfiguration\u003e\n  \u003creceiver class=\"ch.qos.logback.classic.net.server.ServerSocketReceiver\"\u003e\n  \u003c/receiver\u003e\n\u003c/configuration\u003e\n```",
                "markdown": "The scanner checks whether:\n\n1. One of the following class is instantiated in the application:\n\n* RemoteAppenderStreamClient\n* RemoteAppenderServerListener\n* ServerSocketReceiver\n* SSLServerSocketReceiver\n* SocketReceiver\n* SocketNode\n* HardenedObjectInputStream\n* HardenedModelInputStream\n* HardenedLoggingEventInputStream\n\n2. An Appender or Receiver is defined in a configuration file XML.\nFor example -\n```xml\n\u003cconfiguration\u003e\n  \u003creceiver class=\"ch.qos.logback.classic.net.server.ServerSocketReceiver\"\u003e\n  \u003c/receiver\u003e\n\u003c/configuration\u003e\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45288",
              "name": "CVE-2023-45288",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45288"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`.",
                "markdown": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-4741",
              "name": "CVE-2024-4741",
              "shortDescription": {
                "text": "Scanner for CVE-2024-4741"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `SSL_free_buffers` is called.",
                "markdown": "The scanner checks whether the vulnerable function `SSL_free_buffers` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-11164",
              "name": "CVE-2017-11164",
              "shortDescription": {
                "text": "Scanner for CVE-2017-11164"
              },
              "fullDescription": {
                "text": "The scanner checks whether a binary uses the `PCRE1` vulnerable functions: `pcre_compile()` or `pcre_exec()`.",
                "markdown": "The scanner checks whether a binary uses the `PCRE1` vulnerable functions: `pcre_compile()` or `pcre_exec()`."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-45868",
              "name": "CVE-2022-45868",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-45868"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39318",
              "name": "CVE-2023-39318",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39318"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-2781",
              "name": "CVE-2016-2781",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-2781"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45918",
              "name": "CVE-2023-45918",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45918"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-29041",
              "name": "CVE-2024-29041",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-29041"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45859",
              "name": "CVE-2023-45859",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45859"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-29025",
              "name": "CVE-2024-29025",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-29025"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-25710",
              "name": "CVE-2024-25710",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-25710"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45284",
              "name": "CVE-2023-45284",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45284"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-3857",
              "name": "CVE-2022-3857",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-3857"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-4603",
              "name": "CVE-2024-4603",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-4603"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-7008",
              "name": "CVE-2023-7008",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-7008"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-29383",
              "name": "CVE-2023-29383",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-29383"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-33264",
              "name": "CVE-2023-33264",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-33264"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-38428",
              "name": "CVE-2024-38428",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-38428"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-3219",
              "name": "CVE-2022-3219",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-3219"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-26462",
              "name": "CVE-2024-26462",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-26462"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22570",
              "name": "CVE-2021-22570",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22570"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-24532",
              "name": "CVE-2023-24532",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-24532"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-23450",
              "name": "CVE-2024-23450",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-23450"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2511",
              "name": "CVE-2024-2511",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2511"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-40735",
              "name": "CVE-2022-40735",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-40735"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-26458",
              "name": "CVE-2024-26458",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-26458"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39319",
              "name": "CVE-2023-39319",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39319"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-44270",
              "name": "CVE-2023-44270",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-44270"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-4068",
              "name": "CVE-2024-4068",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-4068"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2236",
              "name": "CVE-2024-2236",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2236"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-31879",
              "name": "CVE-2021-31879",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-31879"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27943",
              "name": "CVE-2022-27943",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27943"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-5709",
              "name": "CVE-2018-5709",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-5709"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-50495",
              "name": "CVE-2023-50495",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-50495"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-33265",
              "name": "CVE-2023-33265",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-33265"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-44483",
              "name": "CVE-2023-44483",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-44483"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39326",
              "name": "CVE-2023-39326",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39326"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45860",
              "name": "CVE-2023-45860",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45860"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-20013",
              "name": "CVE-2016-20013",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-20013"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-26461",
              "name": "CVE-2024-26461",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-26461"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-22916",
              "name": "CVE-2020-22916",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-22916"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718841069-1522322340/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718840904-2036792423/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2022-41716",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-41722",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-41720",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45283",
          "kind": "pass",
          "message": {
            "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
          }
        },
        {
          "ruleId": "applic_CVE-2023-4759",
          "kind": "pass",
          "message": {
            "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
          }
        },
        {
          "ruleId": "applic_CVE-2022-2880",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-2879",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41715",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41724",
          "kind": "pass",
          "message": {
            "text": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)"
          }
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-45688",
          "message": {
            "text": "The vulnerable function XML.toJSONObject is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/XML.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-24537",
          "message": {
            "text": "The vulnerable function Scanner.scan is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/extensions/sonar-go-plugin-1.11.0.3905.jar/sonar-go-to-slang-linux-amd64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24537",
          "message": {
            "text": "The vulnerable function ParseFile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/extensions/sonar-go-plugin-1.11.0.3905.jar/sonar-go-to-slang-linux-amd64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-29402",
          "kind": "pass",
          "message": {
            "text": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29403",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-26115",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable module `word-wrap` is called with external input and the `trim` option set to true."
          }
        },
        {
          "ruleId": "applic_CVE-2022-25883",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-2251",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable functions `parseDocument()` or `parseAllDocuments()` are called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2023-39323",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29405",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29404",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45285",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction."
          }
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/SchemaException.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/ValidationException.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/event/ValidationEvent.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/internal/JSONWriter.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/internal/JSONWriter.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/loader/JsonPointerEvaluator.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/loader/JsonValue.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/loader/ReferenceLookup.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/loader/SchemaLoader%24SchemaLoaderBuilder.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/loader/SchemaLoader.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/everit/json/schema/loader/internal/JSONPointer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/Cookie.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/CookieList.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/HTTP.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONArray.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONArray.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONML.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONObject%24Null.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONObject.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONObject.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONObject.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONObject.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONObject.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONTokener.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONWriter.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/JSONWriter.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/Property.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/XML.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/json/XML.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/auth/saml/SamlAuthStatusPageGenerator.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5072",
          "message": {
            "text": "The vulnerable JSONObject class is initiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/server/setting/ws/SettingValidations%24ValueTypeValidation.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45133",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether:\n\n* One of the vulnerable functions `NodePath.evaluate()` or `NodePath.evaluateTruthy()` is used.\n\n* One of the vulnerable plugins is enabled:\n    - `@babel/plugin-transform-runtime`\n    - `@babel/preset-env` when using the `useBuiltIns` option\n    - Any `polyfill provider` plugin that depends on `@babel/helper-define-polyfill-provider`. \n\nNote: Babel has multiple ways to enable plugins. Our scanner checks all the possible ways: through the JSON config file of Babel, through CLI, API, and dynamic configuration in JS."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/elasticsearch/lib/elasticsearch-log4j-7.17.15.jar/org/apache/logging/log4j/core/layout/AbstractJacksonLayout.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/auth0/jwt/JWTCreator.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/io/jsonwebtoken/jackson/io/JacksonSerializer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2976",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-8908",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-40152",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `fromXML` is called with external input to its 1st (`input`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2022-1471",
          "message": {
            "text": "A SnakeYAML constructor class is not instantiated safely"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-1471",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-1471",
          "message": {
            "text": "A SnakeYAML constructor class is not instantiated safely"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-1471",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-13956",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `extractHost` is called with external input to its 1st (`uri`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2022-4899",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the flags `--output-dir-flat` or `--output-dir-mirror` are used with the `zstd` command."
          }
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/server/web/WebApp.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/server/web/WebApp.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/server/web/WebApp.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/util/JdbcUtils.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/h2/h2-2.1.214.jar/org/h2/util/JdbcUtils.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/postgresql/postgresql-42.5.1.jar/org/postgresql/jdbc/TypeInfoCache.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/postgresql/postgresql-42.5.1.jar/org/postgresql/jdbc/TypeInfoCache.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/postgresql/postgresql-42.5.1.jar/org/postgresql/jdbc/TypeInfoCache.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/postgresql/postgresql-42.5.1.jar/org/postgresql/jdbc/TypeInfoCache.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/jdbc/postgresql/postgresql-42.5.1.jar/org/postgresql/jdbc/TypeInfoCache.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/hazelcast/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyCallableStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/com/zaxxer/hikari/pool/HikariProxyPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/DataSourceStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/DataSourceStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/DataSourceStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/DataSourceStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/DataSourceStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/DataSourceStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/DataSourceStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/DataSourceStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/JDBCStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/JDBCStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/JDBCStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/JDBCStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/JDBCStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/JDBCStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/JDBCStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/session/JDBCStore.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/valves/JDBCAccessLogValve.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/apache/catalina/valves/JDBCAccessLogValve.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/ce/CeScannerContextDao.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/ce/CeScannerContextDao.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/ce/CeScannerContextDao.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/ce/CeTaskInputDao.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/ce/CeTaskInputDao.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/ce/CeTaskInputDao.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/measure/ProjectMeasuresIndexerIterator.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/measure/ProjectMeasuresIndexerIterator.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/measure/ProjectMeasuresIndexerIterator.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/measure/ProjectMeasuresIndexerIterator.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/measure/ProjectMeasuresIndexerIterator.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/db/measure/ProjectMeasuresIndexerIterator.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/server/platform/db/migration/step/BaseSqlStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/server/platform/db/migration/step/BaseSqlStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/server/platform/db/migration/step/BaseSqlStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/org/sonar/server/platform/db/migration/step/BaseSqlStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-26308",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable class `Pack200CompressorInputStream` is instantiated."
          }
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/ch/qos/logback/classic/net/SSLSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/ch/qos/logback/classic/net/SimpleSocketServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/ch/qos/logback/classic/net/SocketNode.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/ch/qos/logback/classic/net/SocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/ch/qos/logback/classic/net/server/HardenedLoggingEventInputStream.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Appender is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/ch/qos/logback/classic/net/server/RemoteAppenderServerListener.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/ch/qos/logback/classic/net/server/RemoteAppenderStreamClient.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/ch/qos/logback/classic/net/server/SSLServerSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Appender is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/ch/qos/logback/classic/net/server/ServerSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/ch/qos/logback/access/net/HardenedAccessEventInputStream.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/ch/qos/logback/classic/net/SSLSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/ch/qos/logback/classic/net/SimpleSocketServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/ch/qos/logback/classic/net/SocketNode.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/ch/qos/logback/classic/net/SocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/ch/qos/logback/classic/net/server/HardenedLoggingEventInputStream.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Appender is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/ch/qos/logback/classic/net/server/RemoteAppenderServerListener.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/ch/qos/logback/classic/net/server/RemoteAppenderStreamClient.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/ch/qos/logback/classic/net/server/SSLServerSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Appender is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///opt/sonarqube/lib/sonar-application-9.9.5.90363.jar/ch/qos/logback/classic/net/server/ServerSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "An appender's configuration is defined within a configuration file"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjxdmlnup/unpacked/filesystem/blobs/sha256/775a3bef255b35ec85addcb041d4769e466e5ca4c85fca0f851dd48951a97893/opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/org/sonar/batch/bootstrapper/logback.xml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\u003cappender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\"\u003e\n    \u003cencoder\u003e\n      \u003cpattern\u003e${FORMAT}\u003c/pattern\u003e\n    \u003c/encoder\u003e\n  \u003c/appender\u003e"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "An appender's configuration is defined within a configuration file"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpjxdmlnup/unpacked/filesystem/blobs/sha256/775a3bef255b35ec85addcb041d4769e466e5ca4c85fca0f851dd48951a97893/opt/sonarqube/lib/scanner/sonar-scanner-engine-shaded-9.9.5.90363-all.jar/org/sonar/batch/logback.xml"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 14,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\u003cappender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\"\u003e\n    \u003cencoder\u003e\n      \u003cpattern\u003e%d{HH:mm:ss.SSS} %-5level %20.20logger{20} - %msg%n\u003c/pattern\u003e\n    \u003c/encoder\u003e\n  \u003c/appender\u003e"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45288",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`."
          }
        },
        {
          "ruleId": "applic_CVE-2024-4741",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `SSL_free_buffers` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2017-11164",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/grep"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2017-11164",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/grep"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718841069-1522322340/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718840904-2036792423/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp0n2zm1us/unpacked/filesystem/blobs/sha256/775a3bef255b35ec85addcb041d4769e466e5ca4c85fca0f851dd48951a97893/opt/java/openjdk/conf/management/jmxremote.password.template"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 2,
                  "endLine": 44,
                  "endColumn": 2,
                  "snippet": {
                    "text": "has************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp0n2zm1us/unpacked/filesystem/blobs/sha256/775a3bef255b35ec85addcb041d4769e466e5ca4c85fca0f851dd48951a97893/opt/sonarqube/dependency-license.json"
                },
                "region": {
                  "startLine": 460,
                  "startColumn": 24,
                  "endLine": 460,
                  "endColumn": 24,
                  "snippet": {
                    "text": "jso************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp0n2zm1us/unpacked/filesystem/blobs/sha256/775a3bef255b35ec85addcb041d4769e466e5ca4c85fca0f851dd48951a97893/opt/sonarqube/dependency-license.json"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 24,
                  "endLine": 470,
                  "endColumn": 24,
                  "snippet": {
                    "text": "jso************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp0n2zm1us/unpacked/filesystem/blobs/sha256/775a3bef255b35ec85addcb041d4769e466e5ca4c85fca0f851dd48951a97893/opt/sonarqube/dependency-license.json"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 24,
                  "endLine": 480,
                  "endColumn": 24,
                  "snippet": {
                    "text": "jso************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp0n2zm1us/unpacked/filesystem/blobs/sha256/775a3bef255b35ec85addcb041d4769e466e5ca4c85fca0f851dd48951a97893/opt/sonarqube/lib/extensions/sonar-ruby-plugin-1.11.0.3905.jar/META-INF/jruby.home/lib/ruby/stdlib/bundler/vendor/uri/lib/uri/generic.rb"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 12,
                  "endLine": 496,
                  "endColumn": 12,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmp0n2zm1us/unpacked/filesystem/blobs/sha256/775a3bef255b35ec85addcb041d4769e466e5ca4c85fca0f851dd48951a97893/opt/sonarqube/lib/extensions/sonar-ruby-plugin-1.11.0.3905.jar/META-INF/jruby.home/lib/ruby/stdlib/uri/generic.rb"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 12,
                  "endLine": 496,
                  "endColumn": 12,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
