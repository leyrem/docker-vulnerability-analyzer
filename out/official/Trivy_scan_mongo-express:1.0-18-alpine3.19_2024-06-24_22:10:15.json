{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2023-45133",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "babel: arbitrary code execution"
              },
              "fullDescription": {
                "text": "Babel is a compiler for writingJavaScript. In `@babel/traverse` prior to versions 7.23.2 and 8.0.0-alpha.4 and all versions of `babel-traverse`, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any \u0026#34;polyfill provider\u0026#34; plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. The vulnerability has been fixed in `@babel/traverse@7.23.2` and `@babel/traverse@8.0.0-alpha.4`. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45133",
              "help": {
                "text": "Vulnerability CVE-2023-45133\nSeverity: CRITICAL\nPackage: @babel/traverse\nFixed Version: 7.23.2, 8.0.0-alpha.4\nLink: [CVE-2023-45133](https://avd.aquasec.com/nvd/cve-2023-45133)\nBabel is a compiler for writingJavaScript. In `@babel/traverse` prior to versions 7.23.2 and 8.0.0-alpha.4 and all versions of `babel-traverse`, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any \"polyfill provider\" plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. The vulnerability has been fixed in `@babel/traverse@7.23.2` and `@babel/traverse@8.0.0-alpha.4`. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3.",
                "markdown": "**Vulnerability CVE-2023-45133**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|@babel/traverse|7.23.2, 8.0.0-alpha.4|[CVE-2023-45133](https://avd.aquasec.com/nvd/cve-2023-45133)|\n\nBabel is a compiler for writingJavaScript. In `@babel/traverse` prior to versions 7.23.2 and 8.0.0-alpha.4 and all versions of `babel-traverse`, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any \"polyfill provider\" plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. The vulnerability has been fixed in `@babel/traverse@7.23.2` and `@babel/traverse@8.0.0-alpha.4`. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-27088",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "es5-ext contains ECMAScript 5 extensions. Passing functions with very  ..."
              },
              "fullDescription": {
                "text": "es5-ext contains ECMAScript 5 extensions. Passing functions with very long names or complex default argument names into `function#copy` or `function#toStringTokens` may cause the script to stall. The vulnerability is patched in v0.10.63."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-27088",
              "help": {
                "text": "Vulnerability CVE-2024-27088\nSeverity: LOW\nPackage: es5-ext\nFixed Version: 0.10.63\nLink: [CVE-2024-27088](https://avd.aquasec.com/nvd/cve-2024-27088)\nes5-ext contains ECMAScript 5 extensions. Passing functions with very long names or complex default argument names into `function#copy` or `function#toStringTokens` may cause the script to stall. The vulnerability is patched in v0.10.63.",
                "markdown": "**Vulnerability CVE-2024-27088**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|es5-ext|0.10.63|[CVE-2024-27088](https://avd.aquasec.com/nvd/cve-2024-27088)|\n\nes5-ext contains ECMAScript 5 extensions. Passing functions with very long names or complex default argument names into `function#copy` or `function#toStringTokens` may cause the script to stall. The vulnerability is patched in v0.10.63."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-29041",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "express: cause malformed URLs to be evaluated"
              },
              "fullDescription": {
                "text": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-29041",
              "help": {
                "text": "Vulnerability CVE-2024-29041\nSeverity: MEDIUM\nPackage: express\nFixed Version: 4.19.2, 5.0.0-beta.3\nLink: [CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)\nExpress.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3.",
                "markdown": "**Vulnerability CVE-2024-29041**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|express|4.19.2, 5.0.0-beta.3|[CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)|\n\nExpress.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-26920",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "fast-xml-parser vulnerable to Prototype Pollution through tag or attribute name"
              },
              "fullDescription": {
                "text": "fast-xml-parser before 4.1.2 allows __proto__ for Prototype Pollution."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-26920",
              "help": {
                "text": "Vulnerability CVE-2023-26920\nSeverity: MEDIUM\nPackage: fast-xml-parser\nFixed Version: 4.1.2\nLink: [CVE-2023-26920](https://avd.aquasec.com/nvd/cve-2023-26920)\nfast-xml-parser before 4.1.2 allows __proto__ for Prototype Pollution.",
                "markdown": "**Vulnerability CVE-2023-26920**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|fast-xml-parser|4.1.2|[CVE-2023-26920](https://avd.aquasec.com/nvd/cve-2023-26920)|\n\nfast-xml-parser before 4.1.2 allows __proto__ for Prototype Pollution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-29415",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "node-ip: Incomplete fix for CVE-2023-42282"
              },
              "fullDescription": {
                "text": "The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-29415",
              "help": {
                "text": "Vulnerability CVE-2024-29415\nSeverity: HIGH\nPackage: ip\nFixed Version: \nLink: [CVE-2024-29415](https://avd.aquasec.com/nvd/cve-2024-29415)\nThe ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.",
                "markdown": "**Vulnerability CVE-2024-29415**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ip||[CVE-2024-29415](https://avd.aquasec.com/nvd/cve-2024-29415)|\n\nThe ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-42282",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-ip: arbitrary code execution via the isPublic() function"
              },
              "fullDescription": {
                "text": "The ip package before 1.1.9 for Node.js might allow SSRF because some IP addresses (such as 0x7f.1) are improperly categorized as globally routable via isPublic."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-42282",
              "help": {
                "text": "Vulnerability CVE-2023-42282\nSeverity: MEDIUM\nPackage: ip\nFixed Version: 2.0.1, 1.1.9\nLink: [CVE-2023-42282](https://avd.aquasec.com/nvd/cve-2023-42282)\nThe ip package before 1.1.9 for Node.js might allow SSRF because some IP addresses (such as 0x7f.1) are improperly categorized as globally routable via isPublic.",
                "markdown": "**Vulnerability CVE-2023-42282**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ip|2.0.1, 1.1.9|[CVE-2023-42282](https://avd.aquasec.com/nvd/cve-2023-42282)|\n\nThe ip package before 1.1.9 for Node.js might allow SSRF because some IP addresses (such as 0x7f.1) are improperly categorized as globally routable via isPublic."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-46175",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "json5: Prototype Pollution in JSON5 via Parse Method"
              },
              "fullDescription": {
                "text": "JSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-46175",
              "help": {
                "text": "Vulnerability CVE-2022-46175\nSeverity: HIGH\nPackage: json5\nFixed Version: 2.2.2, 1.0.2\nLink: [CVE-2022-46175](https://avd.aquasec.com/nvd/cve-2022-46175)\nJSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later.",
                "markdown": "**Vulnerability CVE-2022-46175**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|json5|2.2.2, 1.0.2|[CVE-2022-46175](https://avd.aquasec.com/nvd/cve-2022-46175)|\n\nJSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-52555",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "mongo-express Cross-site Request Forgery vulnerability"
              },
              "fullDescription": {
                "text": "In mongo-express 1.0.2, /admin allows CSRF, as demonstrated by deletion of a Collection."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-52555",
              "help": {
                "text": "Vulnerability CVE-2023-52555\nSeverity: MEDIUM\nPackage: mongo-express\nFixed Version: \nLink: [CVE-2023-52555](https://avd.aquasec.com/nvd/cve-2023-52555)\nIn mongo-express 1.0.2, /admin allows CSRF, as demonstrated by deletion of a Collection.",
                "markdown": "**Vulnerability CVE-2023-52555**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|mongo-express||[CVE-2023-52555](https://avd.aquasec.com/nvd/cve-2023-52555)|\n\nIn mongo-express 1.0.2, /admin allows CSRF, as demonstrated by deletion of a Collection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-32050",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Some MongoDB Drivers may erroneously publish events containing authent ..."
              },
              "fullDescription": {
                "text": "Some MongoDB Drivers may erroneously publish events containing authentication-related data to a command listener configured by an application. The published events may contain security-sensitive data when specific authentication-related commands are executed.\n\nWithout due care, an application may inadvertently expose this sensitive information, e.g., by writing it to a log file. This issue only arises if an application enables the command listener feature (this is not enabled by default).\n\nThis issue affects the MongoDB C Driver 1.0.0 prior to 1.17.7, MongoDB PHP Driver 1.0.0 prior to 1.9.2, MongoDB Swift Driver 1.0.0 prior to 1.1.1, MongoDB Node.js Driver 3.6 prior to 3.6.10, MongoDB Node.js Driver 4.0 prior to 4.17.0 and MongoDB Node.js Driver 5.0 prior to 5.8.0. This issue also affects users of the MongoDB C++ Driver dependent on the C driver 1.0.0 prior to 1.17.7 (C++ driver prior to 3.7.0).\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-32050",
              "help": {
                "text": "Vulnerability CVE-2021-32050\nSeverity: MEDIUM\nPackage: mongodb\nFixed Version: 3.6.10, 4.17.0, 5.8.0\nLink: [CVE-2021-32050](https://avd.aquasec.com/nvd/cve-2021-32050)\nSome MongoDB Drivers may erroneously publish events containing authentication-related data to a command listener configured by an application. The published events may contain security-sensitive data when specific authentication-related commands are executed.\n\nWithout due care, an application may inadvertently expose this sensitive information, e.g., by writing it to a log file. This issue only arises if an application enables the command listener feature (this is not enabled by default).\n\nThis issue affects the MongoDB C Driver 1.0.0 prior to 1.17.7, MongoDB PHP Driver 1.0.0 prior to 1.9.2, MongoDB Swift Driver 1.0.0 prior to 1.1.1, MongoDB Node.js Driver 3.6 prior to 3.6.10, MongoDB Node.js Driver 4.0 prior to 4.17.0 and MongoDB Node.js Driver 5.0 prior to 5.8.0. This issue also affects users of the MongoDB C++ Driver dependent on the C driver 1.0.0 prior to 1.17.7 (C++ driver prior to 3.7.0).\n\n",
                "markdown": "**Vulnerability CVE-2021-32050**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|mongodb|3.6.10, 4.17.0, 5.8.0|[CVE-2021-32050](https://avd.aquasec.com/nvd/cve-2021-32050)|\n\nSome MongoDB Drivers may erroneously publish events containing authentication-related data to a command listener configured by an application. The published events may contain security-sensitive data when specific authentication-related commands are executed.\n\nWithout due care, an application may inadvertently expose this sensitive information, e.g., by writing it to a log file. This issue only arises if an application enables the command listener feature (this is not enabled by default).\n\nThis issue affects the MongoDB C Driver 1.0.0 prior to 1.17.7, MongoDB PHP Driver 1.0.0 prior to 1.9.2, MongoDB Swift Driver 1.0.0 prior to 1.1.1, MongoDB Node.js Driver 3.6 prior to 3.6.10, MongoDB Node.js Driver 4.0 prior to 4.17.0 and MongoDB Node.js Driver 5.0 prior to 5.8.0. This issue also affects users of the MongoDB C++ Driver dependent on the C driver 1.0.0 prior to 1.17.7 (C++ driver prior to 3.7.0).\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-25883",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-semver: Regular expression denial of service"
              },
              "fullDescription": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\r\r\r"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25883",
              "help": {
                "text": "Vulnerability CVE-2022-25883\nSeverity: MEDIUM\nPackage: semver\nFixed Version: 7.5.2, 6.3.1, 5.7.2\nLink: [CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)\nVersions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\r\r\r",
                "markdown": "**Vulnerability CVE-2022-25883**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|semver|7.5.2, 6.3.1, 5.7.2|[CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)|\n\nVersions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\r\r\r"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            }
          ],
          "version": "0.52.0"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2023-45133",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: @babel/traverse\nInstalled Version: 7.19.6\nVulnerability CVE-2023-45133\nSeverity: CRITICAL\nFixed Version: 7.23.2, 8.0.0-alpha.4\nLink: [CVE-2023-45133](https://avd.aquasec.com/nvd/cve-2023-45133)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/node_modules/@babel/traverse/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "app/node_modules/@babel/traverse/package.json: @babel/traverse@7.19.6"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-27088",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Package: es5-ext\nInstalled Version: 0.10.62\nVulnerability CVE-2024-27088\nSeverity: LOW\nFixed Version: 0.10.63\nLink: [CVE-2024-27088](https://avd.aquasec.com/nvd/cve-2024-27088)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/node_modules/es5-ext/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "app/node_modules/es5-ext/package.json: es5-ext@0.10.62"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29041",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: express\nInstalled Version: 4.18.2\nVulnerability CVE-2024-29041\nSeverity: MEDIUM\nFixed Version: 4.19.2, 5.0.0-beta.3\nLink: [CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/node_modules/express/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "app/node_modules/express/package.json: express@4.18.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26920",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: fast-xml-parser\nInstalled Version: 4.0.11\nVulnerability CVE-2023-26920\nSeverity: MEDIUM\nFixed Version: 4.1.2\nLink: [CVE-2023-26920](https://avd.aquasec.com/nvd/cve-2023-26920)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/node_modules/fast-xml-parser/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "app/node_modules/fast-xml-parser/package.json: fast-xml-parser@4.0.11"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29415",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: ip\nInstalled Version: 2.0.0\nVulnerability CVE-2024-29415\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2024-29415](https://avd.aquasec.com/nvd/cve-2024-29415)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/node_modules/ip/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "app/node_modules/ip/package.json: ip@2.0.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42282",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Package: ip\nInstalled Version: 2.0.0\nVulnerability CVE-2023-42282\nSeverity: MEDIUM\nFixed Version: 2.0.1, 1.1.9\nLink: [CVE-2023-42282](https://avd.aquasec.com/nvd/cve-2023-42282)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/node_modules/ip/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "app/node_modules/ip/package.json: ip@2.0.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-46175",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: json5\nInstalled Version: 2.2.1\nVulnerability CVE-2022-46175\nSeverity: HIGH\nFixed Version: 2.2.2, 1.0.2\nLink: [CVE-2022-46175](https://avd.aquasec.com/nvd/cve-2022-46175)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/node_modules/json5/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "app/node_modules/json5/package.json: json5@2.2.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52555",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Package: mongo-express\nInstalled Version: 1.0.2\nVulnerability CVE-2023-52555\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2023-52555](https://avd.aquasec.com/nvd/cve-2023-52555)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "app/package.json: mongo-express@1.0.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32050",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: mongodb\nInstalled Version: 4.13.0\nVulnerability CVE-2021-32050\nSeverity: MEDIUM\nFixed Version: 3.6.10, 4.17.0, 5.8.0\nLink: [CVE-2021-32050](https://avd.aquasec.com/nvd/cve-2021-32050)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/node_modules/mongodb/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "app/node_modules/mongodb/package.json: mongodb@4.13.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: semver\nInstalled Version: 6.3.0\nVulnerability CVE-2022-25883\nSeverity: MEDIUM\nFixed Version: 7.5.2, 6.3.1, 5.7.2\nLink: [CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/node_modules/semver/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "app/node_modules/semver/package.json: semver@6.3.0"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      },
      "properties": {
        "imageName": "mongo-express:1.0-18-alpine3.19",
        "repoDigests": [
          "mongo-express@sha256:11356ce76c08a24d201cd9547010a13c78b22a6c0376cf38700e5ada525765b7"
        ],
        "repoTags": [
          "mongo-express:1.0-18-alpine3.19"
        ]
      }
    }
  ]
}