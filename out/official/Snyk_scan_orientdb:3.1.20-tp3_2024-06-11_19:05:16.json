{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 126
          },
          "rules": [
            {
              "id": "SNYK-UBUNTU2204-COREUTILS-2801226",
              "shortDescription": {
                "text": "Low severity - Improper Input Validation vulnerability in coreutils"
              },
              "fullDescription": {
                "text": "(CVE-2016-2781) coreutils@8.32-4.1ubuntu1.2"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `coreutils` package and not the `coreutils` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nchroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal&#39;s input buffer.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `coreutils`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2016-2781](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2016-2781)\n- [https://security-tracker.debian.org/tracker/CVE-2016-2781](https://security-tracker.debian.org/tracker/CVE-2016-2781)\n- [https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772@%3Cdev.mina.apache.org%3E](https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772@%3Cdev.mina.apache.org%3E)\n- [http://www.openwall.com/lists/oss-security/2016/02/28/2](http://www.openwall.com/lists/oss-security/2016/02/28/2)\n- [http://www.openwall.com/lists/oss-security/2016/02/28/3](http://www.openwall.com/lists/oss-security/2016/02/28/3)\n- [https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772%40%3Cdev.mina.apache.org%3E](https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772%40%3Cdev.mina.apache.org%3E)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-20",
                  "deb"
                ],
                "cvssv3_baseScore": 6.5,
                "security-severity": "6.5"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-GCC12-5861847",
              "shortDescription": {
                "text": "Low severity - Uncontrolled Recursion vulnerability in gcc-12"
              },
              "fullDescription": {
                "text": "(CVE-2022-27943) gcc-12/libstdc++6@12.3.0-1ubuntu1~22.04"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `gcc-12` package and not the `gcc-12` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nlibiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `gcc-12`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2022-27943](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2022-27943)\n- [https://gcc.gnu.org/bugzilla/show_bug.cgi?id=105039](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=105039)\n- [https://sourceware.org/bugzilla/show_bug.cgi?id=28995](https://sourceware.org/bugzilla/show_bug.cgi?id=28995)\n- [https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/H424YXGW7OKXS2NCAP35OP6Y4P4AW6VG/](https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/H424YXGW7OKXS2NCAP35OP6Y4P4AW6VG/)\n- [https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/H424YXGW7OKXS2NCAP35OP6Y4P4AW6VG/](https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/H424YXGW7OKXS2NCAP35OP6Y4P4AW6VG/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-674",
                  "deb"
                ],
                "cvssv3_baseScore": 5.5,
                "security-severity": "5.5"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-GLIBC-2801292",
              "shortDescription": {
                "text": "Low severity - Allocation of Resources Without Limits or Throttling vulnerability in glibc"
              },
              "fullDescription": {
                "text": "(CVE-2016-20013) glibc/libc-bin@2.35-0ubuntu3.8"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `glibc` package and not the `glibc` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nsha256crypt and sha512crypt through 0.6 allow attackers to cause a denial of service (CPU consumption) because the algorithm&#39;s runtime is proportional to the square of the length of the password.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `glibc`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2016-20013](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2016-20013)\n- [https://twitter.com/solardiz/status/795601240151457793](https://twitter.com/solardiz/status/795601240151457793)\n- [https://pthree.org/2018/05/23/do-not-use-sha256crypt-sha512crypt-theyre-dangerous/](https://pthree.org/2018/05/23/do-not-use-sha256crypt-sha512crypt-theyre-dangerous/)\n- [https://akkadia.org/drepper/SHA-crypt.txt](https://akkadia.org/drepper/SHA-crypt.txt)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "deb"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-GNUPG2-3035409",
              "shortDescription": {
                "text": "Low severity - Out-of-bounds Write vulnerability in gnupg2"
              },
              "fullDescription": {
                "text": "(CVE-2022-3219) gnupg2/gpgv@2.2.27-3ubuntu2.1"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `gnupg2` package and not the `gnupg2` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nGnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `gnupg2`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2022-3219](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2022-3219)\n- [https://access.redhat.com/security/cve/CVE-2022-3219](https://access.redhat.com/security/cve/CVE-2022-3219)\n- [https://bugzilla.redhat.com/show_bug.cgi?id=2127010](https://bugzilla.redhat.com/show_bug.cgi?id=2127010)\n- [https://dev.gnupg.org/D556](https://dev.gnupg.org/D556)\n- [https://dev.gnupg.org/T5993](https://dev.gnupg.org/T5993)\n- [https://marc.info/?l=oss-security&m=165696590211434&w=4](https://marc.info/?l=oss-security&m=165696590211434&w=4)\n- [https://security.netapp.com/advisory/ntap-20230324-0001/](https://security.netapp.com/advisory/ntap-20230324-0001/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-787",
                  "deb"
                ],
                "cvssv3_baseScore": 3.3,
                "security-severity": "3.3"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-KRB5-2797765",
              "shortDescription": {
                "text": "Low severity - Integer Overflow or Wraparound vulnerability in krb5"
              },
              "fullDescription": {
                "text": "(CVE-2018-5709) krb5/libkrb5support0@1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `krb5` package and not the `krb5` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nAn issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable &#34;dbentry-&gt;n_key_data&#34; in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a &#34;u4&#34; variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `krb5`.\n## References\n- [https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5709](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5709)\n- [https://security-tracker.debian.org/tracker/CVE-2018-5709](https://security-tracker.debian.org/tracker/CVE-2018-5709)\n- [https://github.com/poojamnit/Kerberos-V5-1.16-Vulnerabilities/tree/master/Integer%20Overflow](https://github.com/poojamnit/Kerberos-V5-1.16-Vulnerabilities/tree/master/Integer%20Overflow)\n- [https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772@%3Cdev.mina.apache.org%3E](https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772@%3Cdev.mina.apache.org%3E)\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2018-5709](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2018-5709)\n- [https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772%40%3Cdev.mina.apache.org%3E](https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772%40%3Cdev.mina.apache.org%3E)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-190",
                  "deb"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-KRB5-6281067",
              "shortDescription": {
                "text": "Low severity - CVE-2024-26461 vulnerability in krb5"
              },
              "fullDescription": {
                "text": "(CVE-2024-26461) krb5/libkrb5support0@1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `krb5` package and not the `krb5` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nKerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `krb5`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-26461](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-26461)\n- [https://github.com/LuMingYinDetect/krb5_defects/blob/main/krb5_detect_2.md](https://github.com/LuMingYinDetect/krb5_defects/blob/main/krb5_detect_2.md)\n- [https://security.netapp.com/advisory/ntap-20240415-0011/](https://security.netapp.com/advisory/ntap-20240415-0011/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "deb"
                ],
                "cvssv3_baseScore": null,
                "security-severity": "null"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-KRB5-6281073",
              "shortDescription": {
                "text": "Medium severity - CVE-2024-26462 vulnerability in krb5"
              },
              "fullDescription": {
                "text": "(CVE-2024-26462) krb5/libkrb5support0@1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `krb5` package and not the `krb5` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nKerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `krb5`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-26462](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-26462)\n- [https://github.com/LuMingYinDetect/krb5_defects/blob/main/krb5_detect_3.md](https://github.com/LuMingYinDetect/krb5_defects/blob/main/krb5_detect_3.md)\n- [https://security.netapp.com/advisory/ntap-20240415-0012/](https://security.netapp.com/advisory/ntap-20240415-0012/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "deb"
                ],
                "cvssv3_baseScore": null,
                "security-severity": "null"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-KRB5-6281079",
              "shortDescription": {
                "text": "Low severity - CVE-2024-26458 vulnerability in krb5"
              },
              "fullDescription": {
                "text": "(CVE-2024-26458) krb5/libkrb5support0@1.19.2-2ubuntu0.3"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `krb5` package and not the `krb5` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nKerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `krb5`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-26458](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-26458)\n- [https://github.com/LuMingYinDetect/krb5_defects/blob/main/krb5_detect_1.md](https://github.com/LuMingYinDetect/krb5_defects/blob/main/krb5_detect_1.md)\n- [https://security.netapp.com/advisory/ntap-20240415-0010/](https://security.netapp.com/advisory/ntap-20240415-0010/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "deb"
                ],
                "cvssv3_baseScore": null,
                "security-severity": "null"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-LIBGCRYPT20-6411451",
              "shortDescription": {
                "text": "Medium severity - Information Exposure vulnerability in libgcrypt20"
              },
              "fullDescription": {
                "text": "(CVE-2024-2236) libgcrypt20@1.9.4-3ubuntu3"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `libgcrypt20` package and not the `libgcrypt20` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nA timing-based side-channel flaw was found in libgcrypt&#39;s RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `libgcrypt20`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-2236](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-2236)\n- [https://access.redhat.com/security/cve/CVE-2024-2236](https://access.redhat.com/security/cve/CVE-2024-2236)\n- [https://bugzilla.redhat.com/show_bug.cgi?id=2268268](https://bugzilla.redhat.com/show_bug.cgi?id=2268268)\n- [https://bugzilla.redhat.com/show_bug.cgi?id=2245218](https://bugzilla.redhat.com/show_bug.cgi?id=2245218)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-208",
                  "deb"
                ],
                "cvssv3_baseScore": null,
                "security-severity": "null"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-LIBPNG16-3124883",
              "shortDescription": {
                "text": "Low severity - NULL Pointer Dereference vulnerability in libpng1.6"
              },
              "fullDescription": {
                "text": "(CVE-2022-3857) libpng1.6/libpng16-16@1.6.37-3build5"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `libpng1.6` package and not the `libpng1.6` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nA flaw was found in libpng 1.6.38. A crafted PNG image can lead to a segmentation fault and denial of service in png_setup_paeth_row() function.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `libpng1.6`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2022-3857](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2022-3857)\n- [https://sourceforge.net/p/libpng/bugs/300/](https://sourceforge.net/p/libpng/bugs/300/)\n- [https://security.netapp.com/advisory/ntap-20230406-0004/](https://security.netapp.com/advisory/ntap-20230406-0004/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-476",
                  "deb"
                ],
                "cvssv3_baseScore": 5.5,
                "security-severity": "5.5"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-LIBZSTD-3368800",
              "shortDescription": {
                "text": "Low severity - Resource Exhaustion vulnerability in libzstd"
              },
              "fullDescription": {
                "text": "(CVE-2022-4899) libzstd/libzstd1@1.4.8+dfsg-3build1"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `libzstd` package and not the `libzstd` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nA vulnerability was found in zstd v1.4.10, where an attacker can supply empty string as an argument to the command line tool to cause buffer overrun.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `libzstd`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2022-4899](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2022-4899)\n- [https://github.com/facebook/zstd/issues/3200](https://github.com/facebook/zstd/issues/3200)\n- [https://security.netapp.com/advisory/ntap-20230725-0005/](https://security.netapp.com/advisory/ntap-20230725-0005/)\n- [https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/C63HAGVLQA6FJNDCHR7CNZZL6VSLILB2/](https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/C63HAGVLQA6FJNDCHR7CNZZL6VSLILB2/)\n- [https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JEHRBBYYTPA4DETOM5XAKGCP37NUTLOA/](https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JEHRBBYYTPA4DETOM5XAKGCP37NUTLOA/)\n- [https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QYLDK6ODVC4LJSDULLX6Q2YHTFOWABCN/](https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QYLDK6ODVC4LJSDULLX6Q2YHTFOWABCN/)\n- [https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C63HAGVLQA6FJNDCHR7CNZZL6VSLILB2/](https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C63HAGVLQA6FJNDCHR7CNZZL6VSLILB2/)\n- [https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JEHRBBYYTPA4DETOM5XAKGCP37NUTLOA/](https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JEHRBBYYTPA4DETOM5XAKGCP37NUTLOA/)\n- [https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QYLDK6ODVC4LJSDULLX6Q2YHTFOWABCN/](https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QYLDK6ODVC4LJSDULLX6Q2YHTFOWABCN/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "deb"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-NCURSES-6123867",
              "shortDescription": {
                "text": "Low severity - CVE-2023-50495 vulnerability in ncurses"
              },
              "fullDescription": {
                "text": "(CVE-2023-50495) ncurses/libtinfo6@6.3-2ubuntu0.1"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `ncurses` package and not the `ncurses` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nNCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `ncurses`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2023-50495](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2023-50495)\n- [https://lists.gnu.org/archive/html/bug-ncurses/2023-04/msg00020.html](https://lists.gnu.org/archive/html/bug-ncurses/2023-04/msg00020.html)\n- [https://lists.gnu.org/archive/html/bug-ncurses/2023-04/msg00029.html](https://lists.gnu.org/archive/html/bug-ncurses/2023-04/msg00029.html)\n- [https://security.netapp.com/advisory/ntap-20240119-0008/](https://security.netapp.com/advisory/ntap-20240119-0008/)\n- [https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LU4MYMKFEZQ5VSCVLRIZGDQOUW3T44GT/](https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LU4MYMKFEZQ5VSCVLRIZGDQOUW3T44GT/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "deb"
                ],
                "cvssv3_baseScore": 6.5,
                "security-severity": "6.5"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-NCURSES-6253015",
              "shortDescription": {
                "text": "Low severity - CVE-2023-45918 vulnerability in ncurses"
              },
              "fullDescription": {
                "text": "(CVE-2023-45918) ncurses/libtinfo6@6.3-2ubuntu0.1"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `ncurses` package and not the `ncurses` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `ncurses`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2023-45918](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2023-45918)\n- [https://lists.gnu.org/archive/html/bug-ncurses/2023-06/msg00005.html](https://lists.gnu.org/archive/html/bug-ncurses/2023-06/msg00005.html)\n- [https://security.netapp.com/advisory/ntap-20240315-0006/](https://security.netapp.com/advisory/ntap-20240315-0006/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "deb"
                ],
                "cvssv3_baseScore": null,
                "security-severity": "null"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-OPENSSL-5538123",
              "shortDescription": {
                "text": "Medium severity - Resource Exhaustion vulnerability in openssl"
              },
              "fullDescription": {
                "text": "(CVE-2022-40735) openssl/libssl3@3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `openssl` package and not the `openssl` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nThe Diffie-Hellman Key Agreement Protocol allows use of long exponents that arguably make certain calculations unnecessarily expensive, because the 1996 van Oorschot and Wiener paper found that &#34;(appropriately) short exponents&#34; can be used when there are adequate subgroup constraints, and these short exponents can lead to less expensive calculations than for long exponents. This issue is different from CVE-2002-20001 because it is based on an observation about exponent size, rather than an observation about numbers that are not public keys. The specific situations in which calculation expense would constitute a server-side vulnerability depend on the protocol (e.g., TLS, SSH, or IKE) and the DHE implementation details. In general, there might be an availability concern because of server-side resource consumption from DHE modular-exponentiation calculations. Finally, it is possible for an attacker to exploit this vulnerability and CVE-2002-20001 together.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `openssl`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2022-40735](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2022-40735)\n- [https://github.com/mozilla/ssl-config-generator/issues/162](https://github.com/mozilla/ssl-config-generator/issues/162)\n- [https://link.springer.com/content/pdf/10.1007/3-540-68339-9_29.pdf](https://link.springer.com/content/pdf/10.1007/3-540-68339-9_29.pdf)\n- [https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-57pt1r5.pdf](https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-57pt1r5.pdf)\n- [https://www.researchgate.net/profile/Anton-Stiglic-2/publication/2401745_Security_Issues_in_the_Diffie-Hellman_Key_Agreement_Protocol/links/546c144f0cf20dedafd53e7e/Security-Issues-in-the-Diffie-Hellman-Key-Agreement-Protocol.pdf](https://www.researchgate.net/profile/Anton-Stiglic-2/publication/2401745_Security_Issues_in_the_Diffie-Hellman_Key_Agreement_Protocol/links/546c144f0cf20dedafd53e7e/Security-Issues-in-the-Diffie-Hellman-Key-Agreement-Protocol.pdf)\n- [https://gist.github.com/c0r0n3r/9455ddcab985c50fd1912eabf26e058b](https://gist.github.com/c0r0n3r/9455ddcab985c50fd1912eabf26e058b)\n- [https://www.rfc-editor.org/rfc/rfc4419](https://www.rfc-editor.org/rfc/rfc4419)\n- [https://www.rfc-editor.org/rfc/rfc7919#section-5.2](https://www.rfc-editor.org/rfc/rfc7919#section-5.2)\n- [https://www.rfc-editor.org/rfc/rfc3526](https://www.rfc-editor.org/rfc/rfc3526)\n- [https://raw.githubusercontent.com/CVEProject/cvelist/9d7fbbcabd3f44cfedc9e8807757d31ece85a2c6/2022/40xxx/CVE-2022-40735.json](https://raw.githubusercontent.com/CVEProject/cvelist/9d7fbbcabd3f44cfedc9e8807757d31ece85a2c6/2022/40xxx/CVE-2022-40735.json)\n- [https://www.rfc-editor.org/rfc/rfc5114#section-4](https://www.rfc-editor.org/rfc/rfc5114#section-4)\n- [https://dheatattack.gitlab.io/](https://dheatattack.gitlab.io/)\n- [https://ieeexplore.ieee.org/document/10374117](https://ieeexplore.ieee.org/document/10374117)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "deb"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-OPENSSL-6592113",
              "shortDescription": {
                "text": "Low severity - CVE-2024-2511 vulnerability in openssl"
              },
              "fullDescription": {
                "text": "(CVE-2024-2511) openssl/libssl3@3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `openssl` package and not the `openssl` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nIssue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `openssl`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-2511](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-2511)\n- [https://github.com/openssl/openssl/commit/7e4d731b1c07201ad9374c1cd9ac5263bdf35bce](https://github.com/openssl/openssl/commit/7e4d731b1c07201ad9374c1cd9ac5263bdf35bce)\n- [https://github.com/openssl/openssl/commit/b52867a9f618bb955bed2a3ce3db4d4f97ed8e5d](https://github.com/openssl/openssl/commit/b52867a9f618bb955bed2a3ce3db4d4f97ed8e5d)\n- [https://github.com/openssl/openssl/commit/e9d7083e241670332e0443da0f0d4ffb52829f08](https://github.com/openssl/openssl/commit/e9d7083e241670332e0443da0f0d4ffb52829f08)\n- [https://github.openssl.org/openssl/extended-releases/commit/5f8d25770ae6437db119dfc951e207271a326640](https://github.openssl.org/openssl/extended-releases/commit/5f8d25770ae6437db119dfc951e207271a326640)\n- [https://www.openssl.org/news/secadv/20240408.txt](https://www.openssl.org/news/secadv/20240408.txt)\n- [http://www.openwall.com/lists/oss-security/2024/04/08/5](http://www.openwall.com/lists/oss-security/2024/04/08/5)\n- [https://security.netapp.com/advisory/ntap-20240503-0013/](https://security.netapp.com/advisory/ntap-20240503-0013/)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "deb"
                ],
                "cvssv3_baseScore": null,
                "security-severity": "null"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-OPENSSL-6861899",
              "shortDescription": {
                "text": "Low severity - CVE-2024-4603 vulnerability in openssl"
              },
              "fullDescription": {
                "text": "(CVE-2024-4603) openssl/libssl3@3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `openssl` package and not the `openssl` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nIssue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `openssl`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-4603](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-4603)\n- [https://github.com/openssl/openssl/commit/3559e868e58005d15c6013a0c1fd832e51c73397](https://github.com/openssl/openssl/commit/3559e868e58005d15c6013a0c1fd832e51c73397)\n- [https://github.com/openssl/openssl/commit/53ea06486d296b890d565fb971b2764fcd826e7e](https://github.com/openssl/openssl/commit/53ea06486d296b890d565fb971b2764fcd826e7e)\n- [https://github.com/openssl/openssl/commit/9c39b3858091c152f52513c066ff2c5a47969f0d](https://github.com/openssl/openssl/commit/9c39b3858091c152f52513c066ff2c5a47969f0d)\n- [https://github.com/openssl/openssl/commit/da343d0605c826ef197aceedc67e8e04f065f740](https://github.com/openssl/openssl/commit/da343d0605c826ef197aceedc67e8e04f065f740)\n- [https://www.openssl.org/news/secadv/20240516.txt](https://www.openssl.org/news/secadv/20240516.txt)\n- [http://www.openwall.com/lists/oss-security/2024/05/16/2](http://www.openwall.com/lists/oss-security/2024/05/16/2)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "deb"
                ],
                "cvssv3_baseScore": null,
                "security-severity": "null"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-OPENSSL-7151340",
              "shortDescription": {
                "text": "Low severity - CVE-2024-4741 vulnerability in openssl"
              },
              "fullDescription": {
                "text": "(CVE-2024-4741) openssl/libssl3@3.0.2-0ubuntu1.15"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n_This vulnerability has not been analyzed by NVD yet._\n\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `openssl`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-4741](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2024-4741)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "deb"
                ],
                "cvssv3_baseScore": null,
                "security-severity": "null"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-PCRE3-2799820",
              "shortDescription": {
                "text": "Low severity - Uncontrolled Recursion vulnerability in pcre3"
              },
              "fullDescription": {
                "text": "(CVE-2017-11164) pcre3/libpcre3@2:8.39-13ubuntu0.22.04.1"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `pcre3` package and not the `pcre3` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nIn PCRE 8.41, the OP_KETRMAX feature in the match function in pcre_exec.c allows stack exhaustion (uncontrolled recursion) when processing a crafted regular expression.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `pcre3`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2017-11164](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2017-11164)\n- [https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-11164](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-11164)\n- [https://security-tracker.debian.org/tracker/CVE-2017-11164](https://security-tracker.debian.org/tracker/CVE-2017-11164)\n- [https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772@%3Cdev.mina.apache.org%3E](https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772@%3Cdev.mina.apache.org%3E)\n- [http://openwall.com/lists/oss-security/2017/07/11/3](http://openwall.com/lists/oss-security/2017/07/11/3)\n- [http://www.securityfocus.com/bid/99575](http://www.securityfocus.com/bid/99575)\n- [http://www.openwall.com/lists/oss-security/2023/04/11/1](http://www.openwall.com/lists/oss-security/2023/04/11/1)\n- [http://www.openwall.com/lists/oss-security/2023/04/12/1](http://www.openwall.com/lists/oss-security/2023/04/12/1)\n- [https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772%40%3Cdev.mina.apache.org%3E](https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772%40%3Cdev.mina.apache.org%3E)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-674",
                  "deb"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-SHADOW-5425688",
              "shortDescription": {
                "text": "Low severity - Arbitrary Code Injection vulnerability in shadow"
              },
              "fullDescription": {
                "text": "(CVE-2023-29383) shadow/passwd@1:4.8.1-2ubuntu2.2"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `shadow` package and not the `shadow` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nIn Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that &#34;cat /etc/passwd&#34; shows a rogue user account.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `shadow`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2023-29383](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2023-29383)\n- [https://github.com/shadow-maint/shadow/commit/e5905c4b84d4fb90aefcd96ee618411ebfac663d](https://github.com/shadow-maint/shadow/commit/e5905c4b84d4fb90aefcd96ee618411ebfac663d)\n- [https://github.com/shadow-maint/shadow/pull/687](https://github.com/shadow-maint/shadow/pull/687)\n- [https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/cve-2023-29383-abusing-linux-chfn-to-misrepresent-etc-passwd/](https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/cve-2023-29383-abusing-linux-chfn-to-misrepresent-etc-passwd/)\n- [https://www.trustwave.com/en-us/resources/security-resources/security-advisories/?fid=31797](https://www.trustwave.com/en-us/resources/security-resources/security-advisories/?fid=31797)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-74",
                  "deb"
                ],
                "cvssv3_baseScore": 3.3,
                "security-severity": "3.3"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-SYSTEMD-6137855",
              "shortDescription": {
                "text": "Low severity - CVE-2023-7008 vulnerability in systemd"
              },
              "fullDescription": {
                "text": "(CVE-2023-7008) systemd/libsystemd0@249.11-0ubuntu3.12"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `systemd` package and not the `systemd` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nA vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `systemd`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2023-7008](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2023-7008)\n- [https://access.redhat.com/security/cve/CVE-2023-7008](https://access.redhat.com/security/cve/CVE-2023-7008)\n- [https://bugzilla.redhat.com/show_bug.cgi?id=2222261](https://bugzilla.redhat.com/show_bug.cgi?id=2222261)\n- [https://bugzilla.redhat.com/show_bug.cgi?id=2222672](https://bugzilla.redhat.com/show_bug.cgi?id=2222672)\n- [https://github.com/systemd/systemd/issues/25676](https://github.com/systemd/systemd/issues/25676)\n- [https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QHNBXGKJWISJETTTDTZKTBFIBJUOSLKL/](https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QHNBXGKJWISJETTTDTZKTBFIBJUOSLKL/)\n- [https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4GMDEG5PKONWNHOEYSUDRT6JEOISRMN2/](https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4GMDEG5PKONWNHOEYSUDRT6JEOISRMN2/)\n- [https://access.redhat.com/errata/RHSA-2024:2463](https://access.redhat.com/errata/RHSA-2024:2463)\n- [https://access.redhat.com/errata/RHSA-2024:3203](https://access.redhat.com/errata/RHSA-2024:3203)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "deb"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-WGET-2785488",
              "shortDescription": {
                "text": "Medium severity - Open Redirect vulnerability in wget"
              },
              "fullDescription": {
                "text": "(CVE-2021-31879) wget@1.21.2-2ubuntu1"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `wget` package and not the `wget` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nGNU Wget through 1.21.1 does not omit the Authorization header upon a redirect to a different origin, a related issue to CVE-2018-1000007.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `wget`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2021-31879](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2021-31879)\n- [https://security.netapp.com/advisory/ntap-20210618-0002/](https://security.netapp.com/advisory/ntap-20210618-0002/)\n- [https://mail.gnu.org/archive/html/bug-wget/2021-02/msg00002.html](https://mail.gnu.org/archive/html/bug-wget/2021-02/msg00002.html)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-601",
                  "deb"
                ],
                "cvssv3_baseScore": 6.1,
                "security-severity": "6.1"
              }
            },
            {
              "id": "SNYK-UBUNTU2204-XZUTILS-5854647",
              "shortDescription": {
                "text": "Medium severity - CVE-2020-22916 vulnerability in xz-utils"
              },
              "fullDescription": {
                "text": "(CVE-2020-22916) xz-utils/liblzma5@5.2.5-2ubuntu1"
              },
              "help": {
                "text": "",
                "markdown": "## NVD Description\n**_Note:_** _Versions mentioned in the description apply only to the upstream `xz-utils` package and not the `xz-utils` package as distributed by `Ubuntu`._\n_See `How to fix?` for `Ubuntu:22.04` relevant fixed versions and status._\n\nAn issue discovered in XZ 5.2.5 allows attackers to cause a denial of service via decompression of a crafted file. NOTE: the vendor disputes the claims of &#34;endless output&#34; and &#34;denial of service&#34; because decompression of the 17,486 bytes always results in 114,881,179 bytes, which is often a reasonable size increase.\n## Remediation\nThere is no fixed version for `Ubuntu:22.04` `xz-utils`.\n## References\n- [http://people.ubuntu.com/~ubuntu-security/cve/CVE-2020-22916](http://people.ubuntu.com/~ubuntu-security/cve/CVE-2020-22916)\n- [https://github.com/snappyJack/CVE-request-XZ-5.2.5-has-denial-of-service-vulnerability](https://github.com/snappyJack/CVE-request-XZ-5.2.5-has-denial-of-service-vulnerability)\n- [https://tukaani.org/xz/](https://tukaani.org/xz/)\n- [https://bugzilla.redhat.com/show_bug.cgi?id=2234987](https://bugzilla.redhat.com/show_bug.cgi?id=2234987)\n- [https://bugzilla.suse.com/show_bug.cgi?id=1214590](https://bugzilla.suse.com/show_bug.cgi?id=1214590)\n- [https://github.com/tukaani-project/xz/issues/61](https://github.com/tukaani-project/xz/issues/61)\n- [https://security-tracker.debian.org/tracker/CVE-2020-22916](https://security-tracker.debian.org/tracker/CVE-2020-22916)\n- [http://web.archive.org/web/20230918084612/https://github.com/snappyJack/CVE-request-XZ-5.2.5-has-denial-of-service-vulnerability](http://web.archive.org/web/20230918084612/https://github.com/snappyJack/CVE-request-XZ-5.2.5-has-denial-of-service-vulnerability)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "deb"
                ],
                "cvssv3_baseScore": 5.5,
                "security-severity": "5.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-UBUNTU2204-COREUTILS-2801226",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable coreutils package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "coreutils@8.32-4.1ubuntu1.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-GCC12-5861847",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable gcc-12 package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "gcc-12@12.3.0-1ubuntu1~22.04"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-GLIBC-2801292",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable glibc package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "glibc@2.35-0ubuntu3.8"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-GNUPG2-3035409",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable gnupg2 package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "gnupg2@2.2.27-3ubuntu2.1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-KRB5-2797765",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable krb5 package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "krb5@1.19.2-2ubuntu0.3"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-KRB5-6281067",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable krb5 package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "krb5@1.19.2-2ubuntu0.3"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-KRB5-6281073",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable krb5 package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "krb5@1.19.2-2ubuntu0.3"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-KRB5-6281079",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable krb5 package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "krb5@1.19.2-2ubuntu0.3"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-LIBGCRYPT20-6411451",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable libgcrypt20 package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "libgcrypt20@1.9.4-3ubuntu3"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-LIBPNG16-3124883",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable libpng1.6 package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "libpng1.6@1.6.37-3build5"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-LIBZSTD-3368800",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable libzstd package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "libzstd@1.4.8+dfsg-3build1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-NCURSES-6123867",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable ncurses package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "ncurses@6.3-2ubuntu0.1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-NCURSES-6253015",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable ncurses package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "ncurses@6.3-2ubuntu0.1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-OPENSSL-5538123",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable openssl package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "openssl@3.0.2-0ubuntu1.15"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-OPENSSL-6592113",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable openssl package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "openssl@3.0.2-0ubuntu1.15"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-OPENSSL-6861899",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable openssl package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "openssl@3.0.2-0ubuntu1.15"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-OPENSSL-7151340",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable openssl package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "openssl@3.0.2-0ubuntu1.15"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-PCRE3-2799820",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable pcre3 package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "pcre3@2:8.39-13ubuntu0.22.04.1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-SHADOW-5425688",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable shadow package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "shadow@1:4.8.1-2ubuntu2.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-SYSTEMD-6137855",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable systemd package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "systemd@249.11-0ubuntu3.12"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-WGET-2785488",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable wget package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "wget@1.21.2-2ubuntu1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-UBUNTU2204-XZUTILS-5854647",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable xz-utils package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "orientdb_3.1.20-tp3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "xz-utils@5.2.5-2ubuntu1"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 108
          },
          "rules": [
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1009829",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-24750) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `com.pastdev.httpcomponents.configuration.JndiConfiguration`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.6 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2798)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1047324",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-10650) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to the class `ignite-jta`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2658)\n- [GitHub PR](https://github.com/FasterXML/jackson-databind/pull/2864#issuecomment-701026600)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1048302",
              "shortDescription": {
                "text": "High severity - XML External Entity (XXE) Injection vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-25649) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection. A flaw was found in FasterXML Jackson Databind, where it does not have entity expansion secured properly in the `DOMDeserializer` class. The highest threat from this vulnerability is data integrity.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.7, 2.10.5.1 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/612f971b78c60202e9cd75a299050c8f2d724a59)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2589)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1887664)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-611",
                  "maven"
                ],
                "cvssv3_baseScore": 8.2,
                "security-severity": "8.2"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1052449",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-35490) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `org.apache.commons.dbcp2.datasources.PerUserPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application, an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2986)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1052450",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-35491) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `org.apache.commons.dbcp2.datasources.SharedPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application, an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2986)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1054588",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-35728) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool` (aka embedded Xalan in `org.glassfish.web/javax.servlet.jsp.jstl`).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2999)\n- [Medium Post](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Al1ex/CVE-2020-35728)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056414",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36187) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/3e8fa3beea49ea62109df9e643c9cb678dabdde1)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2997)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056416",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36184) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2998)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Al1ex/CVE-2020-36184)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056417",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36186) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2997)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056418",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36180) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [Al1ex's Poc](https://github.com/Al1ex/CVE-2020-36179)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3004)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056419",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36183) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3003)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056420",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36179) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [Al1ex's Poc](https://github.com/Al1ex/CVE-2020-36179)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3004)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056421",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36182) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3004)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Al1ex/CVE-2020-36179)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056424",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36185) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2998)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056425",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36189) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2996)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056426",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36188) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2996)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Al1ex/CVE-2020-36188)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056427",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36181) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3004)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [Poc](https://github.com/Al1ex/CVE-2020-36179)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1061931",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2021-20190) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. A malicious user could perform a SSRF attack via the `javax.swing` gadget (specifically `javax.swing.JTextPane`).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application, an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.7 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/7dbf51bf78d157098074a20bd9da39bd48c18e4a)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2854)\n- [GitHub Release](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.9.10.7)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1916633)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "CWE-918",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-2421244",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-36518) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via a large depth of nested objects.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.12.6.1, 2.13.2.1 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/8238ab41d0350fb915797c89d46777b4496b74fd)\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/fcfc4998ec23f0b1f7f8a9521c2b317b6c25892b)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2816)\n- [GitHub PR](https://github.com/FasterXML/jackson-databind/pull/3416)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "maven"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-3038424",
              "shortDescription": {
                "text": "Medium severity - Denial of Service (DoS) vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2022-42004) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) in the `_deserializeFromArray()` function in `BeanDeserializer`, due to resource exhaustion when processing a deeply nested array.\r\n\r\n**NOTE:**\r\nFor this vulnerability to be exploitable the non-default `DeserializationFeature` must be enabled.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.12.7.1, 2.13.4 or higher.\n## References\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50490)\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/063183589218fec19a9293ed2f17ec53ea80ba88)\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3582)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "maven"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-3038426",
              "shortDescription": {
                "text": "Medium severity - Denial of Service (DoS) vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2022-42003) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) in the `_deserializeWrappedValue()` function in `StdDeserializer.java`, due to resource exhaustion when processing deeply nested arrays.\r\n\r\n**NOTE:** This vulnerability is only exploitable when the non-default `UNWRAP_SINGLE_VALUE_ARRAYS` feature is enabled.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.12.7.1, 2.13.4.1 or higher.\n## References\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51020)\n- [Documentation](https://fasterxml.github.io/jackson-databind/javadoc/2.9/com/fasterxml/jackson/databind/DeserializationFeature.html#UNWRAP_SINGLE_VALUE_ARRAYS)\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/2c4a601c626f7790cad9d3c322d244e182838288)\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea)\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/d78d00ee7b5245b93103fef3187f70543d67ca33)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3590)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "maven"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-540500",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2019-20330) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. Two additional `net.sf.ehcache` gadgets are not blacklisted.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.2 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/fc4214a883dc087070f25da738ef0d49c2f3387e)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2526)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-548451",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-8840) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data due to an incomplete black list (incomplete fix for [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507)). \r\nIt lacks `xbean-reflect/JNDI` blocking, as demonstrated by `org.apache.xbean.propertyeditor.JndiConverter`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.7.9.7, 2.8.11.5, 2.9.10.3 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/914e7c9f2cb8ce66724bf26a72adc7e958992497)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2620)\n- [Jackson PoC](https://github.com/jas502n/jackson-CVE-2020-8840)\n- [PoC](https://github.com/jas502n/CVE-2020-8840)\n- [PoC](https://github.com/Veraxy01/CVE-2020-8840)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-559094",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-9546,CVE-2020-9547,CVE-2020-9548) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. Mishandles the interaction between serialization gadgets and typing, related to:\r\n\r\n* `com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig` (aka `ibatis-sqlmap`)\r\n* `br.com.anteros.dbcp.AnterosDBCPConfig` (aka `anteros-core`)\r\n* `org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig` (aka shaded `hikari-config`)\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.7.9.7, 2.8.11.6, 2.9.10.4 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/9f4e97019fb0dd836533d0b6198c88787e235ae2)\n- [Github Issue #1](https://github.com/FasterXML/jackson-databind/issues/2634)\n- [GitHub Issue #2](https://github.com/FasterXML/jackson-databind/issues/2631)\n- [GitHub PoC](https://github.com/fairyming/CVE-2020-9548)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-559106",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2019-14892,CVE-2019-14893) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data due to an incomplete black list (incomplete fix for [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507)). \r\nIt doesn't block `common-configuration` JNDI classes `org.apache.commons.configuration.JNDIConfiguration` and `org.apache.commons.configuration2.JNDIConfiguration`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.8.11.5, 2.9.10.3 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/41b7f9b90149e9d44a65a8261a8deedc7186f6af)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2462)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2469)\n- [RedHat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14892)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-560762",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-10673) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `com.caucho.config.types.ResourceRef` (aka `caucho-quercus`).\r\n\r\n\r\nNote: This vulnerability does not affect release `2.10.0` onward.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Commit (Master)](https://github.com/FasterXML/jackson-databind/commit/1645efbd392989cf015f459a91c999e59c921b15)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2660)\n- [On Jackson CVE's Blog](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Al1ex/CVE-2020-10673)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-560766",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-10672) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory` (aka `aries.transaction.jms`). \r\n\r\nNote: This vulnerability does not affect release `2.10.0` onward.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Commit (Master)](https://github.com/FasterXML/jackson-databind/commit/592872f4235c7f2a3280725278da55544032f72d)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2659)\n- [On Jackson CVEs: Don’t Panic](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561362",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-10969) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to gadget `javax.swing.JEditorPane`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.7.9.7, 2.8.11.6, 2.9.10.4 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2642)\n- [Medium Article](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561373",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-10968) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to gadget `org.aoju.bus.proxy.provider.remoting.RmiProvider` (aka bus-proxy).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2662)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561585",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-11113) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to gadget `org.apache.openjpa.ee.WASRegistryManagedRuntime` (aka openjpa).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/e2ba12d5d60715d95105e3e790fc234cfb59893d)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2670)\n- [PoC](https://github.com/Al1ex/CVE-2020-11113)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561586",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-11111) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to gadgets `org.apache.activemq.*` (aka activemq-jms, activemq-core, activemq-pool, and activemq-pool-jms).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/c14c9f99ed030dbd1440129585f03440c8758a99)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2664)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561587",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-11112) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to gadget  `org.apache.commons.proxy.provider.remoting.RmiProvider` (aka apache/commons-proxy).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GItHub Commit](https://github.com/FasterXML/jackson-databind/commit/05d7e0e13f43e12db6a51726df12c8b4d8040676)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2666)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-564887",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-11620) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `org.apache.commons.jelly.impl.Embedded` (aka `commons-jelly`).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2682)\n- [Medium Post](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-564888",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-11619) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `org.springframework.aop.config.MethodLocatingFactoryBean` (aka `spring-aop`).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Issues](https://github.com/FasterXML/jackson-databind/issues/2680)\n- [Medium Post](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-570625",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-14062) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It is possible to conduct a Deserialization attack using the `com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool`  (`xalan2`) class gadget if polymorphic type handling is enabled and an application using this package allows user input which gets deserialized. \r\n\r\nNote: This vulnerability does not affect release `2.10.0` onward.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.5 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/840eae2ca81c597a0010b2126f32dce17d384b70)\n- [Github Issue](https://github.com/FasterXML/jackson-databind/issues/2704)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572300",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-14195) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.jsecurity.realm.jndi.JndiRealmFactory`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.5 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/f6d9c664f6d481703138319f6a0f1fdbddb3a259)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2765)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572314",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-14060) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It is possible to conduct a Deserialization attack using the `oadd.org.apache.xalan.lib.sql.JNDIConnectionPool`  (`apache/drill`) class gadget if polymorphic type handling is enabled and an application using this package allows user input which gets deserialized. \r\n\r\nNote: This vulnerability does not affect release `2.10.0` onward.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.5 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/d1c67a0396e84c08d0558fbb843b5bd1f26e1921)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2688)\n- [Medium Article](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572316",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-14061) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It is possible to conduct a Deserialization attack using any of the following class gadget available within `weblogic/oracle-aqjms` if polymorphic type handling is enabled and an application using this package allows user input which gets deserialized. \r\n\r\n* oracle.jms.AQjmsQueueConnectionFactory\r\n* oracle.jms.AQjmsXATopicConnectionFactory\r\n* oracle.jms.AQjmsTopicConnectionFactory\r\n* oracle.jms.AQjmsXAQueueConnectionFactory\r\n* oracle.jms.AQjmsXAConnectionFactory\r\n\r\nNote: This vulnerability does not affect release `2.10.0` onward.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Don’t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.5 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2698)\n- [Medium Article](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-608664",
              "shortDescription": {
                "text": "High severity - Deserialization of Untrusted Data vulnerability in com.fasterxml.jackson.core:jackson-databind"
              },
              "fullDescription": {
                "text": "(CVE-2020-24616) com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `br.com.anteros.dbcp.AnterosDBCPDataSource` (aka Anteros-DBCP).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application, an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.6 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2814)\n- [Medium Article](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Kamimuka/cve-2020-24616-poc)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-502",
                  "maven"
                ],
                "cvssv3_baseScore": 8.1,
                "security-severity": "8.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMGOOGLEGUAVA-1015415",
              "shortDescription": {
                "text": "Low severity - Information Disclosure vulnerability in com.google.guava:guava"
              },
              "fullDescription": {
                "text": "(CVE-2020-8908) com.google.guava:guava@18.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\n[com.google.guava:guava](https://github.com/google/guava) is a set of core libraries that includes new collection types (such as multimap and multiset,immutable collections, a graph library, functional types, an in-memory cache and more.\n\n\nAffected versions of this package are vulnerable to Information Disclosure.\nThe file permissions on the file created by `com.google.common.io.Files.createTempDir` allow an attacker running a malicious program co-resident on the same machine to steal secrets stored in this directory. This is because, by default, on unix-like operating systems the /tmp directory is shared between all users, so if the correct file permissions aren't set by the directory/file creator, the file becomes readable by all other users on that system.\r\n\r\n## PoC\r\n```java\r\nFile guavaTempDir = com.google.common.io.Files.createTempDir();\r\nSystem.out.println(\"Guava Temp Dir: \" + guavaTempDir.getName());\r\nrunLS(guavaTempDir.getParentFile(), guavaTempDir); // Prints the file permissions -> drwxr-xr-x\r\nFile child = new File(guavaTempDir, \"guava-child.txt\");\r\nchild.createNewFile();\r\nrunLS(guavaTempDir, child); // Prints the file permissions -> -rw-r--r--\r\n```\r\n\r\nFor Android developers, choosing a temporary directory API provided by Android is recommended, such as `context.getCacheDir()`. For other Java developers, we recommend migrating to the Java 7 API `java.nio.file.Files.createTempDirectory()` which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.\n\n## Remediation\nThere is no fix for `com.google.guava:guava`. However, in version 30.0 and above, the vulnerable functionality has been deprecated. In oder to mitigate this vulnerability, upgrade to version 30.0 or higher and ensure your dependencies don't use the createTempDir or createTempFile methods.\n\n## References\n\n- [GHSA Advisory](https://github.com/advisories/GHSA-5mg8-w23w-74h3)\n\n- [GitHub Commit](https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284)\n\n- [GitHub Commit](https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40)\n\n- [GitHub Issue](https://github.com/google/guava/issues/4011)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-200",
                  "maven"
                ],
                "cvssv3_baseScore": 3.3,
                "security-severity": "3.3"
              }
            },
            {
              "id": "SNYK-JAVA-COMGOOGLEGUAVA-32236",
              "shortDescription": {
                "text": "Medium severity - Deserialization of Untrusted Data vulnerability in com.google.guava:guava"
              },
              "fullDescription": {
                "text": "(CVE-2018-10237) com.google.guava:guava@18.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.google.guava:guava](https://github.com/google/guava) is a set of core libraries that includes new collection types (such as multimap and multiset,immutable collections, a graph library, functional types, an in-memory cache and more.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. During deserialization, two Guava classes accept a caller-specified size parameter and eagerly allocate an array of that size:\r\n* `AtomicDoubleArray` (when serialized with Java serialization)\r\n* `CompoundOrdering` (when serialized with GWT serialization)\r\n\r\nAn attacker may be able to send a specially crafted request which with then cause the server to allocate all it's memory, without validation whether the data size is reasonable.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application, an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n  \n## Remediation\nUpgrade `com.google.guava:guava` to version 24.1.1, 24.1.1-jre or higher.\n## References\n- [GitHub Commit](https://github.com/google/guava/commit/7ec8718f1e6e2814dabaa4b9f96b6b33a813101c)\n- [Google Group Forum](https://groups.google.com/forum/#!topic/guava-announce/xqWALw4W1vs/discussion)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1573391)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-119",
                  "maven"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-JAVA-COMGOOGLEGUAVA-5710356",
              "shortDescription": {
                "text": "Low severity - Creation of Temporary File in Directory with Insecure Permissions vulnerability in com.google.guava:guava"
              },
              "fullDescription": {
                "text": "(CVE-2023-2976) com.google.guava:guava@18.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.google.guava:guava](https://github.com/google/guava) is a set of core libraries that includes new collection types (such as multimap and multiset,immutable collections, a graph library, functional types, an in-memory cache and more.\n\nAffected versions of this package are vulnerable to Creation of Temporary File in Directory with Insecure Permissions due to the use of Java's default temporary directory for file creation in `FileBackedOutputStream`. Other users and apps on the machine with access to the default Java temporary directory can access the files created by this class. This more fully addresses the underlying issue described in [CVE-2020-8908](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEGUAVA-1015415), by deprecating the permissive temp file creation behavior.\r\n\r\n**NOTE:** Even though the security vulnerability is fixed in version 32.0.0, the maintainers recommend using version 32.0.1, as version 32.0.0 breaks some functionality under Windows.\n## Remediation\nUpgrade `com.google.guava:guava` to version 32.0.0-android, 32.0.0-jre or higher.\n## References\n- [GitHub Commit](https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284)\n- [GitHub Issue](https://github.com/google/guava/issues/2575)\n- [GitHub Issue](https://github.com/google/guava/issues/6532)\n- [GitHub Release](https://github.com/google/guava/releases/tag/v32.0.0)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-379",
                  "maven"
                ],
                "cvssv3_baseScore": 3.3,
                "security-severity": "3.3"
              }
            },
            {
              "id": "SNYK-JAVA-COMHAZELCAST-1018909",
              "shortDescription": {
                "text": "Medium severity - XML External Entity (XXE) Injection vulnerability in com.hazelcast:hazelcast"
              },
              "fullDescription": {
                "text": "com.hazelcast:hazelcast@3.12.8"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.hazelcast:hazelcast](https://github.com/hazelcast/hazelcast) is a clustering and highly scalable data distribution platform.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection. It does not validate the XML transforming, leading to potential XXE.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `com.hazelcast:hazelcast` to version 3.12.11, 4.1 or higher.\n## References\n- [GitHub Commit](https://github.com/hazelcast/hazelcast/pull/17722/commits/f64acfc6ced7f8c3372acdd23367d1e9b9bf685f)\n- [GitHub PR](https://github.com/hazelcast/hazelcast/pull/17722)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-611",
                  "maven"
                ],
                "cvssv3_baseScore": 6.5,
                "security-severity": "6.5"
              }
            },
            {
              "id": "SNYK-JAVA-COMHAZELCAST-3183870",
              "shortDescription": {
                "text": "Critical severity - Improper Authentication vulnerability in com.hazelcast:hazelcast"
              },
              "fullDescription": {
                "text": "(CVE-2022-36437) com.hazelcast:hazelcast@3.12.8"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.hazelcast:hazelcast](https://github.com/hazelcast/hazelcast) is a clustering and highly scalable data distribution platform.\n\nAffected versions of this package are vulnerable to Improper Authentication in the `TcpServerConnection.equals()` function used for connection caching, which allows unauthenticated attackers to use another user's authenticated connection to read and modify data in the cluster.\n## Remediation\nUpgrade `com.hazelcast:hazelcast` to version 3.12.13, 4.1.10, 4.2.6, 5.0.4, 5.1.3 or higher.\n## References\n- [GitHub Commit](https://github.com/hazelcast/hazelcast/commit/2800fcb4f115e17f24621d7972260c539139daf4)\n- [GitHub Commit](https://github.com/hazelcast/hazelcast/commit/a56e6d5c44eb85926b346588d1d9cc28ef5cc85c)\n- [Vulnerability Advisory](https://support.hazelcast.com/s/article/Security-Advisory-for-CVE-2022-36437)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-287",
                  "maven"
                ],
                "cvssv3_baseScore": 9.1,
                "security-severity": "9.1"
              }
            },
            {
              "id": "SNYK-JAVA-COMHAZELCAST-6249443",
              "shortDescription": {
                "text": "Medium severity - Improper Access Control vulnerability in com.hazelcast:hazelcast"
              },
              "fullDescription": {
                "text": "(CVE-2023-45860) com.hazelcast:hazelcast@3.12.8"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.hazelcast:hazelcast](https://github.com/hazelcast/hazelcast) is a clustering and highly scalable data distribution platform.\n\nAffected versions of this package are vulnerable to Improper Access Control due to inadequate permission checking, within the SQL mapping for the `CSV File Source` connector. This could enable unauthorized clients to access data from files stored on a member's filesystem.\r\n\r\n## Workaround \r\nThis vulnerability can be avoided by disabling the Hazelcast Jet processing engine in Hazelcast member configuration - which will result in SQL and Jet jobs not working.\n## Remediation\nUpgrade `com.hazelcast:hazelcast` to version 5.2.5, 5.3.5 or higher.\n## References\n- [GitHub Commit](https://github.com/hazelcast/hazelcast/commit/7f229f9a32914bc53a84344f3659aa8aeb36fe73)\n- [GitHub Commit](https://github.com/hazelcast/hazelcast/commit/98be233e79cf4bc1ff3c7126a9189988bd0e87bd)\n- [GitHub PR](https://github.com/hazelcast/hazelcast/pull/25348)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-284",
                  "maven"
                ],
                "cvssv3_baseScore": 6.5,
                "security-severity": "6.5"
              }
            },
            {
              "id": "SNYK-JAVA-COMHAZELCAST-6282853",
              "shortDescription": {
                "text": "High severity - Improper Authorization vulnerability in com.hazelcast:hazelcast"
              },
              "fullDescription": {
                "text": "(CVE-2023-45859) com.hazelcast:hazelcast@3.12.8"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[com.hazelcast:hazelcast](https://github.com/hazelcast/hazelcast) is a clustering and highly scalable data distribution platform.\n\nAffected versions of this package are vulnerable to Improper Authorization due to missing permission checks on the Hazelcast client protocol. Authenticated users can access data stored in the cluster by exploiting this oversight.\n## Remediation\nUpgrade `com.hazelcast:hazelcast` to version 5.2.5, 5.3.5 or higher.\n## References\n- [GitHub Commit](https://github.com/hazelcast/hazelcast/commit/1eec447afaff529381e8cf8af07b368b2665883c)\n- [GitHub Commit](https://github.com/hazelcast/hazelcast/commit/7f229f9a32914bc53a84344f3659aa8aeb36fe73)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-281",
                  "maven"
                ],
                "cvssv3_baseScore": 7.6,
                "security-severity": "7.6"
              }
            },
            {
              "id": "SNYK-JAVA-COMMONSCODEC-561518",
              "shortDescription": {
                "text": "Low severity - Information Exposure vulnerability in commons-codec:commons-codec"
              },
              "fullDescription": {
                "text": "commons-codec:commons-codec@1.12"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[commons-codec:commons-codec](https://commons.apache.org/proper/commons-codec) is a package that contains simple encoder and decoders for various formats such as Base64 and Hexadecimal.\n\nAffected versions of this package are vulnerable to Information Exposure. When there is no byte array value that can be encoded into a string the Base32 implementation does not reject it, and instead decodes it into an arbitrary value which can be re-encoded again using the same implementation. This allows for information exposure exploits such as tunneling additional information via seemingly valid base 32 strings.\n## Remediation\nUpgrade `commons-codec:commons-codec` to version 1.13 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113)\n- [Jira Issue](https://issues.apache.org/jira/browse/CODEC-134)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-200",
                  "maven"
                ],
                "cvssv3_baseScore": 3.7,
                "security-severity": "3.7"
              }
            },
            {
              "id": "SNYK-JAVA-IONETTY-559515",
              "shortDescription": {
                "text": "High severity - HTTP Request Smuggling vulnerability in io.netty:netty-all"
              },
              "fullDescription": {
                "text": "(CVE-2019-20444) io.netty:netty-all@4.1.42.Final"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[io.netty:netty-all](https://mvnrepository.com/artifact/io.netty/netty-all) is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients.\n\nAffected versions of this package are vulnerable to HTTP Request Smuggling. It allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax or as an \"invalid fold.\"\n## Remediation\nUpgrade `io.netty:netty-all` to version 4.1.44.Final or higher.\n## References\n- [GitHub Commit](https://github.com/netty/netty/pull/9871/commits/6ad40c8c17199299b75a04225da10ebda5b377f2)\n- [HTTP Request Smuggling Demystified - Snyk Blog](https://snyk.io/blog/demystifying-http-request-smuggling/)\n- [POC: GitHub Issue](https://github.com/netty/netty/issues/9866)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-444",
                  "maven"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-JAVA-IONETTY-559516",
              "shortDescription": {
                "text": "High severity - HTTP Request Smuggling vulnerability in io.netty:netty-all"
              },
              "fullDescription": {
                "text": "(CVE-2020-7238) io.netty:netty-all@4.1.42.Final"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[io.netty:netty-all](https://mvnrepository.com/artifact/io.netty/netty-all) is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients.\n\nAffected versions of this package are vulnerable to HTTP Request Smuggling due to the package mishandling Transfer-Encoding whitespace (such as a `[space]Transfer-Encoding:chunked` line) and a later Content-Length header when using `HTTP/1.1`. This issue exists because of an incomplete fix for CVE-2019-16869.\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2019-20445](https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-6056420)\n\n## Remediation\nUpgrade `io.netty:netty-all` to version 4.1.44.Final or higher.\n## References\n- [GitHub PR](https://github.com/netty/netty/pull/9865)\n- [HTTP Request Smuggling Demystified - Snyk Blog](https://snyk.io/blog/demystifying-http-request-smuggling/)\n- [Netty 4.1.44 Release Notes](https://netty.io/news/2019/12/18/4-1-44-Final.html)\n- [POC: GitHub Issue](https://github.com/jdordonezn/CVE-2020-72381/issues/1)\n- [POC: Potential Exploit](https://github.com/netty/netty/issues/9861)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-444",
                  "maven"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-JAVA-IONETTY-6056420",
              "shortDescription": {
                "text": "High severity - HTTP Request Smuggling vulnerability in io.netty:netty-all"
              },
              "fullDescription": {
                "text": "(CVE-2019-20445) io.netty:netty-all@4.1.42.Final"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[io.netty:netty-all](https://mvnrepository.com/artifact/io.netty/netty-all) is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients.\n\nAffected versions of this package are vulnerable to HTTP Request Smuggling due to the package mishandling Transfer-Encoding whitespace (such as a `[space]Transfer-Encoding:chunked` line) and a later Content-Length header when using `HTTP/1.1`. This issue exists because of an incomplete fix for CVE-2019-16869.\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2020-7238](https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-559516)\n\n## Remediation\nUpgrade `io.netty:netty-all` to version 4.1.44.Final or higher.\n## References\n- [GitHub PR](https://github.com/netty/netty/pull/9865)\n- [HTTP Request Smuggling Demystified - Snyk Blog](https://snyk.io/blog/demystifying-http-request-smuggling/)\n- [Netty 4.1.44 Release Notes](https://netty.io/news/2019/12/18/4-1-44-Final.html)\n- [POC: GitHub Issue](https://github.com/jdordonezn/CVE-2020-72381/issues/1)\n- [POC: Potential Exploit](https://github.com/netty/netty/issues/9861)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-444",
                  "maven"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-1048058",
              "shortDescription": {
                "text": "Medium severity - Improper Input Validation vulnerability in org.apache.httpcomponents:httpclient"
              },
              "fullDescription": {
                "text": "(CVE-2020-13956) org.apache.httpcomponents:httpclient@4.5.8"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[org.apache.httpcomponents:httpclient](http://hc.apache.org/) is a HttpClient component of the Apache HttpComponents project.\n\nAffected versions of this package are vulnerable to Improper Input Validation. Apache HttpClient can misinterpret malformed authority component in request URIs passed to the library as `java.net.URI` object and pick the wrong target host for request execution.\n## Remediation\nUpgrade `org.apache.httpcomponents:httpclient` to version 4.5.13 or higher.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/r6dab7da30f8bf075f79ee189e33b45a197502e2676481bb8787fc0d7%40%3Cdev.hc.apache.org%3E)\n- [GitHub Commit](https://github.com/apache/httpcomponents-client/commit/894234a5aeb9958e7e466c383e4d0ded17a9a813#diff-a169c0c63c537750e3394f7e1407252053ffbc489181450a6c361cd7f8f67a22)\n- [GitHub Commit](https://github.com/apache/httpcomponents-client/commit/e628b4c5c464c2fa346385596cc78e035a91a62e)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-20",
                  "maven"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            },
            {
              "id": "SNYK-JAVA-ORGAPACHEIVY-3106929",
              "shortDescription": {
                "text": "High severity - Directory Traversal vulnerability in org.apache.ivy:ivy"
              },
              "fullDescription": {
                "text": "(CVE-2022-37866) org.apache.ivy:ivy@2.3.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Directory Traversal in the `IvyPatternHelper` class, which does not strip out `..` sequences from artifact coordinate patterns. This allows an attacker in control of the remote repository to access artifacts in locations outside the local cache or overwrite artifacts in the local cache.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `org.apache.ivy:ivy` to version 2.5.1 or higher.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/htxbr8oc464hxrgroftnz3my70whk93b)\n- [GitHub Commit](https://github.com/apache/ant-ivy/commit/3f374602d4d63691398951b9af692960d019f4d9)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-22",
                  "maven"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-JAVA-ORGAPACHEIVY-5847858",
              "shortDescription": {
                "text": "High severity - XML External Entity (XXE) Injection vulnerability in org.apache.ivy:ivy"
              },
              "fullDescription": {
                "text": "(CVE-2022-46751) org.apache.ivy:ivy@2.3.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection. When Apache Ivy parses XML files - either its own configuration, Ivy files or Apache Maven POMs - it will allow downloading external document type definitions and expand any entity references contained therein when used.\r\n\r\nThis can be used to exfiltrate data, access resources only the machine running Ivy has access to or disturb the execution of Ivy in different ways.\r\n\r\n## Workaround\r\n\r\nUsers who are unable to upgrade to the fixed version can use Java system properties to restrict the processing of external DTDs.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `org.apache.ivy:ivy` to version 2.5.2 or higher.\n## References\n- [Apache Lists](https://lists.apache.org/thread/1dj60hg5nr36kjr4p1100dwjrqookps8)\n- [Apache Lists](https://lists.apache.org/thread/9gcz4xrsn8c7o9gb377xfzvkb8jltffr)\n- [GitHub Commit](https://github.com/apache/ant-ivy/commit/2be17bc18b0e1d4123007d579e43ba1a4b6fab3d)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-611",
                  "maven"
                ],
                "cvssv3_baseScore": 8.2,
                "security-severity": "8.2"
              }
            },
            {
              "id": "SNYK-JAVA-ORGAPACHETINKERPOP-1535125",
              "shortDescription": {
                "text": "High severity - XML External Entity (XXE) Injection vulnerability in org.apache.tinkerpop:gremlin-core"
              },
              "fullDescription": {
                "text": "org.apache.tinkerpop:gremlin-core@3.4.6"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection via `GraphMLReader` as DTD and external entities were enabled by default.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `org.apache.tinkerpop:gremlin-core` to version 3.4.13, 3.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/tinkerpop/commit/7c2c4f37e261592fb42a97701ad620b5bfcb0bd7)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-611",
                  "maven"
                ],
                "cvssv3_baseScore": 7.3,
                "security-severity": "7.3"
              }
            },
            {
              "id": "SNYK-JAVA-ORGCODEHAUSGROOVY-1048694",
              "shortDescription": {
                "text": "High severity - Information Disclosure vulnerability in org.codehaus.groovy:groovy"
              },
              "fullDescription": {
                "text": "(CVE-2020-17521) org.codehaus.groovy:groovy@2.5.7"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[org.codehaus.groovy:groovy](https://mvnrepository.com/artifact/org.codehaus.groovy/groovy) is a language for the JVM\n\nAffected versions of this package are vulnerable to Information Disclosure. Groovy may create temporary directories within the OS temporary directory which is shared\r\nbetween all users on affected systems. This vulnerability only impacts Unix-like systems, and very old\r\nversions of Mac OSX and Windows.\n## Remediation\nUpgrade `org.codehaus.groovy:groovy` to version 2.4.21, 2.5.14, 3.0.7, 4.0.0-alpha-2 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/groovy/commit/bcbe5c4c76db83736166530647c024ac1e47ef28)\n- [Jira Issue](https://issues.apache.org/jira/browse/GROOVY-9824)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-379",
                  "maven"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-JAVA-ORGYAML-2806360",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in org.yaml:snakeyaml"
              },
              "fullDescription": {
                "text": "(CVE-2022-25857) org.yaml:snakeyaml@1.15"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to missing nested depth limitation for collections.\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2022-38749](https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-6056527)\n\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.31 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174)\n- [BitBucket Issues](https://bitbucket.org/snakeyaml/snakeyaml/issues/525)\n- [GitHub Commit](https://github.com/snakeyaml/snakeyaml/commit/fc300780da21f4bb92c148bc90257201220cf174)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "maven"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-JAVA-ORGYAML-3016888",
              "shortDescription": {
                "text": "Low severity - Stack-based Buffer Overflow vulnerability in org.yaml:snakeyaml"
              },
              "fullDescription": {
                "text": "(CVE-2022-38752) org.yaml:snakeyaml@1.15"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow when parsing crafted untrusted YAML files, which can lead to a denial-of-service.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.32 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/5056a448f09c46250346c338e821386caa751182)\n- [Bitbucket Issue and PoC](https://bitbucket.org/snakeyaml/snakeyaml/issues/531/stackoverflow-oss-fuzz-47081)\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47081)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-121",
                  "maven"
                ],
                "cvssv3_baseScore": 3.7,
                "security-severity": "3.7"
              }
            },
            {
              "id": "SNYK-JAVA-ORGYAML-3016889",
              "shortDescription": {
                "text": "Low severity - Stack-based Buffer Overflow vulnerability in org.yaml:snakeyaml"
              },
              "fullDescription": {
                "text": "(CVE-2022-38750) org.yaml:snakeyaml@1.15"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow in `org.yaml.snakeyaml.constructor.BaseConstructor.constructObject` when parsing crafted untrusted YAML files, which can lead to a denial-of-service.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.31 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174)\n- [Bitbucket Issue](https://bitbucket.org/snakeyaml/snakeyaml/issues/526/stackoverflow-oss-fuzz-47027)\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47027)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-121",
                  "maven"
                ],
                "cvssv3_baseScore": 3.7,
                "security-severity": "3.7"
              }
            },
            {
              "id": "SNYK-JAVA-ORGYAML-3016891",
              "shortDescription": {
                "text": "Medium severity - Stack-based Buffer Overflow vulnerability in org.yaml:snakeyaml"
              },
              "fullDescription": {
                "text": "(CVE-2022-38751) org.yaml:snakeyaml@1.15"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow when parsing crafted untrusted YAML files, which can lead to a denial-of-service.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.31 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/f3ab4e0f54c37ddb10f00b71d04187bb0ef1799c)\n- [Bitbucket Issue](https://bitbucket.org/snakeyaml/snakeyaml/issues/530/stackoverflow-oss-fuzz-47039)\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47039)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-121",
                  "maven"
                ],
                "cvssv3_baseScore": 4.3,
                "security-severity": "4.3"
              }
            },
            {
              "id": "SNYK-JAVA-ORGYAML-3113851",
              "shortDescription": {
                "text": "Low severity - Stack-based Buffer Overflow vulnerability in org.yaml:snakeyaml"
              },
              "fullDescription": {
                "text": "(CVE-2022-41854) org.yaml:snakeyaml@1.15"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow when supplied with untrusted input, due to improper limitation for incoming data.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.32 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/72dfa9f1074abe2b8a6c8776bee4476b0aed02e3)\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50355)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-121",
                  "maven"
                ],
                "cvssv3_baseScore": 3.7,
                "security-severity": "3.7"
              }
            },
            {
              "id": "SNYK-JAVA-ORGYAML-3152153",
              "shortDescription": {
                "text": "Medium severity - Arbitrary Code Execution vulnerability in org.yaml:snakeyaml"
              },
              "fullDescription": {
                "text": "(CVE-2022-1471) org.yaml:snakeyaml@1.15"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution in the `Constructor` class, which does not restrict which types can be deserialized. This vulnerability is exploitable by an attacker who provides a malicious YAML file for deserialization, which circumvents the `SafeConstructor` class. \r\n\r\nThe maintainers of the library contend that the application's trust would already have had to be compromised or established and therefore dispute the risk associated with this issue on the basis that there is a high bar for exploitation.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 2.0 or higher.\n## References\n- [BitBucket Changelog](https://bitbucket.org/snakeyaml/snakeyaml/wiki/Changes)\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/2b8d47c8bcfd402e7a682b7b2674e8d0cb25e522)\n- [Bitbucket Issue](https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in)\n- [BitBucket Issue](https://bitbucket.org/snakeyaml/snakeyaml/issues/565/do-not-allow-global-tags-by-default)\n- [BitBucket PR](https://bitbucket.org/snakeyaml/snakeyaml/pull-requests/39)\n- [BitBucket PR](https://bitbucket.org/snakeyaml/snakeyaml/pull-requests/44)\n- [PoC](https://github.com/1fabunicorn/SnakeYAML-CVE-2022-1471-POC)\n- [Snyk Blog - Technical Deepdive](https://snyk.io/blog/unsafe-deserialization-snakeyaml-java-cve-2022-1471/)\n- [Vulnerable Class](https://github.com/snakeyaml/snakeyaml/blob/master/src/main/java/org/yaml/snakeyaml/constructor/Constructor.java)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-20",
                  "maven"
                ],
                "cvssv3_baseScore": 6.6,
                "security-severity": "6.6"
              }
            },
            {
              "id": "SNYK-JAVA-ORGYAML-537645",
              "shortDescription": {
                "text": "Medium severity - Denial of Service (DoS) vulnerability in org.yaml:snakeyaml"
              },
              "fullDescription": {
                "text": "(CVE-2017-18640) org.yaml:snakeyaml@1.15"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.\r\n\r\n*Note* While the Maintainer acknowledges the existence of the issue, they believe it should be solved by sanitizing the `inputStream` to the parser\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.26 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/asomov/snakeyaml/commits/da11ddbd91c1f8392ea932b37fa48110fa54ed8c)\n- [Maintainer Report](https://bitbucket.org/asomov/snakeyaml/wiki/Billion%20laughs%20attack)\n- [POC: Bitbucket Issue](https://bitbucket.org/asomov/snakeyaml/issues/377/allow-configuration-for-preventing-billion)\n- [Proof Of Concept](https://bitbucket.org/asomov/snakeyaml/commits/04378d05777d21d114a9cdc24976ad49c8919222)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-189",
                  "maven"
                ],
                "cvssv3_baseScore": 5.4,
                "security-severity": "5.4"
              }
            },
            {
              "id": "SNYK-JAVA-ORGYAML-6056527",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in org.yaml:snakeyaml"
              },
              "fullDescription": {
                "text": "(CVE-2022-38749) org.yaml:snakeyaml@1.15"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to missing nested depth limitation for collections.\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2022-25857](https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-2806360)\n\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.31 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174)\n- [BitBucket Issues](https://bitbucket.org/snakeyaml/snakeyaml/issues/525)\n- [GitHub Commit](https://github.com/snakeyaml/snakeyaml/commit/fc300780da21f4bb92c148bc90257201220cf174)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "maven"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1009829",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1047324",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1048302",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1052449",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1052450",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1054588",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056414",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056416",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056417",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056418",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056419",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056420",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056421",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056424",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056425",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056426",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056427",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1061931",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-2421244",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-3038424",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-3038426",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-540500",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-548451",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-559094",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-559106",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-560762",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-560766",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561362",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561373",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561585",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561586",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561587",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-564887",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-564888",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-570625",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572300",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572314",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572316",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-608664",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.fasterxml.jackson.core:jackson-databind package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-shaded@3.4.6"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-shaded@3.4.6"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMGOOGLEGUAVA-1015415",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable com.google.guava:guava package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.google.guava:guava@18.0"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to com.google.guava:guava@30.0-android"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "com.google.guava:guava@30.0-android"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMGOOGLEGUAVA-32236",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable com.google.guava:guava package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.google.guava:guava@18.0"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to com.google.guava:guava@24.1.1-android"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "com.google.guava:guava@24.1.1-android"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMGOOGLEGUAVA-5710356",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable com.google.guava:guava package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.google.guava:guava@18.0"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to com.google.guava:guava@32.0.0-android"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "com.google.guava:guava@32.0.0-android"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMHAZELCAST-1018909",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable com.hazelcast:hazelcast package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.hazelcast:hazelcast@3.12.8"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to com.hazelcast:hazelcast@3.12.11"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "com.hazelcast:hazelcast@3.12.11"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMHAZELCAST-3183870",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.hazelcast:hazelcast package with a critical severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.hazelcast:hazelcast@3.12.8"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to com.hazelcast:hazelcast@3.12.13"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "com.hazelcast:hazelcast@3.12.13"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMHAZELCAST-6249443",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable com.hazelcast:hazelcast package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.hazelcast:hazelcast@3.12.8"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to com.hazelcast:hazelcast@5.2.5"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "com.hazelcast:hazelcast@5.2.5"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMHAZELCAST-6282853",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable com.hazelcast:hazelcast package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "com.hazelcast:hazelcast@3.12.8"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to com.hazelcast:hazelcast@5.2.5"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "com.hazelcast:hazelcast@5.2.5"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-COMMONSCODEC-561518",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable commons-codec:commons-codec package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "commons-codec:commons-codec@1.12"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to commons-codec:commons-codec@1.13"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "commons-codec:commons-codec@1.13"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-IONETTY-559515",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable io.netty:netty-all package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "io.netty:netty-all@4.1.42.Final"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to io.netty:netty-all@4.1.44.Final"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "io.netty:netty-all@4.1.44.Final"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-IONETTY-559516",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable io.netty:netty-all package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "io.netty:netty-all@4.1.42.Final"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to io.netty:netty-all@4.1.44.Final"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "io.netty:netty-all@4.1.44.Final"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-IONETTY-6056420",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable io.netty:netty-all package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "io.netty:netty-all@4.1.42.Final"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to io.netty:netty-all@4.1.44.Final"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "io.netty:netty-all@4.1.44.Final"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-1048058",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable org.apache.httpcomponents:httpclient package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.apache.httpcomponents:httpclient@4.5.8"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.httpcomponents:httpclient@4.5.13"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.httpcomponents:httpclient@4.5.13"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGAPACHEIVY-3106929",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable org.apache.ivy:ivy package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.apache.ivy:ivy@2.3.0"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.ivy:ivy@2.5.1"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.ivy:ivy@2.5.1"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGAPACHEIVY-5847858",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable org.apache.ivy:ivy package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.apache.ivy:ivy@2.3.0"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.ivy:ivy@2.5.2"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.ivy:ivy@2.5.2"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGAPACHETINKERPOP-1535125",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable org.apache.tinkerpop:gremlin-core package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.apache.tinkerpop:gremlin-core@3.4.6"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.apache.tinkerpop:gremlin-core@3.4.13"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.apache.tinkerpop:gremlin-core@3.4.13"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGCODEHAUSGROOVY-1048694",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable org.codehaus.groovy:groovy package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.codehaus.groovy:groovy@2.5.7"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.codehaus.groovy:groovy@2.5.14"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.codehaus.groovy:groovy@2.5.14"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGYAML-2806360",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable org.yaml:snakeyaml package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.yaml:snakeyaml@1.15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.yaml:snakeyaml@1.31"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.yaml:snakeyaml@1.31"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGYAML-3016888",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable org.yaml:snakeyaml package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.yaml:snakeyaml@1.15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.yaml:snakeyaml@1.32"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.yaml:snakeyaml@1.32"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGYAML-3016889",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable org.yaml:snakeyaml package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.yaml:snakeyaml@1.15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.yaml:snakeyaml@1.31"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.yaml:snakeyaml@1.31"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGYAML-3016891",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable org.yaml:snakeyaml package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.yaml:snakeyaml@1.15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.yaml:snakeyaml@1.31"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.yaml:snakeyaml@1.31"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGYAML-3113851",
          "level": "note",
          "message": {
            "text": "This file introduces a vulnerable org.yaml:snakeyaml package with a low severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.yaml:snakeyaml@1.15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.yaml:snakeyaml@1.32"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.yaml:snakeyaml@1.32"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGYAML-3152153",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable org.yaml:snakeyaml package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.yaml:snakeyaml@1.15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.yaml:snakeyaml@2.0"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.yaml:snakeyaml@2.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGYAML-537645",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable org.yaml:snakeyaml package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.yaml:snakeyaml@1.15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.yaml:snakeyaml@1.26"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.yaml:snakeyaml@1.26"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-JAVA-ORGYAML-6056527",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable org.yaml:snakeyaml package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/orientdb/lib"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "org.yaml:snakeyaml@1.15"
                }
              ]
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Upgrade to org.yaml:snakeyaml@1.31"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "/orientdb/lib"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 1
                      },
                      "insertedContent": {
                        "text": "org.yaml:snakeyaml@1.31"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 2
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    }
  ]
}
