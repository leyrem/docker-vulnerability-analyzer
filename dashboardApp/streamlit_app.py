import streamlit as st
import pandas as pd
import altair as alt
import plotly.express as px
import json


# Page config
st.set_page_config(
    page_title="Docker Image Vulnerability Analysis Dashboard",
    page_icon="üèÇ",
    layout="wide",
    initial_sidebar_state="expanded")

alt.themes.enable("dark")

# Load data
df_reshaped = pd.read_csv('/Users/leyremonreal/Documents/Master/thesis/thesis_crawler/imagesOfficial.csv')
print(df_reshaped.columns)

# Create dropdown widgets on a sidebar for users  to select data
with st.sidebar:
    st.title('üèÇ Docker Image Vulnerability Analysis Dashboard')
    
    # Select a image repo name
    image_name_list = list(df_reshaped.Name.unique())
    selected_name = st.selectbox('Select a image repo', image_name_list, index=len(image_name_list)-1)
    df_selected_name = df_reshaped[df_reshaped.Name == selected_name]
    
    # Select a tag
    image_tag_list = list(df_selected_name.TagName)
    selected_tag = st.selectbox('Select a tag for the selected image repo', image_tag_list, index=len(image_tag_list)-1)
    df_selected_tag = df_selected_name[df_selected_name.TagName == selected_tag]
    
    file_name = "/Users/leyremonreal/Documents/Master/thesis/docker-vulnerability-analyzer/out/analysis/official/" + selected_name  +  ":" + selected_tag + "_analysis.json"
    
    
    with open(file_name) as file:
        dataJSON = json.load(file)
    
    # Create a DataFrame from the JSON data    
    df_cves_detected_all_scanners = pd.json_normalize(dataJSON, 'cves_detected_all_scanners')
    df_unique_cves = pd.json_normalize(dataJSON, 'unique_cves')


    color_theme_list = ['blues', 'cividis', 'greens', 'inferno', 'magma', 'plasma', 'reds', 'rainbow', 'turbo', 'viridis']
    selected_color_theme = st.selectbox('Select a color theme', color_theme_list)

# Display the selected options for debugging
st.write("Selected Image Repo:", selected_name)
st.write("Selected Tag:", selected_tag)

# Display the filtered dataframe for debugging
st.write("DataFrame CVES_detected_all_scanners:")
st.write(df_cves_detected_all_scanners)

st.write("DataFrame unique_cves:")
st.write(df_unique_cves)
